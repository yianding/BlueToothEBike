{"version":3,"sources":["index.js","ethers.js","_version.js","abi/index.js","abi/bytes32.js","utils/index.js","utils/base58.js","utils/data.js","utils/errors.js","utils/properties.js","utils/maths.js","utils/base64.js","utils/rlp-decode.js","utils/rlp-encode.js","utils/units.js","utils/utf8.js","utils/uuid.js","address/index.js","address/address.js","crypto/index.js","crypto/hmac.js","crypto/crypto.js","crypto/keccak.js","crypto/ripemd160.js","crypto/pbkdf2.js","crypto/random.js","crypto/scrypt.js","crypto/sha2.js","address/contract-address.js","address/checks.js","constants/index.js","constants/addresses.js","constants/hashes.js","constants/numbers.js","constants/strings.js","contract/index.js","hash/index.js","hash/id.js","hash/namehash.js","hash/message.js","transaction/index.js","transaction/accesslist.js","transaction/address.js","hash/solidity.js","providers/index.js","providers/community.js","providers/default-provider.js","providers/provider-cloudflare.js","wallet/index.js","wallet/json-crowdsale.js","wallet/utils.js","wallet/json-keystore.js","wordlists/index.js","wordlists/lang-en.js","wordlists/wordlists.js","wordlists/lang-cz.js","wordlists/lang-es.js","wordlists/lang-fr.js","wordlists/lang-ja.js","wordlists/lang-ko.js","wordlists/lang-it.js","wordlists/lang-pt.js","wordlists/lang-zh.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ACHA,AFMA,ADGA;AELA,ACHA,AFMA,ADGA;AELA,ACHA,AFMA,ADGA;AELA,AENA,ADGA,AFMA,ADGA;AELA,AENA,ADGA,AFMA,ADGA;AELA,AENA,ADGA,AFMA,ADGA;AIXA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AKfA,ADGA;ADIA,ADGA,AFMA,AKfA,ADGA;ADIA,ADGA,AFMA,AKfA,ADGA;ADIA,ADGA,AFMA,AKfA,ACHA,AFMA;ADIA,ADGA,AFMA,AKfA,ACHA,AFMA;ADIA,ADGA,AFMA,AKfA,ACHA,AFMA;ADIA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA;ADIA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA;ADIA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA;ADIA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AIZA;ALgBA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AIZA;ALgBA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AIZA;ALgBA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,ACHA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA;ALgBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA;ARyBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA;ARyBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA;ARyBA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA;AT4BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA;AT4BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA;AT4BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA;AV+BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA;AV+BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA;AV+BA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AXkCA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AXkCA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AXkCA,ADGA,AFMA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,AHSA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,AHSA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,AavCA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,AavCA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,AavCA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,Ac1CA,ADGA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,Ac1CA,ADGA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AZqCA,Ac1CA,ADGA,AhBgDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AENA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AENA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AENA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AlBsDA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ArB+DA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ArB+DA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ArB+DA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ACHA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ACHA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AIZA,ADGA,ADGA,AGTA,ACHA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ADGA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ADGA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ADGA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ACHA,AFMA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ACHA,AFMA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ACHA,AFMA,AtBkEA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,AzB2EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,ADGA,AGTA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,AzB2EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,AENA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,AzB2EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,AENA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA,ACHA;AELA,AENA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AGRA,AENA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AGRA,AU9BA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AGRA,AU9BA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AKfA,AKfA,AJYA,ACHA,AHSA,AKfA,ADGA,AGTA,ACHA,ACHA,ACHA;AGRA,AU9BA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AU9BA,AJYA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AU9BA,AJYA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AU9BA,AJYA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,ARwBA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AU9BA,AJYA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,AENA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AU9BA,AJYA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,AENA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AHSA,AKfA,AENA,ACHA,ACHA,ACHA;AGRA,AWjCA,ADGA,AENA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AHSA,AKfA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ADGA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ADGA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ADGA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AV8BA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AGTA,AbuCA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AGTA,AbuCA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AGTA,AbuCA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AGTA,ACHA,AFMA,AGTA,ACHA,Ad0CA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AIZA,AFMA,AGTA,ACHA,Ad0CA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AIZA,AFMA,AGTA,ACHA,Ad0CA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AIZA,AFMA,AGTA,ACHA,ACHA,Af6CA,ADGA,AGTA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,Af6CA,AENA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,Af6CA,AENA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AMlBA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,Af6CA,AENA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AmCzGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,Af6CA,AENA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AmCzGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,Af6CA,AENA,AENA,ACHA,AFMA,AGTA,ACHA,A1B8EA,AmCzGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AENA,AGTA,ACHA,ACHA,AbuCA,AENA,ACHA,ACHA,ACHA,A1B8EA,AoC5GA,ADGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,ACHA,ACHA,ACHA,A1B8EA,AoC5GA,ADGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,A7BuFA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AENA,A/B6FA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AENA,A/B6FA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AENA,A/B6FA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AbuCA,AENA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,A/B6FA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,ACHA,ACHA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,A/B6FA,ACHA,AENA,AENA,AENA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,A/B6FA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AENA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AENA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AENA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ADGA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AXiCA,AENA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ADGA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AT2BA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ADGA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AT2BA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AT2BA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,AENA,AT2BA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AGTA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,APqBA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AKfA,AFMA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,APqBA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AKfA,AFMA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,APqBA,ACHA,A1B8EA,AoC5GA,ADGA,AGTA,ADGA,AKfA,AFMA,ACHA,AFMA,AjCmGA,ACHA,AENA,AIZA,ACHA;AGRA,AWjCA,ADGA,AKfA,APqBA,ACHA,A1B8EA,AmCzGA,AGTA,ADGA,AKfA,ACHA,AHSA,ACHA,AFMA,AjCmGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AmCzGA,AGTA,ADGA,AKfA,ACHA,AHSA,ACHA,AFMA,AjCmGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AmCzGA,AGTA,ADGA,AKfA,ACHA,AHSA,ACHA,AFMA,AjCmGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ADGA,AHSA,ACHA,AFMA,AjCmGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ADGA,AHSA,ACHA,AFMA,AjCmGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ADGA,AHSA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AHSA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AHSA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AHSA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA;AGRA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA;A9B2FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA;A9B2FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA;A9B2FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA;A/B8FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA;A/B8FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA;A/B8FA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,ACHA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,ACHA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,ACHA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,ACHA,AnCyGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA;AhCiGA,AWjCA,ADGA,AFMA,ACHA,A1B8EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA;AlCuGA,AWjCA,ADGA,AFMA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA;AlCuGA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA;AlCuGA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA;AnC0GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA;AnC0GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA;AnC0GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,ANkBA,AlCsGA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,AxCwHA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,ACHA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,AxCwHA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,AGTA,AxCwHA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,ACHA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,AFMA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,AFMA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,AFMA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AHSA;ApC6GA,AWjCA,AHSA,AzB2EA,AsClHA,ADGA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AHSA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AHSA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AENA,ACHA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,AJYA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,AJYA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,AJYA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,ACHA,ALeA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,ACHA,ALeA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,ACHA,ACHA,ALeA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,ALeA;ApC6GA,AWjCA,AHSA,AzB2EA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,ALeA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,ALeA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,APqBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,APqBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,APqBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AiCnGA,ACHA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AENA,AGTA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,AFMA,AGTA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AKfA,ACHA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA,ARwBA;ApC6GA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AMlBA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AMlBA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AMlBA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AMlBA,ACHA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,AqC/GA,AKfA,AGTA,AFMA,ArC+GA,ACHA,AENA,AKfA,AkCtGA,AENA,ADGA,AOrBA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AkCtGA,AENA,ADGA,AOrBA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AWjCA,A5BoFA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AkCtGA,AENA,ADGA,AOrBA,AGTA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AjBmDA,A0C9HA,AGTA,AFMA,ApC4GA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;A5CqIA,AyB3EA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AU9BA,AFMA,ACHA,AENA,ACHA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AENA,ACHA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AENA,ACHA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AENA,ACHA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AnB0DA,AGTA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,AtCkHA,AENA,AKfA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,ACHA,AGTA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,AIZA;AhBiDA,A/B6FA,AoC5GA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA,AIZA;AhBiDA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,ADGA,AQxBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;AZqCA,AKfA,AOrBA;APsBA,AOrBA;APsBA,AOrBA;APsfile":"index.js","sourcesContent":["\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethers = void 0;\nconst tslib_1 = require(\"tslib\");\n/**\n *  The Application Programming Interface (API) is the collection of\n *  functions, classes and types offered by the Ethers library.\n *\n *  @_section: api:Application Programming Interface  [about-api]\n *  @_navTitle: API\n */\nconst ethers = tslib_1.__importStar(require(\"./ethers.js\"));\nexports.ethers = ethers;\ntslib_1.__exportStar(require(\"./ethers.js\"), exports);\n//# sourceMappingURL=index.js.map","\n/////////////////////////////\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = exports.keccak256 = exports.randomBytes = exports.computeHmac = exports.UndecodedEventLog = exports.EventLog = exports.ContractUnknownEventPayload = exports.ContractTransactionResponse = exports.ContractTransactionReceipt = exports.ContractEventPayload = exports.ContractFactory = exports.Contract = exports.BaseContract = exports.MessagePrefix = exports.EtherSymbol = exports.ZeroHash = exports.N = exports.MaxInt256 = exports.MinInt256 = exports.MaxUint256 = exports.WeiPerEther = exports.ZeroAddress = exports.resolveAddress = exports.isAddress = exports.isAddressable = exports.getCreate2Address = exports.getCreateAddress = exports.getIcapAddress = exports.getAddress = exports.Typed = exports.TransactionDescription = exports.Result = exports.LogDescription = exports.Interface = exports.Indexed = exports.ErrorDescription = exports.checkResultErrors = exports.StructFragment = exports.ParamType = exports.NamedFragment = exports.FunctionFragment = exports.FallbackFragment = exports.Fragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.AbiCoder = exports.encodeBytes32String = exports.decodeBytes32String = exports.version = void 0;\nexports.EnsPlugin = exports.Network = exports.EnsResolver = exports.WebSocketProvider = exports.SocketProvider = exports.IpcSocketProvider = exports.QuickNodeProvider = exports.PocketProvider = exports.InfuraWebSocketProvider = exports.InfuraProvider = exports.EtherscanProvider = exports.CloudflareProvider = exports.ChainstackProvider = exports.AnkrProvider = exports.AlchemyProvider = exports.BrowserProvider = exports.JsonRpcSigner = exports.JsonRpcProvider = exports.JsonRpcApiProvider = exports.FallbackProvider = exports.AbstractProvider = exports.VoidSigner = exports.NonceManager = exports.AbstractSigner = exports.TransactionResponse = exports.TransactionReceipt = exports.Log = exports.FeeData = exports.Block = exports.getDefaultProvider = exports.verifyTypedData = exports.TypedDataEncoder = exports.solidityPackedSha256 = exports.solidityPackedKeccak256 = exports.solidityPacked = exports.verifyMessage = exports.hashMessage = exports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = exports.id = exports.SigningKey = exports.Signature = exports.lock = exports.scryptSync = exports.scrypt = exports.pbkdf2 = exports.sha512 = exports.sha256 = void 0;\nexports.getUint = exports.getNumber = exports.getBigInt = exports.FixedNumber = exports.FetchCancelSignal = exports.FetchResponse = exports.FetchRequest = exports.EventPayload = exports.isError = exports.isCallException = exports.makeError = exports.assertPrivate = exports.assertNormalize = exports.assertArgumentCount = exports.assertArgument = exports.assert = exports.resolveProperties = exports.defineProperties = exports.zeroPadValue = exports.zeroPadBytes = exports.stripZerosLeft = exports.isBytesLike = exports.isHexString = exports.hexlify = exports.getBytesCopy = exports.getBytes = exports.dataSlice = exports.dataLength = exports.concat = exports.encodeBase64 = exports.decodeBase64 = exports.encodeBase58 = exports.decodeBase58 = exports.Transaction = exports.recoverAddress = exports.computeAddress = exports.accessListify = exports.showThrottleMessage = exports.copyRequest = exports.UnmanagedSubscriber = exports.SocketSubscriber = exports.SocketPendingSubscriber = exports.SocketEventSubscriber = exports.SocketBlockSubscriber = exports.MulticoinProviderPlugin = exports.NetworkPlugin = exports.GasCostPlugin = exports.FetchUrlFeeDataNetworkPlugin = exports.FeeDataNetworkPlugin = exports.EtherscanPlugin = void 0;\nexports.wordlists = exports.WordlistOwlA = exports.WordlistOwl = exports.LangEn = exports.Wordlist = exports.encryptKeystoreJsonSync = exports.encryptKeystoreJson = exports.decryptKeystoreJson = exports.decryptKeystoreJsonSync = exports.decryptCrowdsaleJson = exports.isKeystoreJson = exports.isCrowdsaleJson = exports.getIndexedAccountPath = exports.getAccountPath = exports.defaultPath = exports.Wallet = exports.HDNodeVoidWallet = exports.HDNodeWallet = exports.BaseWallet = exports.Mnemonic = exports.uuidV4 = exports.encodeRlp = exports.decodeRlp = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.mask = exports.toTwos = exports.fromTwos = exports.toQuantity = exports.toNumber = exports.toBeHex = exports.toBigInt = exports.toBeArray = void 0;\nvar _version_js_1 = require(\"./_version.js\");\nObject.defineProperty(exports, \"version\", { enumerable: true, get: function () { return _version_js_1.version; } });\nvar index_js_1 = require(\"./abi/index.js\");\nObject.defineProperty(exports, \"decodeBytes32String\", { enumerable: true, get: function () { return index_js_1.decodeBytes32String; } });\nObject.defineProperty(exports, \"encodeBytes32String\", { enumerable: true, get: function () { return index_js_1.encodeBytes32String; } });\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return index_js_1.AbiCoder; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return index_js_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return index_js_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return index_js_1.EventFragment; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return index_js_1.Fragment; } });\nObject.defineProperty(exports, \"FallbackFragment\", { enumerable: true, get: function () { return index_js_1.FallbackFragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return index_js_1.FunctionFragment; } });\nObject.defineProperty(exports, \"NamedFragment\", { enumerable: true, get: function () { return index_js_1.NamedFragment; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return index_js_1.ParamType; } });\nObject.defineProperty(exports, \"StructFragment\", { enumerable: true, get: function () { return index_js_1.StructFragment; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return index_js_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ErrorDescription\", { enumerable: true, get: function () { return index_js_1.ErrorDescription; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return index_js_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return index_js_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return index_js_1.LogDescription; } });\nObject.defineProperty(exports, \"Result\", { enumerable: true, get: function () { return index_js_1.Result; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return index_js_1.TransactionDescription; } });\nObject.defineProperty(exports, \"Typed\", { enumerable: true, get: function () { return index_js_1.Typed; } });\nvar index_js_2 = require(\"./address/index.js\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return index_js_2.getAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return index_js_2.getIcapAddress; } });\nObject.defineProperty(exports, \"getCreateAddress\", { enumerable: true, get: function () { return index_js_2.getCreateAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return index_js_2.getCreate2Address; } });\nObject.defineProperty(exports, \"isAddressable\", { enumerable: true, get: function () { return index_js_2.isAddressable; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return index_js_2.isAddress; } });\nObject.defineProperty(exports, \"resolveAddress\", { enumerable: true, get: function () { return index_js_2.resolveAddress; } });\nvar index_js_3 = require(\"./constants/index.js\");\nObject.defineProperty(exports, \"ZeroAddress\", { enumerable: true, get: function () { return index_js_3.ZeroAddress; } });\nObject.defineProperty(exports, \"WeiPerEther\", { enumerable: true, get: function () { return index_js_3.WeiPerEther; } });\nObject.defineProperty(exports, \"MaxUint256\", { enumerable: true, get: function () { return index_js_3.MaxUint256; } });\nObject.defineProperty(exports, \"MinInt256\", { enumerable: true, get: function () { return index_js_3.MinInt256; } });\nObject.defineProperty(exports, \"MaxInt256\", { enumerable: true, get: function () { return index_js_3.MaxInt256; } });\nObject.defineProperty(exports, \"N\", { enumerable: true, get: function () { return index_js_3.N; } });\nObject.defineProperty(exports, \"ZeroHash\", { enumerable: true, get: function () { return index_js_3.ZeroHash; } });\nObject.defineProperty(exports, \"EtherSymbol\", { enumerable: true, get: function () { return index_js_3.EtherSymbol; } });\nObject.defineProperty(exports, \"MessagePrefix\", { enumerable: true, get: function () { return index_js_3.MessagePrefix; } });\nvar index_js_4 = require(\"./contract/index.js\");\nObject.defineProperty(exports, \"BaseContract\", { enumerable: true, get: function () { return index_js_4.BaseContract; } });\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return index_js_4.Contract; } });\nObject.defineProperty(exports, \"ContractFactory\", { enumerable: true, get: function () { return index_js_4.ContractFactory; } });\nObject.defineProperty(exports, \"ContractEventPayload\", { enumerable: true, get: function () { return index_js_4.ContractEventPayload; } });\nObject.defineProperty(exports, \"ContractTransactionReceipt\", { enumerable: true, get: function () { return index_js_4.ContractTransactionReceipt; } });\nObject.defineProperty(exports, \"ContractTransactionResponse\", { enumerable: true, get: function () { return index_js_4.ContractTransactionResponse; } });\nObject.defineProperty(exports, \"ContractUnknownEventPayload\", { enumerable: true, get: function () { return index_js_4.ContractUnknownEventPayload; } });\nObject.defineProperty(exports, \"EventLog\", { enumerable: true, get: function () { return index_js_4.EventLog; } });\nObject.defineProperty(exports, \"UndecodedEventLog\", { enumerable: true, get: function () { return index_js_4.UndecodedEventLog; } });\nvar index_js_5 = require(\"./crypto/index.js\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return index_js_5.computeHmac; } });\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return index_js_5.randomBytes; } });\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return index_js_5.keccak256; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return index_js_5.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return index_js_5.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return index_js_5.sha512; } });\nObject.defineProperty(exports, \"pbkdf2\", { enumerable: true, get: function () { return index_js_5.pbkdf2; } });\nObject.defineProperty(exports, \"scrypt\", { enumerable: true, get: function () { return index_js_5.scrypt; } });\nObject.defineProperty(exports, \"scryptSync\", { enumerable: true, get: function () { return index_js_5.scryptSync; } });\nObject.defineProperty(exports, \"lock\", { enumerable: true, get: function () { return index_js_5.lock; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return index_js_5.Signature; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return index_js_5.SigningKey; } });\nvar index_js_6 = require(\"./hash/index.js\");\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return index_js_6.id; } });\nObject.defineProperty(exports, \"ensNormalize\", { enumerable: true, get: function () { return index_js_6.ensNormalize; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return index_js_6.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return index_js_6.namehash; } });\nObject.defineProperty(exports, \"dnsEncode\", { enumerable: true, get: function () { return index_js_6.dnsEncode; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return index_js_6.hashMessage; } });\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return index_js_6.verifyMessage; } });\nObject.defineProperty(exports, \"solidityPacked\", { enumerable: true, get: function () { return index_js_6.solidityPacked; } });\nObject.defineProperty(exports, \"solidityPackedKeccak256\", { enumerable: true, get: function () { return index_js_6.solidityPackedKeccak256; } });\nObject.defineProperty(exports, \"solidityPackedSha256\", { enumerable: true, get: function () { return index_js_6.solidityPackedSha256; } });\nObject.defineProperty(exports, \"TypedDataEncoder\", { enumerable: true, get: function () { return index_js_6.TypedDataEncoder; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return index_js_6.verifyTypedData; } });\nvar index_js_7 = require(\"./providers/index.js\");\nObject.defineProperty(exports, \"getDefaultProvider\", { enumerable: true, get: function () { return index_js_7.getDefaultProvider; } });\nObject.defineProperty(exports, \"Block\", { enumerable: true, get: function () { return index_js_7.Block; } });\nObject.defineProperty(exports, \"FeeData\", { enumerable: true, get: function () { return index_js_7.FeeData; } });\nObject.defineProperty(exports, \"Log\", { enumerable: true, get: function () { return index_js_7.Log; } });\nObject.defineProperty(exports, \"TransactionReceipt\", { enumerable: true, get: function () { return index_js_7.TransactionReceipt; } });\nObject.defineProperty(exports, \"TransactionResponse\", { enumerable: true, get: function () { return index_js_7.TransactionResponse; } });\nObject.defineProperty(exports, \"AbstractSigner\", { enumerable: true, get: function () { return index_js_7.AbstractSigner; } });\nObject.defineProperty(exports, \"NonceManager\", { enumerable: true, get: function () { return index_js_7.NonceManager; } });\nObject.defineProperty(exports, \"VoidSigner\", { enumerable: true, get: function () { return index_js_7.VoidSigner; } });\nObject.defineProperty(exports, \"AbstractProvider\", { enumerable: true, get: function () { return index_js_7.AbstractProvider; } });\nObject.defineProperty(exports, \"FallbackProvider\", { enumerable: true, get: function () { return index_js_7.FallbackProvider; } });\nObject.defineProperty(exports, \"JsonRpcApiProvider\", { enumerable: true, get: function () { return index_js_7.JsonRpcApiProvider; } });\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return index_js_7.JsonRpcProvider; } });\nObject.defineProperty(exports, \"JsonRpcSigner\", { enumerable: true, get: function () { return index_js_7.JsonRpcSigner; } });\nObject.defineProperty(exports, \"BrowserProvider\", { enumerable: true, get: function () { return index_js_7.BrowserProvider; } });\nObject.defineProperty(exports, \"AlchemyProvider\", { enumerable: true, get: function () { return index_js_7.AlchemyProvider; } });\nObject.defineProperty(exports, \"AnkrProvider\", { enumerable: true, get: function () { return index_js_7.AnkrProvider; } });\nObject.defineProperty(exports, \"ChainstackProvider\", { enumerable: true, get: function () { return index_js_7.ChainstackProvider; } });\nObject.defineProperty(exports, \"CloudflareProvider\", { enumerable: true, get: function () { return index_js_7.CloudflareProvider; } });\nObject.defineProperty(exports, \"EtherscanProvider\", { enumerable: true, get: function () { return index_js_7.EtherscanProvider; } });\nObject.defineProperty(exports, \"InfuraProvider\", { enumerable: true, get: function () { return index_js_7.InfuraProvider; } });\nObject.defineProperty(exports, \"InfuraWebSocketProvider\", { enumerable: true, get: function () { return index_js_7.InfuraWebSocketProvider; } });\nObject.defineProperty(exports, \"PocketProvider\", { enumerable: true, get: function () { return index_js_7.PocketProvider; } });\nObject.defineProperty(exports, \"QuickNodeProvider\", { enumerable: true, get: function () { return index_js_7.QuickNodeProvider; } });\nObject.defineProperty(exports, \"IpcSocketProvider\", { enumerable: true, get: function () { return index_js_7.IpcSocketProvider; } });\nObject.defineProperty(exports, \"SocketProvider\", { enumerable: true, get: function () { return index_js_7.SocketProvider; } });\nObject.defineProperty(exports, \"WebSocketProvider\", { enumerable: true, get: function () { return index_js_7.WebSocketProvider; } });\nObject.defineProperty(exports, \"EnsResolver\", { enumerable: true, get: function () { return index_js_7.EnsResolver; } });\nObject.defineProperty(exports, \"Network\", { enumerable: true, get: function () { return index_js_7.Network; } });\nObject.defineProperty(exports, \"EnsPlugin\", { enumerable: true, get: function () { return index_js_7.EnsPlugin; } });\nObject.defineProperty(exports, \"EtherscanPlugin\", { enumerable: true, get: function () { return index_js_7.EtherscanPlugin; } });\nObject.defineProperty(exports, \"FeeDataNetworkPlugin\", { enumerable: true, get: function () { return index_js_7.FeeDataNetworkPlugin; } });\nObject.defineProperty(exports, \"FetchUrlFeeDataNetworkPlugin\", { enumerable: true, get: function () { return index_js_7.FetchUrlFeeDataNetworkPlugin; } });\nObject.defineProperty(exports, \"GasCostPlugin\", { enumerable: true, get: function () { return index_js_7.GasCostPlugin; } });\nObject.defineProperty(exports, \"NetworkPlugin\", { enumerable: true, get: function () { return index_js_7.NetworkPlugin; } });\nObject.defineProperty(exports, \"MulticoinProviderPlugin\", { enumerable: true, get: function () { return index_js_7.MulticoinProviderPlugin; } });\nObject.defineProperty(exports, \"SocketBlockSubscriber\", { enumerable: true, get: function () { return index_js_7.SocketBlockSubscriber; } });\nObject.defineProperty(exports, \"SocketEventSubscriber\", { enumerable: true, get: function () { return index_js_7.SocketEventSubscriber; } });\nObject.defineProperty(exports, \"SocketPendingSubscriber\", { enumerable: true, get: function () { return index_js_7.SocketPendingSubscriber; } });\nObject.defineProperty(exports, \"SocketSubscriber\", { enumerable: true, get: function () { return index_js_7.SocketSubscriber; } });\nObject.defineProperty(exports, \"UnmanagedSubscriber\", { enumerable: true, get: function () { return index_js_7.UnmanagedSubscriber; } });\nObject.defineProperty(exports, \"copyRequest\", { enumerable: true, get: function () { return index_js_7.copyRequest; } });\nObject.defineProperty(exports, \"showThrottleMessage\", { enumerable: true, get: function () { return index_js_7.showThrottleMessage; } });\nvar index_js_8 = require(\"./transaction/index.js\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return index_js_8.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return index_js_8.computeAddress; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return index_js_8.recoverAddress; } });\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return index_js_8.Transaction; } });\nvar index_js_9 = require(\"./utils/index.js\");\nObject.defineProperty(exports, \"decodeBase58\", { enumerable: true, get: function () { return index_js_9.decodeBase58; } });\nObject.defineProperty(exports, \"encodeBase58\", { enumerable: true, get: function () { return index_js_9.encodeBase58; } });\nObject.defineProperty(exports, \"decodeBase64\", { enumerable: true, get: function () { return index_js_9.decodeBase64; } });\nObject.defineProperty(exports, \"encodeBase64\", { enumerable: true, get: function () { return index_js_9.encodeBase64; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return index_js_9.concat; } });\nObject.defineProperty(exports, \"dataLength\", { enumerable: true, get: function () { return index_js_9.dataLength; } });\nObject.defineProperty(exports, \"dataSlice\", { enumerable: true, get: function () { return index_js_9.dataSlice; } });\nObject.defineProperty(exports, \"getBytes\", { enumerable: true, get: function () { return index_js_9.getBytes; } });\nObject.defineProperty(exports, \"getBytesCopy\", { enumerable: true, get: function () { return index_js_9.getBytesCopy; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return index_js_9.hexlify; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return index_js_9.isHexString; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return index_js_9.isBytesLike; } });\nObject.defineProperty(exports, \"stripZerosLeft\", { enumerable: true, get: function () { return index_js_9.stripZerosLeft; } });\nObject.defineProperty(exports, \"zeroPadBytes\", { enumerable: true, get: function () { return index_js_9.zeroPadBytes; } });\nObject.defineProperty(exports, \"zeroPadValue\", { enumerable: true, get: function () { return index_js_9.zeroPadValue; } });\nObject.defineProperty(exports, \"defineProperties\", { enumerable: true, get: function () { return index_js_9.defineProperties; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return index_js_9.resolveProperties; } });\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return index_js_9.assert; } });\nObject.defineProperty(exports, \"assertArgument\", { enumerable: true, get: function () { return index_js_9.assertArgument; } });\nObject.defineProperty(exports, \"assertArgumentCount\", { enumerable: true, get: function () { return index_js_9.assertArgumentCount; } });\nObject.defineProperty(exports, \"assertNormalize\", { enumerable: true, get: function () { return index_js_9.assertNormalize; } });\nObject.defineProperty(exports, \"assertPrivate\", { enumerable: true, get: function () { return index_js_9.assertPrivate; } });\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return index_js_9.makeError; } });\nObject.defineProperty(exports, \"isCallException\", { enumerable: true, get: function () { return index_js_9.isCallException; } });\nObject.defineProperty(exports, \"isError\", { enumerable: true, get: function () { return index_js_9.isError; } });\nObject.defineProperty(exports, \"EventPayload\", { enumerable: true, get: function () { return index_js_9.EventPayload; } });\nObject.defineProperty(exports, \"FetchRequest\", { enumerable: true, get: function () { return index_js_9.FetchRequest; } });\nObject.defineProperty(exports, \"FetchResponse\", { enumerable: true, get: function () { return index_js_9.FetchResponse; } });\nObject.defineProperty(exports, \"FetchCancelSignal\", { enumerable: true, get: function () { return index_js_9.FetchCancelSignal; } });\nObject.defineProperty(exports, \"FixedNumber\", { enumerable: true, get: function () { return index_js_9.FixedNumber; } });\nObject.defineProperty(exports, \"getBigInt\", { enumerable: true, get: function () { return index_js_9.getBigInt; } });\nObject.defineProperty(exports, \"getNumber\", { enumerable: true, get: function () { return index_js_9.getNumber; } });\nObject.defineProperty(exports, \"getUint\", { enumerable: true, get: function () { return index_js_9.getUint; } });\nObject.defineProperty(exports, \"toBeArray\", { enumerable: true, get: function () { return index_js_9.toBeArray; } });\nObject.defineProperty(exports, \"toBigInt\", { enumerable: true, get: function () { return index_js_9.toBigInt; } });\nObject.defineProperty(exports, \"toBeHex\", { enumerable: true, get: function () { return index_js_9.toBeHex; } });\nObject.defineProperty(exports, \"toNumber\", { enumerable: true, get: function () { return index_js_9.toNumber; } });\nObject.defineProperty(exports, \"toQuantity\", { enumerable: true, get: function () { return index_js_9.toQuantity; } });\nObject.defineProperty(exports, \"fromTwos\", { enumerable: true, get: function () { return index_js_9.fromTwos; } });\nObject.defineProperty(exports, \"toTwos\", { enumerable: true, get: function () { return index_js_9.toTwos; } });\nObject.defineProperty(exports, \"mask\", { enumerable: true, get: function () { return index_js_9.mask; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return index_js_9.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return index_js_9.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return index_js_9.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return index_js_9.parseUnits; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return index_js_9.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return index_js_9.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return index_js_9.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return index_js_9.Utf8ErrorFuncs; } });\nObject.defineProperty(exports, \"decodeRlp\", { enumerable: true, get: function () { return index_js_9.decodeRlp; } });\nObject.defineProperty(exports, \"encodeRlp\", { enumerable: true, get: function () { return index_js_9.encodeRlp; } });\nObject.defineProperty(exports, \"uuidV4\", { enumerable: true, get: function () { return index_js_9.uuidV4; } });\nvar index_js_10 = require(\"./wallet/index.js\");\nObject.defineProperty(exports, \"Mnemonic\", { enumerable: true, get: function () { return index_js_10.Mnemonic; } });\nObject.defineProperty(exports, \"BaseWallet\", { enumerable: true, get: function () { return index_js_10.BaseWallet; } });\nObject.defineProperty(exports, \"HDNodeWallet\", { enumerable: true, get: function () { return index_js_10.HDNodeWallet; } });\nObject.defineProperty(exports, \"HDNodeVoidWallet\", { enumerable: true, get: function () { return index_js_10.HDNodeVoidWallet; } });\nObject.defineProperty(exports, \"Wallet\", { enumerable: true, get: function () { return index_js_10.Wallet; } });\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return index_js_10.defaultPath; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return index_js_10.getAccountPath; } });\nObject.defineProperty(exports, \"getIndexedAccountPath\", { enumerable: true, get: function () { return index_js_10.getIndexedAccountPath; } });\nObject.defineProperty(exports, \"isCrowdsaleJson\", { enumerable: true, get: function () { return index_js_10.isCrowdsaleJson; } });\nObject.defineProperty(exports, \"isKeystoreJson\", { enumerable: true, get: function () { return index_js_10.isKeystoreJson; } });\nObject.defineProperty(exports, \"decryptCrowdsaleJson\", { enumerable: true, get: function () { return index_js_10.decryptCrowdsaleJson; } });\nObject.defineProperty(exports, \"decryptKeystoreJsonSync\", { enumerable: true, get: function () { return index_js_10.decryptKeystoreJsonSync; } });\nObject.defineProperty(exports, \"decryptKeystoreJson\", { enumerable: true, get: function () { return index_js_10.decryptKeystoreJson; } });\nObject.defineProperty(exports, \"encryptKeystoreJson\", { enumerable: true, get: function () { return index_js_10.encryptKeystoreJson; } });\nObject.defineProperty(exports, \"encryptKeystoreJsonSync\", { enumerable: true, get: function () { return index_js_10.encryptKeystoreJsonSync; } });\nvar index_js_11 = require(\"./wordlists/index.js\");\nObject.defineProperty(exports, \"Wordlist\", { enumerable: true, get: function () { return index_js_11.Wordlist; } });\nObject.defineProperty(exports, \"LangEn\", { enumerable: true, get: function () { return index_js_11.LangEn; } });\nObject.defineProperty(exports, \"WordlistOwl\", { enumerable: true, get: function () { return index_js_11.WordlistOwl; } });\nObject.defineProperty(exports, \"WordlistOwlA\", { enumerable: true, get: function () { return index_js_11.WordlistOwlA; } });\nObject.defineProperty(exports, \"wordlists\", { enumerable: true, get: function () { return index_js_11.wordlists; } });\n// dummy change; to pick-up ws security issue changes\n//# sourceMappingURL=ethers.js.map","\n/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\n/**\n *  The current version of Ethers.\n */\nexports.version = \"6.13.4\";\n//# sourceMappingURL=_version.js.map","\n/**\n *  The Application Binary Interface (ABI) describes how method input\n *  parameters should be encoded, their results decoded, and how to\n *  decode events and errors.\n *\n *  See [About ABIs](docs-abi) for more details how they are used.\n *\n *  @_section api/abi:Application Binary Interface  [about-abi]\n *  @_navTitle: ABI\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Typed = exports.Result = exports.TransactionDescription = exports.LogDescription = exports.ErrorDescription = exports.Interface = exports.Indexed = exports.checkResultErrors = exports.StructFragment = exports.ParamType = exports.NamedFragment = exports.FunctionFragment = exports.Fragment = exports.FallbackFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.encodeBytes32String = exports.decodeBytes32String = exports.AbiCoder = void 0;\n//////\nvar abi_coder_js_1 = require(\"./abi-coder.js\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_coder_js_1.AbiCoder; } });\nvar bytes32_js_1 = require(\"./bytes32.js\");\nObject.defineProperty(exports, \"decodeBytes32String\", { enumerable: true, get: function () { return bytes32_js_1.decodeBytes32String; } });\nObject.defineProperty(exports, \"encodeBytes32String\", { enumerable: true, get: function () { return bytes32_js_1.encodeBytes32String; } });\nvar fragments_js_1 = require(\"./fragments.js\");\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return fragments_js_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return fragments_js_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return fragments_js_1.EventFragment; } });\nObject.defineProperty(exports, \"FallbackFragment\", { enumerable: true, get: function () { return fragments_js_1.FallbackFragment; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return fragments_js_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return fragments_js_1.FunctionFragment; } });\nObject.defineProperty(exports, \"NamedFragment\", { enumerable: true, get: function () { return fragments_js_1.NamedFragment; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return fragments_js_1.ParamType; } });\nObject.defineProperty(exports, \"StructFragment\", { enumerable: true, get: function () { return fragments_js_1.StructFragment; } });\nvar interface_js_1 = require(\"./interface.js\");\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return interface_js_1.checkResultErrors; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return interface_js_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return interface_js_1.Interface; } });\nObject.defineProperty(exports, \"ErrorDescription\", { enumerable: true, get: function () { return interface_js_1.ErrorDescription; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return interface_js_1.LogDescription; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return interface_js_1.TransactionDescription; } });\nObject.defineProperty(exports, \"Result\", { enumerable: true, get: function () { return interface_js_1.Result; } });\nvar typed_js_1 = require(\"./typed.js\");\nObject.defineProperty(exports, \"Typed\", { enumerable: true, get: function () { return typed_js_1.Typed; } });\n//# sourceMappingURL=index.js.map","\n/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBytes32String = exports.encodeBytes32String = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nfunction encodeBytes32String(text) {\n    // Get the bytes\n    const bytes = (0, index_js_1.toUtf8Bytes)(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return (0, index_js_1.zeroPadBytes)(bytes, 32);\n}\nexports.encodeBytes32String = encodeBytes32String;\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nfunction decodeBytes32String(_bytes) {\n    const data = (0, index_js_1.getBytes)(_bytes, \"bytes\");\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return (0, index_js_1.toUtf8String)(data.slice(0, length));\n}\nexports.decodeBytes32String = decodeBytes32String;\n//# sourceMappingURL=bytes32.js.map","\n/**\n *  There are many simple utilities required to interact with\n *  Ethereum and to simplify the library, without increasing\n *  the library dependencies for simple functions.\n *\n *  @_section api/utils:Utilities  [about-utils]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.encodeRlp = exports.decodeRlp = exports.defineProperties = exports.resolveProperties = exports.toQuantity = exports.toBeArray = exports.toBeHex = exports.toNumber = exports.toBigInt = exports.getUint = exports.getNumber = exports.getBigInt = exports.mask = exports.toTwos = exports.fromTwos = exports.FixedNumber = exports.FetchCancelSignal = exports.FetchResponse = exports.FetchRequest = exports.EventPayload = exports.makeError = exports.assertNormalize = exports.assertPrivate = exports.assertArgumentCount = exports.assertArgument = exports.assert = exports.isError = exports.isCallException = exports.zeroPadBytes = exports.zeroPadValue = exports.stripZerosLeft = exports.dataSlice = exports.dataLength = exports.concat = exports.hexlify = exports.isBytesLike = exports.isHexString = exports.getBytesCopy = exports.getBytes = exports.encodeBase64 = exports.decodeBase64 = exports.encodeBase58 = exports.decodeBase58 = void 0;\nexports.uuidV4 = exports.Utf8ErrorFuncs = void 0;\nvar base58_js_1 = require(\"./base58.js\");\nObject.defineProperty(exports, \"decodeBase58\", { enumerable: true, get: function () { return base58_js_1.decodeBase58; } });\nObject.defineProperty(exports, \"encodeBase58\", { enumerable: true, get: function () { return base58_js_1.encodeBase58; } });\nvar base64_js_1 = require(\"./base64.js\");\nObject.defineProperty(exports, \"decodeBase64\", { enumerable: true, get: function () { return base64_js_1.decodeBase64; } });\nObject.defineProperty(exports, \"encodeBase64\", { enumerable: true, get: function () { return base64_js_1.encodeBase64; } });\nvar data_js_1 = require(\"./data.js\");\nObject.defineProperty(exports, \"getBytes\", { enumerable: true, get: function () { return data_js_1.getBytes; } });\nObject.defineProperty(exports, \"getBytesCopy\", { enumerable: true, get: function () { return data_js_1.getBytesCopy; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return data_js_1.isHexString; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return data_js_1.isBytesLike; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return data_js_1.hexlify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return data_js_1.concat; } });\nObject.defineProperty(exports, \"dataLength\", { enumerable: true, get: function () { return data_js_1.dataLength; } });\nObject.defineProperty(exports, \"dataSlice\", { enumerable: true, get: function () { return data_js_1.dataSlice; } });\nObject.defineProperty(exports, \"stripZerosLeft\", { enumerable: true, get: function () { return data_js_1.stripZerosLeft; } });\nObject.defineProperty(exports, \"zeroPadValue\", { enumerable: true, get: function () { return data_js_1.zeroPadValue; } });\nObject.defineProperty(exports, \"zeroPadBytes\", { enumerable: true, get: function () { return data_js_1.zeroPadBytes; } });\nvar errors_js_1 = require(\"./errors.js\");\nObject.defineProperty(exports, \"isCallException\", { enumerable: true, get: function () { return errors_js_1.isCallException; } });\nObject.defineProperty(exports, \"isError\", { enumerable: true, get: function () { return errors_js_1.isError; } });\nObject.defineProperty(exports, \"assert\", { enumerable: true, get: function () { return errors_js_1.assert; } });\nObject.defineProperty(exports, \"assertArgument\", { enumerable: true, get: function () { return errors_js_1.assertArgument; } });\nObject.defineProperty(exports, \"assertArgumentCount\", { enumerable: true, get: function () { return errors_js_1.assertArgumentCount; } });\nObject.defineProperty(exports, \"assertPrivate\", { enumerable: true, get: function () { return errors_js_1.assertPrivate; } });\nObject.defineProperty(exports, \"assertNormalize\", { enumerable: true, get: function () { return errors_js_1.assertNormalize; } });\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return errors_js_1.makeError; } });\nvar events_js_1 = require(\"./events.js\");\nObject.defineProperty(exports, \"EventPayload\", { enumerable: true, get: function () { return events_js_1.EventPayload; } });\nvar fetch_js_1 = require(\"./fetch.js\");\nObject.defineProperty(exports, \"FetchRequest\", { enumerable: true, get: function () { return fetch_js_1.FetchRequest; } });\nObject.defineProperty(exports, \"FetchResponse\", { enumerable: true, get: function () { return fetch_js_1.FetchResponse; } });\nObject.defineProperty(exports, \"FetchCancelSignal\", { enumerable: true, get: function () { return fetch_js_1.FetchCancelSignal; } });\nvar fixednumber_js_1 = require(\"./fixednumber.js\");\nObject.defineProperty(exports, \"FixedNumber\", { enumerable: true, get: function () { return fixednumber_js_1.FixedNumber; } });\nvar maths_js_1 = require(\"./maths.js\");\nObject.defineProperty(exports, \"fromTwos\", { enumerable: true, get: function () { return maths_js_1.fromTwos; } });\nObject.defineProperty(exports, \"toTwos\", { enumerable: true, get: function () { return maths_js_1.toTwos; } });\nObject.defineProperty(exports, \"mask\", { enumerable: true, get: function () { return maths_js_1.mask; } });\nObject.defineProperty(exports, \"getBigInt\", { enumerable: true, get: function () { return maths_js_1.getBigInt; } });\nObject.defineProperty(exports, \"getNumber\", { enumerable: true, get: function () { return maths_js_1.getNumber; } });\nObject.defineProperty(exports, \"getUint\", { enumerable: true, get: function () { return maths_js_1.getUint; } });\nObject.defineProperty(exports, \"toBigInt\", { enumerable: true, get: function () { return maths_js_1.toBigInt; } });\nObject.defineProperty(exports, \"toNumber\", { enumerable: true, get: function () { return maths_js_1.toNumber; } });\nObject.defineProperty(exports, \"toBeHex\", { enumerable: true, get: function () { return maths_js_1.toBeHex; } });\nObject.defineProperty(exports, \"toBeArray\", { enumerable: true, get: function () { return maths_js_1.toBeArray; } });\nObject.defineProperty(exports, \"toQuantity\", { enumerable: true, get: function () { return maths_js_1.toQuantity; } });\nvar properties_js_1 = require(\"./properties.js\");\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_js_1.resolveProperties; } });\nObject.defineProperty(exports, \"defineProperties\", { enumerable: true, get: function () { return properties_js_1.defineProperties; } });\nvar rlp_decode_js_1 = require(\"./rlp-decode.js\");\nObject.defineProperty(exports, \"decodeRlp\", { enumerable: true, get: function () { return rlp_decode_js_1.decodeRlp; } });\nvar rlp_encode_js_1 = require(\"./rlp-encode.js\");\nObject.defineProperty(exports, \"encodeRlp\", { enumerable: true, get: function () { return rlp_encode_js_1.encodeRlp; } });\nvar units_js_1 = require(\"./units.js\");\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_js_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_js_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_js_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_js_1.parseUnits; } });\nvar utf8_js_1 = require(\"./utf8.js\");\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return utf8_js_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return utf8_js_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return utf8_js_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return utf8_js_1.Utf8ErrorFuncs; } });\nvar uuid_js_1 = require(\"./uuid.js\");\nObject.defineProperty(exports, \"uuidV4\", { enumerable: true, get: function () { return uuid_js_1.uuidV4; } });\n//# sourceMappingURL=index.js.map","\n/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBase58 = exports.encodeBase58 = void 0;\nconst data_js_1 = require(\"./data.js\");\nconst errors_js_1 = require(\"./errors.js\");\nconst maths_js_1 = require(\"./maths.js\");\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    (0, errors_js_1.assertArgument)(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nfunction encodeBase58(_value) {\n    const bytes = (0, data_js_1.getBytes)(_value);\n    let value = (0, maths_js_1.toBigInt)(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) {\n            break;\n        }\n        result = Alphabet[0] + result;\n    }\n    return result;\n}\nexports.encodeBase58 = encodeBase58;\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nfunction decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\nexports.decodeBase58 = decodeBase58;\n//# sourceMappingURL=base58.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroPadBytes = exports.zeroPadValue = exports.stripZerosLeft = exports.dataSlice = exports.dataLength = exports.concat = exports.hexlify = exports.isBytesLike = exports.isHexString = exports.getBytesCopy = exports.getBytes = void 0;\n/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nconst errors_js_1 = require(\"./errors.js\");\nfunction _getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof (value) === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    (0, errors_js_1.assertArgument)(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nfunction getBytes(value, name) {\n    return _getBytes(value, name, false);\n}\nexports.getBytes = getBytes;\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nfunction getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n}\nexports.getBytesCopy = getBytesCopy;\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof (length) === \"number\" && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && (value.length % 2) !== 0) {\n        return false;\n    }\n    return true;\n}\nexports.isHexString = isHexString;\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nfunction isBytesLike(value) {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\nexports.isBytesLike = isBytesLike;\nconst HexCharacters = \"0123456789abcdef\";\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nfunction hexlify(data) {\n    const bytes = getBytes(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\nexports.hexlify = hexlify;\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nfunction concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\nexports.concat = concat;\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nfunction dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\nexports.dataLength = dataLength;\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nfunction dataSlice(data, start, end) {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        (0, errors_js_1.assert)(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0 : start, (end == null) ? bytes.length : end));\n}\nexports.dataSlice = dataSlice;\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nfunction stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) {\n        bytes = bytes.substring(2);\n    }\n    return \"0x\" + bytes;\n}\nexports.stripZerosLeft = stripZerosLeft;\nfunction zeroPad(data, length, left) {\n    const bytes = getBytes(data);\n    (0, errors_js_1.assert)(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nfunction zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n}\nexports.zeroPadValue = zeroPadValue;\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nfunction zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n}\nexports.zeroPadBytes = zeroPadBytes;\n//# sourceMappingURL=data.js.map","\n/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertPrivate = exports.assertNormalize = exports.assertArgumentCount = exports.assertArgument = exports.assert = exports.makeError = exports.isCallException = exports.isError = void 0;\nconst _version_js_1 = require(\"../_version.js\");\nconst properties_js_1 = require(\"./properties.js\");\nfunction stringify(value) {\n    if (value == null) {\n        return \"null\";\n    }\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n    if (typeof (value) === \"object\" && typeof (value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n    switch (typeof (value)) {\n        case \"boolean\":\n        case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(\", \") + \" }\";\n        }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n}\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nfunction isError(error, code) {\n    return (error && error.code === code);\n}\nexports.isError = isError;\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nfunction isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n}\nexports.isCallException = isCallException;\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nfunction makeError(message, code, info) {\n    let shortMessage = message;\n    {\n        const details = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") {\n                    continue;\n                }\n                const value = (info[key]);\n                //                try {\n                details.push(key + \"=\" + stringify(value));\n                //                } catch (error: any) {\n                //                console.log(\"MMM\", error.message);\n                //                    details.push(key + \"=[could not serialize object]\");\n                //                }\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${_version_js_1.version}`);\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n    (0, properties_js_1.defineProperties)(error, { code });\n    if (info) {\n        Object.assign(error, info);\n    }\n    if (error.shortMessage == null) {\n        (0, properties_js_1.defineProperties)(error, { shortMessage });\n    }\n    return error;\n}\nexports.makeError = makeError;\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nfunction assert(check, message, code, info) {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\nexports.assert = assert;\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nfunction assertArgument(check, message, name, value) {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\nexports.assertArgument = assertArgument;\nfunction assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n        message = \"\";\n    }\n    if (message) {\n        message = \": \" + message;\n    }\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\nexports.assertArgumentCount = assertArgumentCount;\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n        }\n        ;\n        /* c8 ignore stop */\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error(\"broken\");\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n    }\n    catch (error) { }\n    return accum;\n}, []);\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nfunction assertNormalize(form) {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\nexports.assertNormalize = assertNormalize;\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nfunction assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n        className = \"\";\n    }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\nexports.assertPrivate = assertPrivate;\n//# sourceMappingURL=errors.js.map","\n/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = exports.resolveProperties = void 0;\nfunction checkType(value, type, name) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nasync function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\nexports.resolveProperties = resolveProperties;\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nfunction defineProperties(target, values, types) {\n    for (let key in values) {\n        let value = values[key];\n        const type = (types ? types[key] : null);\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\nexports.defineProperties = defineProperties;\n//# sourceMappingURL=properties.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toQuantity = exports.toBeArray = exports.toBeHex = exports.toNumber = exports.getNumber = exports.toBigInt = exports.getUint = exports.getBigInt = exports.mask = exports.toTwos = exports.fromTwos = void 0;\n/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nconst data_js_1 = require(\"./data.js\");\nconst errors_js_1 = require(\"./errors.js\");\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nfunction fromTwos(_value, _width) {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    (0, errors_js_1.assert)((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n    return value;\n}\nexports.fromTwos = fromTwos;\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nfunction toTwos(_value, _width) {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    const limit = (BN_1 << (width - BN_1));\n    if (value < BN_0) {\n        value = -value;\n        (0, errors_js_1.assert)(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    }\n    else {\n        (0, errors_js_1.assert)(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n    return value;\n}\nexports.toTwos = toTwos;\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nfunction mask(_value, _bits) {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\nexports.mask = mask;\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nfunction getBigInt(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            (0, errors_js_1.assertArgument)(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            (0, errors_js_1.assertArgument)(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            }\n            catch (e) {\n                (0, errors_js_1.assertArgument)(false, `invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    (0, errors_js_1.assertArgument)(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\nexports.getBigInt = getBigInt;\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nfunction getUint(value, name) {\n    const result = getBigInt(value, name);\n    (0, errors_js_1.assert)(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\nexports.getUint = getUint;\nconst Nibbles = \"0123456789abcdef\";\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nfunction toBigInt(value) {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return getBigInt(value);\n}\nexports.toBigInt = toBigInt;\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nfunction getNumber(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\":\n            (0, errors_js_1.assertArgument)(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            (0, errors_js_1.assertArgument)(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            (0, errors_js_1.assertArgument)(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                return getNumber(BigInt(value), name);\n            }\n            catch (e) {\n                (0, errors_js_1.assertArgument)(false, `invalid numeric string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    (0, errors_js_1.assertArgument)(false, \"invalid numeric value\", name || \"value\", value);\n}\nexports.getNumber = getNumber;\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nfunction toNumber(value) {\n    return getNumber(toBigInt(value));\n}\nexports.toNumber = toNumber;\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nfunction toBeHex(_value, _width) {\n    const value = getUint(_value, \"value\");\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = \"0\" + result;\n        }\n    }\n    else {\n        const width = getNumber(_width, \"width\");\n        (0, errors_js_1.assert)(width * 2 >= result.length, `value exceeds width (${width} bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n        // Pad the value to the required width\n        while (result.length < (width * 2)) {\n            result = \"0\" + result;\n        }\n    }\n    return \"0x\" + result;\n}\nexports.toBeHex = toBeHex;\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nfunction toBeArray(_value) {\n    const value = getUint(_value, \"value\");\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\nexports.toBeArray = toBeArray;\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nfunction toQuantity(value) {\n    let result = (0, data_js_1.hexlify)((0, data_js_1.isBytesLike)(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) {\n        result = result.substring(1);\n    }\n    if (result === \"\") {\n        result = \"0\";\n    }\n    return \"0x\" + result;\n}\nexports.toQuantity = toQuantity;\n//# sourceMappingURL=maths.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeBase64 = exports.decodeBase64 = void 0;\n/**\n *  [Base64 encoding](link-wiki-base64) using 6-bit words to encode\n *  arbitrary bytes into a string using 65 printable symbols, the\n *  upper-case and lower-case alphabet, the digits ``0`` through ``9``,\n *  ``\"+\"`` and ``\"/\"`` with the ``\"=\"`` used for padding.\n *\n *  @_subsection: api/utils:Base64 Encoding  [about-base64]\n */\nconst data_js_1 = require(\"./data.js\");\n/**\n *  Decodes the base-64 encoded %%value%%.\n *\n *  @example:\n *    // The decoded value is always binary data...\n *    result = decodeBase64(\"SGVsbG8gV29ybGQhIQ==\")\n *    //_result:\n *\n *    // ...use toUtf8String to convert it to a string.\n *    toUtf8String(result)\n *    //_result:\n *\n *    // Decoding binary data\n *    decodeBase64(\"EjQ=\")\n *    //_result:\n */\nfunction decodeBase64(value) {\n    return (0, data_js_1.getBytesCopy)(Buffer.from(value, \"base64\"));\n}\nexports.decodeBase64 = decodeBase64;\n;\n/**\n *  Encodes %%data%% as a base-64 encoded string.\n *\n *  @example:\n *    // Encoding binary data as a hexstring\n *    encodeBase64(\"0x1234\")\n *    //_result:\n *\n *    // Encoding binary data as a Uint8Array\n *    encodeBase64(new Uint8Array([ 0x12, 0x34 ]))\n *    //_result:\n *\n *    // The input MUST be data...\n *    encodeBase64(\"Hello World!!\")\n *    //_error:\n *\n *    // ...use toUtf8Bytes for this.\n *    encodeBase64(toUtf8Bytes(\"Hello World!!\"))\n *    //_result:\n */\nfunction encodeBase64(data) {\n    return Buffer.from((0, data_js_1.getBytes)(data)).toString(\"base64\");\n}\nexports.encodeBase64 = encodeBase64;\n//# sourceMappingURL=base64.js.map","\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeRlp = void 0;\nconst data_js_1 = require(\"./data.js\");\nconst errors_js_1 = require(\"./errors.js\");\nconst data_js_2 = require(\"./data.js\");\nfunction hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        (0, errors_js_1.assert)(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    (0, errors_js_1.assert)(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n    const checkOffset = (offset) => {\n        (0, errors_js_1.assert)(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        const result = (0, data_js_1.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n        const result = (0, data_js_1.hexlify)(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nfunction decodeRlp(_data) {\n    const data = (0, data_js_2.getBytes)(_data, \"data\");\n    const decoded = _decode(data, 0);\n    (0, errors_js_1.assertArgument)(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\nexports.decodeRlp = decodeRlp;\n//# sourceMappingURL=rlp-decode.js.map","\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeRlp = void 0;\nconst data_js_1 = require(\"./data.js\");\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    const data = Array.prototype.slice.call((0, data_js_1.getBytes)(object, \"object\"));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nconst nibbles = \"0123456789abcdef\";\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nfunction encodeRlp(object) {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\nexports.encodeRlp = encodeRlp;\n//# sourceMappingURL=rlp-encode.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEther = exports.formatEther = exports.parseUnits = exports.formatUnits = void 0;\n/**\n *  Most interactions with Ethereum requires integer values, which use\n *  the smallest magnitude unit.\n *\n *  For example, imagine dealing with dollars and cents. Since dollars\n *  are divisible, non-integer values are possible, such as ``$10.77``.\n *  By using the smallest indivisible unit (i.e. cents), the value can\n *  be kept as the integer ``1077``.\n *\n *  When receiving decimal input from the user (as a decimal string),\n *  the value should be converted to an integer and when showing a user\n *  a value, the integer value should be converted to a decimal string.\n *\n *  This creates a clear distinction, between values to be used by code\n *  (integers) and values used for display logic to users (decimals).\n *\n *  The native unit in Ethereum, //ether// is divisible to 18 decimal places,\n *  where each individual unit is called a //wei//.\n *\n *  @_subsection api/utils:Unit Conversion  [about-units]\n */\nconst errors_js_1 = require(\"./errors.js\");\nconst fixednumber_js_1 = require(\"./fixednumber.js\");\nconst maths_js_1 = require(\"./maths.js\");\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n/**\n *  Converts %%value%% into a //decimal string//, assuming %%unit%% decimal\n *  places. The %%unit%% may be the number of decimal places or the name of\n *  a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n *\n */\nfunction formatUnits(value, unit) {\n    let decimals = 18;\n    if (typeof (unit) === \"string\") {\n        const index = names.indexOf(unit);\n        (0, errors_js_1.assertArgument)(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    }\n    else if (unit != null) {\n        decimals = (0, maths_js_1.getNumber)(unit, \"unit\");\n    }\n    return fixednumber_js_1.FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\nexports.formatUnits = formatUnits;\n/**\n *  Converts the //decimal string// %%value%% to a BigInt, assuming\n *  %%unit%% decimal places. The %%unit%% may the number of decimal places\n *  or the name of a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n */\nfunction parseUnits(value, unit) {\n    (0, errors_js_1.assertArgument)(typeof (value) === \"string\", \"value must be a string\", \"value\", value);\n    let decimals = 18;\n    if (typeof (unit) === \"string\") {\n        const index = names.indexOf(unit);\n        (0, errors_js_1.assertArgument)(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    }\n    else if (unit != null) {\n        decimals = (0, maths_js_1.getNumber)(unit, \"unit\");\n    }\n    return fixednumber_js_1.FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\nexports.parseUnits = parseUnits;\n/**\n *  Converts %%value%% into a //decimal string// using 18 decimal places.\n */\nfunction formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexports.formatEther = formatEther;\n/**\n *  Converts the //decimal string// %%ether%% to a BigInt, using 18\n *  decimal places.\n */\nfunction parseEther(ether) {\n    return parseUnits(ether, 18);\n}\nexports.parseEther = parseEther;\n//# sourceMappingURL=units.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8CodePoints = exports.toUtf8String = exports.toUtf8Bytes = exports.Utf8ErrorFuncs = void 0;\n/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nconst data_js_1 = require(\"./data.js\");\nconst errors_js_1 = require(\"./errors.js\");\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    (0, errors_js_1.assertArgument)(false, `invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        (0, errors_js_1.assertArgument)(typeof (badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexports.Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = exports.Utf8ErrorFuncs.error;\n    }\n    const bytes = (0, data_js_1.getBytes)(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            }\n            else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nfunction toUtf8Bytes(str, form) {\n    (0, errors_js_1.assertArgument)(typeof (str) === \"string\", \"invalid string value\", \"str\", str);\n    if (form != null) {\n        (0, errors_js_1.assertNormalize)(form);\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            (0, errors_js_1.assertArgument)(i < str.length && ((c2 & 0xfc00) === 0xdc00), \"invalid surrogate pair\", \"str\", str);\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\nexports.toUtf8Bytes = toUtf8Bytes;\n;\n//export \nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nfunction toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexports.toUtf8String = toUtf8String;\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nfunction toUtf8CodePoints(str, form) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\nexports.toUtf8CodePoints = toUtf8CodePoints;\n//# sourceMappingURL=utf8.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uuidV4 = void 0;\n/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nconst data_js_1 = require(\"./data.js\");\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nfunction uuidV4(randomBytes) {\n    const bytes = (0, data_js_1.getBytes)(randomBytes, \"randomBytes\");\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = (0, data_js_1.hexlify)(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\nexports.uuidV4 = uuidV4;\n//# sourceMappingURL=uuid.js.map","\n/**\n *  Addresses are a fundamental part of interacting with Ethereum. They\n *  represent the gloabal identity of Externally Owned Accounts (accounts\n *  backed by a private key) and contracts.\n *\n *  The Ethereum Naming Service (ENS) provides an interconnected ecosystem\n *  of contracts, standards and libraries which enable looking up an\n *  address for an ENS name.\n *\n *  These functions help convert between various formats, validate\n *  addresses and safely resolve ENS names.\n *\n *  @_section: api/address:Addresses  [about-addresses]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAddress = exports.isAddress = exports.isAddressable = exports.getCreate2Address = exports.getCreateAddress = exports.getIcapAddress = exports.getAddress = void 0;\nnull;\nvar address_js_1 = require(\"./address.js\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_js_1.getAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_js_1.getIcapAddress; } });\nvar contract_address_js_1 = require(\"./contract-address.js\");\nObject.defineProperty(exports, \"getCreateAddress\", { enumerable: true, get: function () { return contract_address_js_1.getCreateAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return contract_address_js_1.getCreate2Address; } });\nvar checks_js_1 = require(\"./checks.js\");\nObject.defineProperty(exports, \"isAddressable\", { enumerable: true, get: function () { return checks_js_1.isAddressable; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return checks_js_1.isAddress; } });\nObject.defineProperty(exports, \"resolveAddress\", { enumerable: true, get: function () { return checks_js_1.resolveAddress; } });\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIcapAddress = exports.getAddress = void 0;\nconst index_js_1 = require(\"../crypto/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\nfunction getChecksumAddress(address) {\n    //    if (!isHexString(address, 20)) {\n    //        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    //    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = (0, index_js_2.getBytes)((0, index_js_1.keccak256)(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nconst Base36 = (function () {\n    ;\n    const result = {};\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\nfunction fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nfunction getAddress(address) {\n    (0, index_js_2.assertArgument)(typeof (address) === \"string\", \"invalid address\", \"address\", address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) {\n            address = \"0x\" + address;\n        }\n        const result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        (0, index_js_2.assertArgument)(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, \"bad address checksum\", \"address\", address);\n        return result;\n    }\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        (0, index_js_2.assertArgument)(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        return getChecksumAddress(\"0x\" + result);\n    }\n    (0, index_js_2.assertArgument)(false, \"invalid address\", \"address\", address);\n}\nexports.getAddress = getAddress;\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nfunction getIcapAddress(address) {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n//# sourceMappingURL=address.js.map","\n/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lock = exports.Signature = exports.SigningKey = exports.scryptSync = exports.scrypt = exports.pbkdf2 = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.randomBytes = exports.computeHmac = void 0;\nnull;\n// We import all these so we can export lock()\nconst hmac_js_1 = require(\"./hmac.js\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return hmac_js_1.computeHmac; } });\nconst keccak_js_1 = require(\"./keccak.js\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak_js_1.keccak256; } });\nconst ripemd160_js_1 = require(\"./ripemd160.js\");\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return ripemd160_js_1.ripemd160; } });\nconst pbkdf2_js_1 = require(\"./pbkdf2.js\");\nObject.defineProperty(exports, \"pbkdf2\", { enumerable: true, get: function () { return pbkdf2_js_1.pbkdf2; } });\nconst random_js_1 = require(\"./random.js\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_js_1.randomBytes; } });\nconst scrypt_js_1 = require(\"./scrypt.js\");\nObject.defineProperty(exports, \"scrypt\", { enumerable: true, get: function () { return scrypt_js_1.scrypt; } });\nObject.defineProperty(exports, \"scryptSync\", { enumerable: true, get: function () { return scrypt_js_1.scryptSync; } });\nconst sha2_js_1 = require(\"./sha2.js\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_js_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_js_1.sha512; } });\nvar signing_key_js_1 = require(\"./signing-key.js\");\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_js_1.SigningKey; } });\nvar signature_js_1 = require(\"./signature.js\");\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return signature_js_1.Signature; } });\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock() {\n    hmac_js_1.computeHmac.lock();\n    keccak_js_1.keccak256.lock();\n    pbkdf2_js_1.pbkdf2.lock();\n    random_js_1.randomBytes.lock();\n    ripemd160_js_1.ripemd160.lock();\n    scrypt_js_1.scrypt.lock();\n    scrypt_js_1.scryptSync.lock();\n    sha2_js_1.sha256.lock();\n    sha2_js_1.sha512.lock();\n    random_js_1.randomBytes.lock();\n}\nexports.lock = lock;\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeHmac = void 0;\n/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nconst crypto_js_1 = require(\"./crypto.js\");\nconst index_js_1 = require(\"../utils/index.js\");\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return (0, crypto_js_1.createHmac)(algorithm, key).update(data).digest();\n};\nlet __computeHmac = _computeHmac;\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nfunction computeHmac(algorithm, _key, _data) {\n    const key = (0, index_js_1.getBytes)(_key, \"key\");\n    const data = (0, index_js_1.getBytes)(_data, \"data\");\n    return (0, index_js_1.hexlify)(__computeHmac(algorithm, key, data));\n}\nexports.computeHmac = computeHmac;\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () { locked = true; };\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error(\"computeHmac is locked\");\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.pbkdf2Sync = exports.createHmac = exports.createHash = void 0;\nvar crypto_1 = require(\"crypto\");\nObject.defineProperty(exports, \"createHash\", { enumerable: true, get: function () { return crypto_1.createHash; } });\nObject.defineProperty(exports, \"createHmac\", { enumerable: true, get: function () { return crypto_1.createHmac; } });\nObject.defineProperty(exports, \"pbkdf2Sync\", { enumerable: true, get: function () { return crypto_1.pbkdf2Sync; } });\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return crypto_1.randomBytes; } });\n//# sourceMappingURL=crypto.js.map","\n/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak256 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst index_js_1 = require(\"../utils/index.js\");\nlet locked = false;\nconst _keccak256 = function (data) {\n    return (0, sha3_1.keccak_256)(data);\n};\nlet __keccak256 = _keccak256;\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nfunction keccak256(_data) {\n    const data = (0, index_js_1.getBytes)(_data, \"data\");\n    return (0, index_js_1.hexlify)(__keccak256(data));\n}\nexports.keccak256 = keccak256;\nkeccak256._ = _keccak256;\nkeccak256.lock = function () { locked = true; };\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"keccak256 is locked\");\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ripemd160 = void 0;\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\nconst index_js_1 = require(\"../utils/index.js\");\nlet locked = false;\nconst _ripemd160 = function (data) {\n    return (0, ripemd160_1.ripemd160)(data);\n};\nlet __ripemd160 = _ripemd160;\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nfunction ripemd160(_data) {\n    const data = (0, index_js_1.getBytes)(_data, \"data\");\n    return (0, index_js_1.hexlify)(__ripemd160(data));\n}\nexports.ripemd160 = ripemd160;\nripemd160._ = _ripemd160;\nripemd160.lock = function () { locked = true; };\nripemd160.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"ripemd160 is locked\");\n    }\n    __ripemd160 = func;\n};\nObject.freeze(ripemd160);\n//# sourceMappingURL=ripemd160.js.map","\n/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2 = void 0;\nconst crypto_js_1 = require(\"./crypto.js\");\nconst index_js_1 = require(\"../utils/index.js\");\nlet locked = false;\nconst _pbkdf2 = function (password, salt, iterations, keylen, algo) {\n    return (0, crypto_js_1.pbkdf2Sync)(password, salt, iterations, keylen, algo);\n};\nlet __pbkdf2 = _pbkdf2;\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nfunction pbkdf2(_password, _salt, iterations, keylen, algo) {\n    const password = (0, index_js_1.getBytes)(_password, \"password\");\n    const salt = (0, index_js_1.getBytes)(_salt, \"salt\");\n    return (0, index_js_1.hexlify)(__pbkdf2(password, salt, iterations, keylen, algo));\n}\nexports.pbkdf2 = pbkdf2;\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function () { locked = true; };\npbkdf2.register = function (func) {\n    if (locked) {\n        throw new Error(\"pbkdf2 is locked\");\n    }\n    __pbkdf2 = func;\n};\nObject.freeze(pbkdf2);\n//# sourceMappingURL=pbkdf2.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = void 0;\n/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nconst crypto_js_1 = require(\"./crypto.js\");\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array((0, crypto_js_1.randomBytes)(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nfunction randomBytes(length) {\n    return __randomBytes(length);\n}\nexports.randomBytes = randomBytes;\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () { locked = true; };\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error(\"randomBytes is locked\");\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scryptSync = exports.scrypt = void 0;\nconst scrypt_1 = require(\"@noble/hashes/scrypt\");\nconst index_js_1 = require(\"../utils/index.js\");\nlet lockedSync = false, lockedAsync = false;\nconst _scryptAsync = async function (passwd, salt, N, r, p, dkLen, onProgress) {\n    return await (0, scrypt_1.scryptAsync)(passwd, salt, { N, r, p, dkLen, onProgress });\n};\nconst _scryptSync = function (passwd, salt, N, r, p, dkLen) {\n    return (0, scrypt_1.scrypt)(passwd, salt, { N, r, p, dkLen });\n};\nlet __scryptAsync = _scryptAsync;\nlet __scryptSync = _scryptSync;\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nasync function scrypt(_passwd, _salt, N, r, p, dkLen, progress) {\n    const passwd = (0, index_js_1.getBytes)(_passwd, \"passwd\");\n    const salt = (0, index_js_1.getBytes)(_salt, \"salt\");\n    return (0, index_js_1.hexlify)(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nexports.scrypt = scrypt;\nscrypt._ = _scryptAsync;\nscrypt.lock = function () { lockedAsync = true; };\nscrypt.register = function (func) {\n    if (lockedAsync) {\n        throw new Error(\"scrypt is locked\");\n    }\n    __scryptAsync = func;\n};\nObject.freeze(scrypt);\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nfunction scryptSync(_passwd, _salt, N, r, p, dkLen) {\n    const passwd = (0, index_js_1.getBytes)(_passwd, \"passwd\");\n    const salt = (0, index_js_1.getBytes)(_salt, \"salt\");\n    return (0, index_js_1.hexlify)(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nexports.scryptSync = scryptSync;\nscryptSync._ = _scryptSync;\nscryptSync.lock = function () { lockedSync = true; };\nscryptSync.register = function (func) {\n    if (lockedSync) {\n        throw new Error(\"scryptSync is locked\");\n    }\n    __scryptSync = func;\n};\nObject.freeze(scryptSync);\n//# sourceMappingURL=scrypt.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = exports.sha256 = void 0;\nconst crypto_js_1 = require(\"./crypto.js\");\nconst index_js_1 = require(\"../utils/index.js\");\nconst _sha256 = function (data) {\n    return (0, crypto_js_1.createHash)(\"sha256\").update(data).digest();\n};\nconst _sha512 = function (data) {\n    return (0, crypto_js_1.createHash)(\"sha512\").update(data).digest();\n};\nlet __sha256 = _sha256;\nlet __sha512 = _sha512;\nlet locked256 = false, locked512 = false;\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nfunction sha256(_data) {\n    const data = (0, index_js_1.getBytes)(_data, \"data\");\n    return (0, index_js_1.hexlify)(__sha256(data));\n}\nexports.sha256 = sha256;\nsha256._ = _sha256;\nsha256.lock = function () { locked256 = true; };\nsha256.register = function (func) {\n    if (locked256) {\n        throw new Error(\"sha256 is locked\");\n    }\n    __sha256 = func;\n};\nObject.freeze(sha256);\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nfunction sha512(_data) {\n    const data = (0, index_js_1.getBytes)(_data, \"data\");\n    return (0, index_js_1.hexlify)(__sha512(data));\n}\nexports.sha512 = sha512;\nsha512._ = _sha512;\nsha512.lock = function () { locked512 = true; };\nsha512.register = function (func) {\n    if (locked512) {\n        throw new Error(\"sha512 is locked\");\n    }\n    __sha512 = func;\n};\nObject.freeze(sha256);\n//# sourceMappingURL=sha2.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCreate2Address = exports.getCreateAddress = void 0;\nconst index_js_1 = require(\"../crypto/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst address_js_1 = require(\"./address.js\");\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nfunction getCreateAddress(tx) {\n    const from = (0, address_js_1.getAddress)(tx.from);\n    const nonce = (0, index_js_2.getBigInt)(tx.nonce, \"tx.nonce\");\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    }\n    else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    }\n    else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n    return (0, address_js_1.getAddress)((0, index_js_2.dataSlice)((0, index_js_1.keccak256)((0, index_js_2.encodeRlp)([from, nonceHex])), 12));\n}\nexports.getCreateAddress = getCreateAddress;\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nfunction getCreate2Address(_from, _salt, _initCodeHash) {\n    const from = (0, address_js_1.getAddress)(_from);\n    const salt = (0, index_js_2.getBytes)(_salt, \"salt\");\n    const initCodeHash = (0, index_js_2.getBytes)(_initCodeHash, \"initCodeHash\");\n    (0, index_js_2.assertArgument)(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n    (0, index_js_2.assertArgument)(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n    return (0, address_js_1.getAddress)((0, index_js_2.dataSlice)((0, index_js_1.keccak256)((0, index_js_2.concat)([\"0xff\", from, salt, initCodeHash])), 12));\n}\nexports.getCreate2Address = getCreate2Address;\n//# sourceMappingURL=contract-address.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAddress = exports.isAddress = exports.isAddressable = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst address_js_1 = require(\"./address.js\");\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nfunction isAddressable(value) {\n    return (value && typeof (value.getAddress) === \"function\");\n}\nexports.isAddressable = isAddressable;\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nfunction isAddress(value) {\n    try {\n        (0, address_js_1.getAddress)(value);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexports.isAddress = isAddress;\nasync function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        (0, index_js_1.assert)(typeof (target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        (0, index_js_1.assertArgument)(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return (0, address_js_1.getAddress)(result);\n}\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nfunction resolveAddress(target, resolver) {\n    if (typeof (target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return (0, address_js_1.getAddress)(target);\n        }\n        (0, index_js_1.assert)(resolver != null, \"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n        return checkAddress(target, resolver.resolveName(target));\n    }\n    else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    }\n    else if (target && typeof (target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n    (0, index_js_1.assertArgument)(false, \"unsupported addressable value\", \"target\", target);\n}\nexports.resolveAddress = resolveAddress;\n//# sourceMappingURL=checks.js.map","\n/**\n *  Some common constants useful for Ethereum.\n *\n *  @_section: api/constants: Constants  [about-constants]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessagePrefix = exports.EtherSymbol = exports.MaxInt256 = exports.MinInt256 = exports.MaxUint256 = exports.WeiPerEther = exports.N = exports.ZeroHash = exports.ZeroAddress = void 0;\nvar addresses_js_1 = require(\"./addresses.js\");\nObject.defineProperty(exports, \"ZeroAddress\", { enumerable: true, get: function () { return addresses_js_1.ZeroAddress; } });\nvar hashes_js_1 = require(\"./hashes.js\");\nObject.defineProperty(exports, \"ZeroHash\", { enumerable: true, get: function () { return hashes_js_1.ZeroHash; } });\nvar numbers_js_1 = require(\"./numbers.js\");\nObject.defineProperty(exports, \"N\", { enumerable: true, get: function () { return numbers_js_1.N; } });\nObject.defineProperty(exports, \"WeiPerEther\", { enumerable: true, get: function () { return numbers_js_1.WeiPerEther; } });\nObject.defineProperty(exports, \"MaxUint256\", { enumerable: true, get: function () { return numbers_js_1.MaxUint256; } });\nObject.defineProperty(exports, \"MinInt256\", { enumerable: true, get: function () { return numbers_js_1.MinInt256; } });\nObject.defineProperty(exports, \"MaxInt256\", { enumerable: true, get: function () { return numbers_js_1.MaxInt256; } });\nvar strings_js_1 = require(\"./strings.js\");\nObject.defineProperty(exports, \"EtherSymbol\", { enumerable: true, get: function () { return strings_js_1.EtherSymbol; } });\nObject.defineProperty(exports, \"MessagePrefix\", { enumerable: true, get: function () { return strings_js_1.MessagePrefix; } });\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZeroAddress = void 0;\n/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexports.ZeroAddress = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZeroHash = void 0;\n/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexports.ZeroHash = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxInt256 = exports.MinInt256 = exports.MaxUint256 = exports.WeiPerEther = exports.N = void 0;\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nexports.N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nexports.WeiPerEther = BigInt(\"1000000000000000000\");\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexports.MaxUint256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nexports.MinInt256 = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexports.MaxInt256 = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//# sourceMappingURL=numbers.js.map","\n// NFKC (composed)             // (decomposed)\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessagePrefix = exports.EtherSymbol = void 0;\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexports.EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexports.MessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n//# sourceMappingURL=strings.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UndecodedEventLog = exports.EventLog = exports.ContractTransactionResponse = exports.ContractTransactionReceipt = exports.ContractUnknownEventPayload = exports.ContractEventPayload = exports.ContractFactory = exports.Contract = exports.BaseContract = void 0;\n/**\n *  A **Contract** object is a meta-class (a class whose definition is\n *  defined at runtime), which communicates with a deployed smart contract\n *  on the blockchain and provides a simple JavaScript interface to call\n *  methods, send transaction, query historic logs and listen for its events.\n *\n *  @_section: api/contract:Contracts  [about-contracts]\n */\nvar contract_js_1 = require(\"./contract.js\");\nObject.defineProperty(exports, \"BaseContract\", { enumerable: true, get: function () { return contract_js_1.BaseContract; } });\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_js_1.Contract; } });\nvar factory_js_1 = require(\"./factory.js\");\nObject.defineProperty(exports, \"ContractFactory\", { enumerable: true, get: function () { return factory_js_1.ContractFactory; } });\nvar wrappers_js_1 = require(\"./wrappers.js\");\nObject.defineProperty(exports, \"ContractEventPayload\", { enumerable: true, get: function () { return wrappers_js_1.ContractEventPayload; } });\nObject.defineProperty(exports, \"ContractUnknownEventPayload\", { enumerable: true, get: function () { return wrappers_js_1.ContractUnknownEventPayload; } });\nObject.defineProperty(exports, \"ContractTransactionReceipt\", { enumerable: true, get: function () { return wrappers_js_1.ContractTransactionReceipt; } });\nObject.defineProperty(exports, \"ContractTransactionResponse\", { enumerable: true, get: function () { return wrappers_js_1.ContractTransactionResponse; } });\nObject.defineProperty(exports, \"EventLog\", { enumerable: true, get: function () { return wrappers_js_1.EventLog; } });\nObject.defineProperty(exports, \"UndecodedEventLog\", { enumerable: true, get: function () { return wrappers_js_1.UndecodedEventLog; } });\n//# sourceMappingURL=index.js.map","\n/**\n *  Utilities for common tasks involving hashing. Also see\n *  [cryptographic hashing](about-crypto-hashing).\n *\n *  @_section: api/hashing:Hashing Utilities  [about-hashing]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyTypedData = exports.TypedDataEncoder = exports.solidityPackedSha256 = exports.solidityPackedKeccak256 = exports.solidityPacked = exports.verifyMessage = exports.hashMessage = exports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = exports.id = void 0;\nvar id_js_1 = require(\"./id.js\");\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return id_js_1.id; } });\nvar namehash_js_1 = require(\"./namehash.js\");\nObject.defineProperty(exports, \"ensNormalize\", { enumerable: true, get: function () { return namehash_js_1.ensNormalize; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return namehash_js_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return namehash_js_1.namehash; } });\nObject.defineProperty(exports, \"dnsEncode\", { enumerable: true, get: function () { return namehash_js_1.dnsEncode; } });\nvar message_js_1 = require(\"./message.js\");\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return message_js_1.hashMessage; } });\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return message_js_1.verifyMessage; } });\nvar solidity_js_1 = require(\"./solidity.js\");\nObject.defineProperty(exports, \"solidityPacked\", { enumerable: true, get: function () { return solidity_js_1.solidityPacked; } });\nObject.defineProperty(exports, \"solidityPackedKeccak256\", { enumerable: true, get: function () { return solidity_js_1.solidityPackedKeccak256; } });\nObject.defineProperty(exports, \"solidityPackedSha256\", { enumerable: true, get: function () { return solidity_js_1.solidityPackedSha256; } });\nvar typed_data_js_1 = require(\"./typed-data.js\");\nObject.defineProperty(exports, \"TypedDataEncoder\", { enumerable: true, get: function () { return typed_data_js_1.TypedDataEncoder; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return typed_data_js_1.verifyTypedData; } });\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.id = void 0;\nconst index_js_1 = require(\"../crypto/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nfunction id(value) {\n    return (0, index_js_1.keccak256)((0, index_js_2.toUtf8Bytes)(value));\n}\nexports.id = id;\n//# sourceMappingURL=id.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = void 0;\nconst index_js_1 = require(\"../crypto/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst ens_normalize_1 = require(\"@adraffy/ens-normalize\");\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    (0, index_js_2.assertArgument)(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp);\n    return comp;\n}\nfunction ensNameSplit(name) {\n    const bytes = (0, index_js_2.toUtf8Bytes)(ensNormalize(name));\n    const comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    (0, index_js_2.assertArgument)(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n/**\n *  Returns the ENS %%name%% normalized.\n */\nfunction ensNormalize(name) {\n    try {\n        if (name.length === 0) {\n            throw new Error(\"empty label\");\n        }\n        return (0, ens_normalize_1.ens_normalize)(name);\n    }\n    catch (error) {\n        (0, index_js_2.assertArgument)(false, `invalid ENS name (${error.message})`, \"name\", name);\n    }\n}\nexports.ensNormalize = ensNormalize;\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nfunction isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidName = isValidName;\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nfunction namehash(name) {\n    (0, index_js_2.assertArgument)(typeof (name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n    (0, index_js_2.assertArgument)(name.length, `invalid ENS name (empty label)`, \"name\", name);\n    let result = Zeros;\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = (0, index_js_1.keccak256)((0, index_js_2.concat)([result, (0, index_js_1.keccak256)((comps.pop()))]));\n    }\n    return (0, index_js_2.hexlify)(result);\n}\nexports.namehash = namehash;\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nfunction dnsEncode(name, _maxLength) {\n    const length = (_maxLength != null) ? _maxLength : 63;\n    (0, index_js_2.assertArgument)(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n    return (0, index_js_2.hexlify)((0, index_js_2.concat)(ensNameSplit(name).map((comp) => {\n        (0, index_js_2.assertArgument)(comp.length <= length, `label ${JSON.stringify(name)} exceeds ${length} bytes`, \"name\", name);\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\nexports.dnsEncode = dnsEncode;\n//# sourceMappingURL=namehash.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyMessage = exports.hashMessage = void 0;\nconst index_js_1 = require(\"../crypto/index.js\");\nconst index_js_2 = require(\"../constants/index.js\");\nconst index_js_3 = require(\"../transaction/index.js\");\nconst index_js_4 = require(\"../utils/index.js\");\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nfunction hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = (0, index_js_4.toUtf8Bytes)(message);\n    }\n    return (0, index_js_1.keccak256)((0, index_js_4.concat)([\n        (0, index_js_4.toUtf8Bytes)(index_js_2.MessagePrefix),\n        (0, index_js_4.toUtf8Bytes)(String(message.length)),\n        message\n    ]));\n}\nexports.hashMessage = hashMessage;\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nfunction verifyMessage(message, sig) {\n    const digest = hashMessage(message);\n    return (0, index_js_3.recoverAddress)(digest, sig);\n}\nexports.verifyMessage = verifyMessage;\n//# sourceMappingURL=message.js.map","\n/**\n *  Each state-changing operation on Ethereum requires a transaction.\n *\n *  @_section api/transaction:Transactions  [about-transactions]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transaction = exports.recoverAddress = exports.computeAddress = exports.accessListify = void 0;\nnull;\nvar accesslist_js_1 = require(\"./accesslist.js\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return accesslist_js_1.accessListify; } });\nvar address_js_1 = require(\"./address.js\");\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return address_js_1.computeAddress; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return address_js_1.recoverAddress; } });\nvar transaction_js_1 = require(\"./transaction.js\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return transaction_js_1.Transaction; } });\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.accessListify = void 0;\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: (0, index_js_1.getAddress)(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            (0, index_js_2.assertArgument)((0, index_js_2.isHexString)(storageKey, 32), \"invalid slot\", `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nfunction accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                (0, index_js_2.assertArgument)(set.length === 2, \"invalid slot set\", `value[${index}]`, set);\n                return accessSetify(set[0], set[1]);\n            }\n            (0, index_js_2.assertArgument)(set != null && typeof (set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    (0, index_js_2.assertArgument)(value != null && typeof (value) === \"object\", \"invalid access list\", \"value\", value);\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nexports.accessListify = accessListify;\n//# sourceMappingURL=accesslist.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverAddress = exports.computeAddress = void 0;\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../crypto/index.js\");\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nfunction computeAddress(key) {\n    let pubkey;\n    if (typeof (key) === \"string\") {\n        pubkey = index_js_2.SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return (0, index_js_1.getAddress)((0, index_js_2.keccak256)(\"0x\" + pubkey.substring(4)).substring(26));\n}\nexports.computeAddress = computeAddress;\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nfunction recoverAddress(digest, signature) {\n    return computeAddress(index_js_2.SigningKey.recoverPublicKey(digest, signature));\n}\nexports.recoverAddress = recoverAddress;\n//# sourceMappingURL=address.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.solidityPackedSha256 = exports.solidityPackedKeccak256 = exports.solidityPacked = void 0;\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../crypto/index.js\");\nconst index_js_3 = require(\"../utils/index.js\");\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return (0, index_js_3.getBytes)((0, index_js_3.zeroPadValue)(value, 32));\n            }\n            return (0, index_js_3.getBytes)((0, index_js_1.getAddress)(value));\n        case \"string\":\n            return (0, index_js_3.toUtf8Bytes)(value);\n        case \"bytes\":\n            return (0, index_js_3.getBytes)(value);\n        case \"bool\":\n            value = (!!value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return (0, index_js_3.getBytes)((0, index_js_3.zeroPadValue)(value, 32));\n            }\n            return (0, index_js_3.getBytes)(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        let signed = (match[1] === \"int\");\n        let size = parseInt(match[2] || \"256\");\n        (0, index_js_3.assertArgument)((!match[2] || match[2] === String(size)) && (size % 8 === 0) && size !== 0 && size <= 256, \"invalid number type\", \"type\", type);\n        if (isArray) {\n            size = 256;\n        }\n        if (signed) {\n            value = (0, index_js_3.toTwos)(value, size);\n        }\n        return (0, index_js_3.getBytes)((0, index_js_3.zeroPadValue)((0, index_js_3.toBeArray)(value), size / 8));\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        (0, index_js_3.assertArgument)(String(size) === match[1] && size !== 0 && size <= 32, \"invalid bytes type\", \"type\", type);\n        (0, index_js_3.assertArgument)((0, index_js_3.dataLength)(value) === size, `invalid value for ${type}`, \"value\", value);\n        if (isArray) {\n            return (0, index_js_3.getBytes)((0, index_js_3.zeroPadBytes)(value, 32));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        (0, index_js_3.assertArgument)(count === value.length, `invalid array length for ${type}`, \"value\", value);\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return (0, index_js_3.getBytes)((0, index_js_3.concat)(result));\n    }\n    (0, index_js_3.assertArgument)(false, \"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\n/**\n *   Computes the [[link-solc-packed]] representation of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPacked([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nfunction solidityPacked(types, values) {\n    (0, index_js_3.assertArgument)(types.length === values.length, \"wrong number of values; expected ${ types.length }\", \"values\", values);\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return (0, index_js_3.hexlify)((0, index_js_3.concat)(tight));\n}\nexports.solidityPacked = solidityPacked;\n/**\n *   Computes the [[link-solc-packed]] [[keccak256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedKeccak256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nfunction solidityPackedKeccak256(types, values) {\n    return (0, index_js_2.keccak256)(solidityPacked(types, values));\n}\nexports.solidityPackedKeccak256 = solidityPackedKeccak256;\n/**\n *   Computes the [[link-solc-packed]] [[sha256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedSha256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nfunction solidityPackedSha256(types, values) {\n    return (0, index_js_2.sha256)(solidityPacked(types, values));\n}\nexports.solidityPackedSha256 = solidityPackedSha256;\n//# sourceMappingURL=solidity.js.map","\n/**\n *  A **Provider** provides a connection to the blockchain, whch can be\n *  used to query its current state, simulate execution and send transactions\n *  to update the state.\n *\n *  It is one of the most fundamental components of interacting with a\n *  blockchain application, and there are many ways to connect, such as over\n *  HTTP, WebSockets or injected providers such as [MetaMask](link-metamask).\n *\n *  @_section: api/providers:Providers  [about-providers]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SocketEventSubscriber = exports.SocketPendingSubscriber = exports.SocketBlockSubscriber = exports.SocketSubscriber = exports.WebSocketProvider = exports.SocketProvider = exports.IpcSocketProvider = exports.QuickNodeProvider = exports.PocketProvider = exports.InfuraWebSocketProvider = exports.InfuraProvider = exports.EtherscanPlugin = exports.EtherscanProvider = exports.ChainstackProvider = exports.CloudflareProvider = exports.AnkrProvider = exports.AlchemyProvider = exports.BrowserProvider = exports.JsonRpcSigner = exports.JsonRpcProvider = exports.JsonRpcApiProvider = exports.FallbackProvider = exports.copyRequest = exports.TransactionResponse = exports.TransactionReceipt = exports.Log = exports.FeeData = exports.Block = exports.FetchUrlFeeDataNetworkPlugin = exports.FeeDataNetworkPlugin = exports.EnsPlugin = exports.GasCostPlugin = exports.NetworkPlugin = exports.NonceManager = exports.Network = exports.MulticoinProviderPlugin = exports.EnsResolver = exports.getDefaultProvider = exports.showThrottleMessage = exports.VoidSigner = exports.AbstractSigner = exports.UnmanagedSubscriber = exports.AbstractProvider = void 0;\nvar abstract_provider_js_1 = require(\"./abstract-provider.js\");\nObject.defineProperty(exports, \"AbstractProvider\", { enumerable: true, get: function () { return abstract_provider_js_1.AbstractProvider; } });\nObject.defineProperty(exports, \"UnmanagedSubscriber\", { enumerable: true, get: function () { return abstract_provider_js_1.UnmanagedSubscriber; } });\nvar abstract_signer_js_1 = require(\"./abstract-signer.js\");\nObject.defineProperty(exports, \"AbstractSigner\", { enumerable: true, get: function () { return abstract_signer_js_1.AbstractSigner; } });\nObject.defineProperty(exports, \"VoidSigner\", { enumerable: true, get: function () { return abstract_signer_js_1.VoidSigner; } });\nvar community_js_1 = require(\"./community.js\");\nObject.defineProperty(exports, \"showThrottleMessage\", { enumerable: true, get: function () { return community_js_1.showThrottleMessage; } });\nvar default_provider_js_1 = require(\"./default-provider.js\");\nObject.defineProperty(exports, \"getDefaultProvider\", { enumerable: true, get: function () { return default_provider_js_1.getDefaultProvider; } });\nvar ens_resolver_js_1 = require(\"./ens-resolver.js\");\nObject.defineProperty(exports, \"EnsResolver\", { enumerable: true, get: function () { return ens_resolver_js_1.EnsResolver; } });\nObject.defineProperty(exports, \"MulticoinProviderPlugin\", { enumerable: true, get: function () { return ens_resolver_js_1.MulticoinProviderPlugin; } });\nvar network_js_1 = require(\"./network.js\");\nObject.defineProperty(exports, \"Network\", { enumerable: true, get: function () { return network_js_1.Network; } });\nvar signer_noncemanager_js_1 = require(\"./signer-noncemanager.js\");\nObject.defineProperty(exports, \"NonceManager\", { enumerable: true, get: function () { return signer_noncemanager_js_1.NonceManager; } });\nvar plugins_network_js_1 = require(\"./plugins-network.js\");\nObject.defineProperty(exports, \"NetworkPlugin\", { enumerable: true, get: function () { return plugins_network_js_1.NetworkPlugin; } });\nObject.defineProperty(exports, \"GasCostPlugin\", { enumerable: true, get: function () { return plugins_network_js_1.GasCostPlugin; } });\nObject.defineProperty(exports, \"EnsPlugin\", { enumerable: true, get: function () { return plugins_network_js_1.EnsPlugin; } });\nObject.defineProperty(exports, \"FeeDataNetworkPlugin\", { enumerable: true, get: function () { return plugins_network_js_1.FeeDataNetworkPlugin; } });\nObject.defineProperty(exports, \"FetchUrlFeeDataNetworkPlugin\", { enumerable: true, get: function () { return plugins_network_js_1.FetchUrlFeeDataNetworkPlugin; } });\nvar provider_js_1 = require(\"./provider.js\");\nObject.defineProperty(exports, \"Block\", { enumerable: true, get: function () { return provider_js_1.Block; } });\nObject.defineProperty(exports, \"FeeData\", { enumerable: true, get: function () { return provider_js_1.FeeData; } });\nObject.defineProperty(exports, \"Log\", { enumerable: true, get: function () { return provider_js_1.Log; } });\nObject.defineProperty(exports, \"TransactionReceipt\", { enumerable: true, get: function () { return provider_js_1.TransactionReceipt; } });\nObject.defineProperty(exports, \"TransactionResponse\", { enumerable: true, get: function () { return provider_js_1.TransactionResponse; } });\nObject.defineProperty(exports, \"copyRequest\", { enumerable: true, get: function () { return provider_js_1.copyRequest; } });\nvar provider_fallback_js_1 = require(\"./provider-fallback.js\");\nObject.defineProperty(exports, \"FallbackProvider\", { enumerable: true, get: function () { return provider_fallback_js_1.FallbackProvider; } });\nvar provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nObject.defineProperty(exports, \"JsonRpcApiProvider\", { enumerable: true, get: function () { return provider_jsonrpc_js_1.JsonRpcApiProvider; } });\nObject.defineProperty(exports, \"JsonRpcProvider\", { enumerable: true, get: function () { return provider_jsonrpc_js_1.JsonRpcProvider; } });\nObject.defineProperty(exports, \"JsonRpcSigner\", { enumerable: true, get: function () { return provider_jsonrpc_js_1.JsonRpcSigner; } });\nvar provider_browser_js_1 = require(\"./provider-browser.js\");\nObject.defineProperty(exports, \"BrowserProvider\", { enumerable: true, get: function () { return provider_browser_js_1.BrowserProvider; } });\nvar provider_alchemy_js_1 = require(\"./provider-alchemy.js\");\nObject.defineProperty(exports, \"AlchemyProvider\", { enumerable: true, get: function () { return provider_alchemy_js_1.AlchemyProvider; } });\nvar provider_ankr_js_1 = require(\"./provider-ankr.js\");\nObject.defineProperty(exports, \"AnkrProvider\", { enumerable: true, get: function () { return provider_ankr_js_1.AnkrProvider; } });\nvar provider_cloudflare_js_1 = require(\"./provider-cloudflare.js\");\nObject.defineProperty(exports, \"CloudflareProvider\", { enumerable: true, get: function () { return provider_cloudflare_js_1.CloudflareProvider; } });\nvar provider_chainstack_js_1 = require(\"./provider-chainstack.js\");\nObject.defineProperty(exports, \"ChainstackProvider\", { enumerable: true, get: function () { return provider_chainstack_js_1.ChainstackProvider; } });\nvar provider_etherscan_js_1 = require(\"./provider-etherscan.js\");\nObject.defineProperty(exports, \"EtherscanProvider\", { enumerable: true, get: function () { return provider_etherscan_js_1.EtherscanProvider; } });\nObject.defineProperty(exports, \"EtherscanPlugin\", { enumerable: true, get: function () { return provider_etherscan_js_1.EtherscanPlugin; } });\nvar provider_infura_js_1 = require(\"./provider-infura.js\");\nObject.defineProperty(exports, \"InfuraProvider\", { enumerable: true, get: function () { return provider_infura_js_1.InfuraProvider; } });\nObject.defineProperty(exports, \"InfuraWebSocketProvider\", { enumerable: true, get: function () { return provider_infura_js_1.InfuraWebSocketProvider; } });\nvar provider_pocket_js_1 = require(\"./provider-pocket.js\");\nObject.defineProperty(exports, \"PocketProvider\", { enumerable: true, get: function () { return provider_pocket_js_1.PocketProvider; } });\nvar provider_quicknode_js_1 = require(\"./provider-quicknode.js\");\nObject.defineProperty(exports, \"QuickNodeProvider\", { enumerable: true, get: function () { return provider_quicknode_js_1.QuickNodeProvider; } });\nconst provider_ipcsocket_js_1 = require(\"./provider-ipcsocket.js\"); /*-browser*/\nObject.defineProperty(exports, \"IpcSocketProvider\", { enumerable: true, get: function () { return provider_ipcsocket_js_1.IpcSocketProvider; } });\nvar provider_socket_js_1 = require(\"./provider-socket.js\");\nObject.defineProperty(exports, \"SocketProvider\", { enumerable: true, get: function () { return provider_socket_js_1.SocketProvider; } });\nvar provider_websocket_js_1 = require(\"./provider-websocket.js\");\nObject.defineProperty(exports, \"WebSocketProvider\", { enumerable: true, get: function () { return provider_websocket_js_1.WebSocketProvider; } });\nvar provider_socket_js_2 = require(\"./provider-socket.js\");\nObject.defineProperty(exports, \"SocketSubscriber\", { enumerable: true, get: function () { return provider_socket_js_2.SocketSubscriber; } });\nObject.defineProperty(exports, \"SocketBlockSubscriber\", { enumerable: true, get: function () { return provider_socket_js_2.SocketBlockSubscriber; } });\nObject.defineProperty(exports, \"SocketPendingSubscriber\", { enumerable: true, get: function () { return provider_socket_js_2.SocketPendingSubscriber; } });\nObject.defineProperty(exports, \"SocketEventSubscriber\", { enumerable: true, get: function () { return provider_socket_js_2.SocketEventSubscriber; } });\n//# sourceMappingURL=index.js.map","\n/**\n *  There are many awesome community services that provide Ethereum\n *  nodes both for developers just starting out and for large-scale\n *  communities.\n *\n *  @_section: api/providers/thirdparty: Community Providers  [thirdparty]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showThrottleMessage = void 0;\n// Show the throttle message only once per service\nconst shown = new Set();\n/**\n *  Displays a warning in tht console when the community resource is\n *  being used too heavily by the app, recommending the developer\n *  acquire their own credentials instead of using the community\n *  credentials.\n *\n *  The notification will only occur once per service.\n */\nfunction showThrottleMessage(service) {\n    if (shown.has(service)) {\n        return;\n    }\n    shown.add(service);\n    console.log(\"========= NOTICE =========\");\n    console.log(`Request-Rate Exceeded for ${service} (this message will not be repeated)`);\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.org/api-keys/\");\n    console.log(\"==========================\");\n}\nexports.showThrottleMessage = showThrottleMessage;\n//# sourceMappingURL=community.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultProvider = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst provider_ankr_js_1 = require(\"./provider-ankr.js\");\nconst provider_alchemy_js_1 = require(\"./provider-alchemy.js\");\nconst provider_chainstack_js_1 = require(\"./provider-chainstack.js\");\nconst provider_cloudflare_js_1 = require(\"./provider-cloudflare.js\");\nconst provider_etherscan_js_1 = require(\"./provider-etherscan.js\");\nconst provider_infura_js_1 = require(\"./provider-infura.js\");\n//import { PocketProvider } from \"./provider-pocket.js\";\nconst provider_quicknode_js_1 = require(\"./provider-quicknode.js\");\nconst provider_fallback_js_1 = require(\"./provider-fallback.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_websocket_js_1 = require(\"./provider-websocket.js\");\nfunction isWebSocketLike(value) {\n    return (value && typeof (value.send) === \"function\" &&\n        typeof (value.close) === \"function\");\n}\nconst Testnets = \"goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt\".split(\" \");\n/**\n *  Returns a default provider for %%network%%.\n *\n *  If %%network%% is a [[WebSocketLike]] or string that begins with\n *  ``\"ws:\"`` or ``\"wss:\"``, a [[WebSocketProvider]] is returned backed\n *  by that WebSocket or URL.\n *\n *  If %%network%% is a string that begins with ``\"HTTP:\"`` or ``\"HTTPS:\"``,\n *  a [[JsonRpcProvider]] is returned connected to that URL.\n *\n *  Otherwise, a default provider is created backed by well-known public\n *  Web3 backends (such as [[link-infura]]) using community-provided API\n *  keys.\n *\n *  The %%options%% allows specifying custom API keys per backend (setting\n *  an API key to ``\"-\"`` will omit that provider) and ``options.exclusive``\n *  can be set to either a backend name or and array of backend names, which\n *  will whitelist **only** those backends.\n *\n *  Current backend strings supported are:\n *  - ``\"alchemy\"``\n *  - ``\"ankr\"``\n *  - ``\"cloudflare\"``\n *  - ``\"chainstack\"``\n *  - ``\"etherscan\"``\n *  - ``\"infura\"``\n *  - ``\"publicPolygon\"``\n *  - ``\"quicknode\"``\n *\n *  @example:\n *    // Connect to a local Geth node\n *    provider = getDefaultProvider(\"http://localhost:8545/\");\n *\n *    // Connect to Ethereum mainnet with any current and future\n *    // third-party services available\n *    provider = getDefaultProvider(\"mainnet\");\n *\n *    // Connect to Polygon, but only allow Etherscan and\n *    // INFURA and use \"MY_API_KEY\" in calls to Etherscan.\n *    provider = getDefaultProvider(\"matic\", {\n *      etherscan: \"MY_API_KEY\",\n *      exclusive: [ \"etherscan\", \"infura\" ]\n *    });\n */\nfunction getDefaultProvider(network, options) {\n    if (options == null) {\n        options = {};\n    }\n    const allowService = (name) => {\n        if (options[name] === \"-\") {\n            return false;\n        }\n        if (typeof (options.exclusive) === \"string\") {\n            return (name === options.exclusive);\n        }\n        if (Array.isArray(options.exclusive)) {\n            return (options.exclusive.indexOf(name) !== -1);\n        }\n        return true;\n    };\n    if (typeof (network) === \"string\" && network.match(/^https?:/)) {\n        return new provider_jsonrpc_js_1.JsonRpcProvider(network);\n    }\n    if (typeof (network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new provider_websocket_js_1.WebSocketProvider(network);\n    }\n    // Get the network and name, if possible\n    let staticNetwork = null;\n    try {\n        staticNetwork = network_js_1.Network.from(network);\n    }\n    catch (error) { }\n    const providers = [];\n    if (allowService(\"publicPolygon\") && staticNetwork) {\n        if (staticNetwork.name === \"matic\") {\n            providers.push(new provider_jsonrpc_js_1.JsonRpcProvider(\"https:/\\/polygon-rpc.com/\", staticNetwork, { staticNetwork }));\n        }\n        else if (staticNetwork.name === \"matic-amoy\") {\n            providers.push(new provider_jsonrpc_js_1.JsonRpcProvider(\"https:/\\/rpc-amoy.polygon.technology/\", staticNetwork, { staticNetwork }));\n        }\n    }\n    if (allowService(\"alchemy\")) {\n        try {\n            providers.push(new provider_alchemy_js_1.AlchemyProvider(network, options.alchemy));\n        }\n        catch (error) { }\n    }\n    if (allowService(\"ankr\") && options.ankr != null) {\n        try {\n            providers.push(new provider_ankr_js_1.AnkrProvider(network, options.ankr));\n        }\n        catch (error) { }\n    }\n    if (allowService(\"chainstack\")) {\n        try {\n            providers.push(new provider_chainstack_js_1.ChainstackProvider(network, options.chainstack));\n        }\n        catch (error) { }\n    }\n    if (allowService(\"cloudflare\")) {\n        try {\n            providers.push(new provider_cloudflare_js_1.CloudflareProvider(network));\n        }\n        catch (error) { }\n    }\n    if (allowService(\"etherscan\")) {\n        try {\n            providers.push(new provider_etherscan_js_1.EtherscanProvider(network, options.etherscan));\n        }\n        catch (error) { }\n    }\n    if (allowService(\"infura\")) {\n        try {\n            let projectId = options.infura;\n            let projectSecret = undefined;\n            if (typeof (projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new provider_infura_js_1.InfuraProvider(network, projectId, projectSecret));\n        }\n        catch (error) { }\n    }\n    /*\n        if (options.pocket !== \"-\") {\n            try {\n                let appId = options.pocket;\n                let secretKey: undefined | string = undefined;\n                let loadBalancer: undefined | boolean = undefined;\n                if (typeof(appId) === \"object\") {\n                    loadBalancer = !!appId.loadBalancer;\n                    secretKey = appId.secretKey;\n                    appId = appId.appId;\n                }\n                providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n            } catch (error) { console.log(error); }\n        }\n    */\n    if (allowService(\"quicknode\")) {\n        try {\n            let token = options.quicknode;\n            providers.push(new provider_quicknode_js_1.QuickNodeProvider(network, token));\n        }\n        catch (error) { }\n    }\n    (0, index_js_1.assert)(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getDefaultProvider\"\n    });\n    // No need for a FallbackProvider\n    if (providers.length === 1) {\n        return providers[0];\n    }\n    // We use the floor because public third-party providers can be unreliable,\n    // so a low number of providers with a large quorum will fail too often\n    let quorum = Math.floor(providers.length / 2);\n    if (quorum > 2) {\n        quorum = 2;\n    }\n    // Testnets don't need as strong a security gaurantee and speed is\n    // more useful during testing\n    if (staticNetwork && Testnets.indexOf(staticNetwork.name) !== -1) {\n        quorum = 1;\n    }\n    // Provided override qorum takes priority\n    if (options && options.quorum) {\n        quorum = options.quorum;\n    }\n    return new provider_fallback_js_1.FallbackProvider(providers, undefined, { quorum });\n}\nexports.getDefaultProvider = getDefaultProvider;\n//# sourceMappingURL=default-provider.js.map","\n/**\n *  About Cloudflare\n *\n *  @_subsection: api/providers/thirdparty:Cloudflare  [providers-cloudflare]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudflareProvider = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\n/**\n *  About Cloudflare...\n */\nclass CloudflareProvider extends provider_jsonrpc_js_1.JsonRpcProvider {\n    constructor(_network) {\n        if (_network == null) {\n            _network = \"mainnet\";\n        }\n        const network = network_js_1.Network.from(_network);\n        (0, index_js_1.assertArgument)(network.name === \"mainnet\", \"unsupported network\", \"network\", _network);\n        super(\"https:/\\/cloudflare-eth.com/\", network, { staticNetwork: network });\n    }\n}\nexports.CloudflareProvider = CloudflareProvider;\n//# sourceMappingURL=provider-cloudflare.js.map","\n/**\n *  When interacting with Ethereum, it is necessary to use a private\n *  key authenticate actions by signing a payload.\n *\n *  Wallets are the simplest way to expose the concept of an\n *  //Externally Owner Account// (EOA) as it wraps a private key\n *  and supports high-level methods to sign common types of interaction\n *  and send transactions.\n *\n *  The class most developers will want to use is [[Wallet]], which\n *  can load a private key directly or from any common wallet format.\n *\n *  The [[HDNodeWallet]] can be used when it is necessary to access\n *  low-level details of how an HD wallets are derived, exported\n *  or imported.\n *\n *  @_section: api/wallet:Wallets  [about-wallets]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wallet = exports.Mnemonic = exports.encryptKeystoreJsonSync = exports.encryptKeystoreJson = exports.decryptKeystoreJson = exports.decryptKeystoreJsonSync = exports.isKeystoreJson = exports.decryptCrowdsaleJson = exports.isCrowdsaleJson = exports.HDNodeVoidWallet = exports.HDNodeWallet = exports.getIndexedAccountPath = exports.getAccountPath = exports.defaultPath = exports.BaseWallet = void 0;\nvar base_wallet_js_1 = require(\"./base-wallet.js\");\nObject.defineProperty(exports, \"BaseWallet\", { enumerable: true, get: function () { return base_wallet_js_1.BaseWallet; } });\nvar hdwallet_js_1 = require(\"./hdwallet.js\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdwallet_js_1.defaultPath; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdwallet_js_1.getAccountPath; } });\nObject.defineProperty(exports, \"getIndexedAccountPath\", { enumerable: true, get: function () { return hdwallet_js_1.getIndexedAccountPath; } });\nObject.defineProperty(exports, \"HDNodeWallet\", { enumerable: true, get: function () { return hdwallet_js_1.HDNodeWallet; } });\nObject.defineProperty(exports, \"HDNodeVoidWallet\", { enumerable: true, get: function () { return hdwallet_js_1.HDNodeVoidWallet; } });\nvar json_crowdsale_js_1 = require(\"./json-crowdsale.js\");\nObject.defineProperty(exports, \"isCrowdsaleJson\", { enumerable: true, get: function () { return json_crowdsale_js_1.isCrowdsaleJson; } });\nObject.defineProperty(exports, \"decryptCrowdsaleJson\", { enumerable: true, get: function () { return json_crowdsale_js_1.decryptCrowdsaleJson; } });\nvar json_keystore_js_1 = require(\"./json-keystore.js\");\nObject.defineProperty(exports, \"isKeystoreJson\", { enumerable: true, get: function () { return json_keystore_js_1.isKeystoreJson; } });\nObject.defineProperty(exports, \"decryptKeystoreJsonSync\", { enumerable: true, get: function () { return json_keystore_js_1.decryptKeystoreJsonSync; } });\nObject.defineProperty(exports, \"decryptKeystoreJson\", { enumerable: true, get: function () { return json_keystore_js_1.decryptKeystoreJson; } });\nObject.defineProperty(exports, \"encryptKeystoreJson\", { enumerable: true, get: function () { return json_keystore_js_1.encryptKeystoreJson; } });\nObject.defineProperty(exports, \"encryptKeystoreJsonSync\", { enumerable: true, get: function () { return json_keystore_js_1.encryptKeystoreJsonSync; } });\nvar mnemonic_js_1 = require(\"./mnemonic.js\");\nObject.defineProperty(exports, \"Mnemonic\", { enumerable: true, get: function () { return mnemonic_js_1.Mnemonic; } });\nvar wallet_js_1 = require(\"./wallet.js\");\nObject.defineProperty(exports, \"Wallet\", { enumerable: true, get: function () { return wallet_js_1.Wallet; } });\n//# sourceMappingURL=index.js.map","\n/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decryptCrowdsaleJson = exports.isCrowdsaleJson = void 0;\nconst aes_js_1 = require(\"aes-js\");\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../crypto/index.js\");\nconst index_js_3 = require(\"../hash/index.js\");\nconst index_js_4 = require(\"../utils/index.js\");\nconst utils_js_1 = require(\"./utils.js\");\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nfunction isCrowdsaleJson(json) {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nexports.isCrowdsaleJson = isCrowdsaleJson;\n// See: https://github.com/ethereum/pyethsaletool\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nfunction decryptCrowdsaleJson(json, _password) {\n    const data = JSON.parse(json);\n    const password = (0, utils_js_1.getPassword)(_password);\n    // Ethereum Address\n    const address = (0, index_js_1.getAddress)((0, utils_js_1.spelunk)(data, \"ethaddr:string!\"));\n    // Encrypted Seed\n    const encseed = (0, utils_js_1.looseArrayify)((0, utils_js_1.spelunk)(data, \"encseed:string!\"));\n    (0, index_js_4.assertArgument)(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n    const key = (0, index_js_4.getBytes)((0, index_js_2.pbkdf2)(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes_js_1.CBC(key, iv);\n    const seed = (0, aes_js_1.pkcs7Strip)((0, index_js_4.getBytes)(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    return { address, privateKey: (0, index_js_3.id)(seedHex) };\n}\nexports.decryptCrowdsaleJson = decryptCrowdsaleJson;\n//# sourceMappingURL=json-crowdsale.js.map","\n/**\n *  @_ignore\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spelunk = exports.getPassword = exports.zpad = exports.looseArrayify = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nfunction looseArrayify(hexString) {\n    if (typeof (hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return (0, index_js_1.getBytesCopy)(hexString);\n}\nexports.looseArrayify = looseArrayify;\nfunction zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexports.zpad = zpad;\nfunction getPassword(password) {\n    if (typeof (password) === 'string') {\n        return (0, index_js_1.toUtf8Bytes)(password, \"NFKC\");\n    }\n    return (0, index_js_1.getBytesCopy)(password);\n}\nexports.getPassword = getPassword;\nfunction spelunk(object, _path) {\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    (0, index_js_1.assertArgument)(match != null, \"invalid path\", \"path\", _path);\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) {\n                break;\n            }\n            cur = cur[parseInt(comp)];\n        }\n        else if (typeof (cur) === \"object\") {\n            let found = null;\n            for (const key in cur) {\n                if (key.toLowerCase() === comp) {\n                    found = cur[key];\n                    break;\n                }\n            }\n            cur = found;\n        }\n        else {\n            cur = null;\n        }\n        if (cur == null) {\n            break;\n        }\n    }\n    (0, index_js_1.assertArgument)(!reqd || cur != null, \"missing required value\", \"path\", path);\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return parseInt(cur);\n            }\n            else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n        if (type === \"number\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return parseFloat(cur);\n            }\n        }\n        if (type === \"data\") {\n            if (typeof (cur) === \"string\") {\n                return looseArrayify(cur);\n            }\n        }\n        if (type === \"array\" && Array.isArray(cur)) {\n            return cur;\n        }\n        if (type === typeof (cur)) {\n            return cur;\n        }\n        (0, index_js_1.assertArgument)(false, `wrong type found for ${type} `, \"path\", path);\n    }\n    return cur;\n}\nexports.spelunk = spelunk;\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n//# sourceMappingURL=utils.js.map","\n/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encryptKeystoreJson = exports.encryptKeystoreJsonSync = exports.decryptKeystoreJson = exports.decryptKeystoreJsonSync = exports.isKeystoreJson = void 0;\nconst aes_js_1 = require(\"aes-js\");\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../crypto/index.js\");\nconst index_js_3 = require(\"../transaction/index.js\");\nconst index_js_4 = require(\"../utils/index.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst _version_js_1 = require(\"../_version.js\");\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nfunction isKeystoreJson(json) {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version) : 0);\n        if (version === 3) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nexports.isKeystoreJson = isKeystoreJson;\nfunction decrypt(data, key, ciphertext) {\n    const cipher = (0, utils_js_1.spelunk)(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = (0, utils_js_1.spelunk)(data, \"crypto.cipherparams.iv:data!\");\n        const aesCtr = new aes_js_1.CTR(key, iv);\n        return (0, index_js_4.hexlify)(aesCtr.decrypt(ciphertext));\n    }\n    (0, index_js_4.assert)(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\nfunction getAccount(data, _key) {\n    const key = (0, index_js_4.getBytes)(_key);\n    const ciphertext = (0, utils_js_1.spelunk)(data, \"crypto.ciphertext:data!\");\n    const computedMAC = (0, index_js_4.hexlify)((0, index_js_2.keccak256)((0, index_js_4.concat)([key.slice(16, 32), ciphertext]))).substring(2);\n    (0, index_js_4.assertArgument)(computedMAC === (0, utils_js_1.spelunk)(data, \"crypto.mac:string!\").toLowerCase(), \"incorrect password\", \"password\", \"[ REDACTED ]\");\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n    const address = (0, index_js_3.computeAddress)(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) {\n            check = \"0x\" + check;\n        }\n        (0, index_js_4.assertArgument)((0, index_js_1.getAddress)(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n    const account = { address, privateKey };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = (0, utils_js_1.spelunk)(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n        const mnemonicCiphertext = (0, utils_js_1.spelunk)(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = (0, utils_js_1.spelunk)(data, \"x-ethers.mnemonicCounter:data!\");\n        const mnemonicAesCtr = new aes_js_1.CTR(mnemonicKey, mnemonicIv);\n        account.mnemonic = {\n            path: ((0, utils_js_1.spelunk)(data, \"x-ethers.path:string\") || defaultPath),\n            locale: ((0, utils_js_1.spelunk)(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: (0, index_js_4.hexlify)((0, index_js_4.getBytes)(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n    return account;\n}\nfunction getDecryptKdfParams(data) {\n    const kdf = (0, utils_js_1.spelunk)(data, \"crypto.kdf:string\");\n    if (kdf && typeof (kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.salt:data!\");\n            const N = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.n:int!\");\n            const r = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.r:int!\");\n            const p = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.p:int!\");\n            // Make sure N is a power of 2\n            (0, index_js_4.assertArgument)(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            (0, index_js_4.assertArgument)(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n            const dkLen = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.dklen:int!\");\n            (0, index_js_4.assertArgument)(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.salt:data!\");\n            const prf = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            (0, index_js_4.assertArgument)(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n            const count = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.c:int!\");\n            const dkLen = (0, utils_js_1.spelunk)(data, \"crypto.kdfparams.dklen:int!\");\n            (0, index_js_4.assertArgument)(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n    (0, index_js_4.assertArgument)(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nfunction decryptKeystoreJsonSync(json, _password) {\n    const data = JSON.parse(json);\n    const password = (0, utils_js_1.getPassword)(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = (0, index_js_2.pbkdf2)(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n    (0, index_js_4.assert)(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = (0, index_js_2.scryptSync)(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\nexports.decryptKeystoreJsonSync = decryptKeystoreJsonSync;\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nasync function decryptKeystoreJson(json, _password, progress) {\n    const data = JSON.parse(json);\n    const password = (0, utils_js_1.getPassword)(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = (0, index_js_2.pbkdf2)(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n    (0, index_js_4.assert)(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = await (0, index_js_2.scrypt)(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\nexports.decryptKeystoreJson = decryptKeystoreJson;\nfunction getEncryptKdfParams(options) {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? (0, index_js_4.getBytes)(options.salt, \"options.salt\") : (0, index_js_2.randomBytes)(32);\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    (0, index_js_4.assertArgument)(typeof (N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    (0, index_js_4.assertArgument)(typeof (r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    (0, index_js_4.assertArgument)(typeof (p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\nfunction _encryptKeystore(key, kdf, account, options) {\n    const privateKey = (0, index_js_4.getBytes)(account.privateKey, \"privateKey\");\n    // Override initialization vector\n    const iv = (options.iv != null) ? (0, index_js_4.getBytes)(options.iv, \"options.iv\") : (0, index_js_2.randomBytes)(16);\n    (0, index_js_4.assertArgument)(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? (0, index_js_4.getBytes)(options.uuid, \"options.uuid\") : (0, index_js_2.randomBytes)(16);\n    (0, index_js_4.assertArgument)(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    // Encrypt the private key\n    const aesCtr = new aes_js_1.CTR(derivedKey, iv);\n    const ciphertext = (0, index_js_4.getBytes)(aesCtr.encrypt(privateKey));\n    // Compute the message authentication code, used to check the password\n    const mac = (0, index_js_2.keccak256)((0, index_js_4.concat)([macPrefix, ciphertext]));\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data = {\n        address: account.address.substring(2).toLowerCase(),\n        id: (0, index_js_4.uuidV4)(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: (0, index_js_4.hexlify)(iv).substring(2),\n            },\n            ciphertext: (0, index_js_4.hexlify)(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: (0, index_js_4.hexlify)(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client : `ethers/${_version_js_1.version}`;\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n        const mnemonicKey = key.slice(32, 64);\n        const entropy = (0, index_js_4.getBytes)(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = (0, index_js_2.randomBytes)(16);\n        const mnemonicAesCtr = new aes_js_1.CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = (0, index_js_4.getBytes)(mnemonicAesCtr.encrypt(entropy));\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n            (0, utils_js_1.zpad)(now.getUTCMonth() + 1, 2) + \"-\" +\n            (0, utils_js_1.zpad)(now.getUTCDate(), 2) + \"T\" +\n            (0, utils_js_1.zpad)(now.getUTCHours(), 2) + \"-\" +\n            (0, utils_js_1.zpad)(now.getUTCMinutes(), 2) + \"-\" +\n            (0, utils_js_1.zpad)(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: (0, index_js_4.hexlify)(mnemonicIv).substring(2),\n            mnemonicCiphertext: (0, index_js_4.hexlify)(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n    return JSON.stringify(data);\n}\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nfunction encryptKeystoreJsonSync(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = (0, utils_js_1.getPassword)(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = (0, index_js_2.scryptSync)(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore((0, index_js_4.getBytes)(key), kdf, account, options);\n}\nexports.encryptKeystoreJsonSync = encryptKeystoreJsonSync;\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nasync function encryptKeystoreJson(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = (0, utils_js_1.getPassword)(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await (0, index_js_2.scrypt)(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore((0, index_js_4.getBytes)(key), kdf, account, options);\n}\nexports.encryptKeystoreJson = encryptKeystoreJson;\n//# sourceMappingURL=json-keystore.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlists = exports.WordlistOwlA = exports.WordlistOwl = exports.LangEn = exports.Wordlist = void 0;\n/**\n *  A Wordlist is a set of 2048 words used to encode private keys\n *  (or other binary data) that is easier for humans to write down,\n *  transcribe and dictate.\n *\n *  The [[link-bip-39]] standard includes several checksum bits,\n *  depending on the size of the mnemonic phrase.\n *\n *  A mnemonic phrase may be 12, 15, 18, 21 or 24 words long. For\n *  most purposes 12 word mnemonics should be used, as including\n *  additional words increases the difficulty and potential for\n *  mistakes and does not offer any effective improvement on security.\n *\n *  There are a variety of [[link-bip39-wordlists]] for different\n *  languages, but for maximal compatibility, the\n *  [English Wordlist](LangEn) is recommended.\n *\n *  @_section: api/wordlists:Wordlists [about-wordlists]\n */\nvar wordlist_js_1 = require(\"./wordlist.js\");\nObject.defineProperty(exports, \"Wordlist\", { enumerable: true, get: function () { return wordlist_js_1.Wordlist; } });\nvar lang_en_js_1 = require(\"./lang-en.js\");\nObject.defineProperty(exports, \"LangEn\", { enumerable: true, get: function () { return lang_en_js_1.LangEn; } });\nvar wordlist_owl_js_1 = require(\"./wordlist-owl.js\");\nObject.defineProperty(exports, \"WordlistOwl\", { enumerable: true, get: function () { return wordlist_owl_js_1.WordlistOwl; } });\nvar wordlist_owla_js_1 = require(\"./wordlist-owla.js\");\nObject.defineProperty(exports, \"WordlistOwlA\", { enumerable: true, get: function () { return wordlist_owla_js_1.WordlistOwlA; } });\nvar wordlists_js_1 = require(\"./wordlists.js\");\nObject.defineProperty(exports, \"wordlists\", { enumerable: true, get: function () { return wordlists_js_1.wordlists; } });\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangEn = void 0;\nconst wordlist_owl_js_1 = require(\"./wordlist-owl.js\");\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangEn extends wordlist_owl_js_1.WordlistOwl {\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEn();\n        }\n        return wordlist;\n    }\n}\nexports.LangEn = LangEn;\n//# sourceMappingURL=lang-en.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlists = void 0;\nconst lang_cz_js_1 = require(\"./lang-cz.js\");\nconst lang_en_js_1 = require(\"./lang-en.js\");\nconst lang_es_js_1 = require(\"./lang-es.js\");\nconst lang_fr_js_1 = require(\"./lang-fr.js\");\nconst lang_ja_js_1 = require(\"./lang-ja.js\");\nconst lang_ko_js_1 = require(\"./lang-ko.js\");\nconst lang_it_js_1 = require(\"./lang-it.js\");\nconst lang_pt_js_1 = require(\"./lang-pt.js\");\nconst lang_zh_js_1 = require(\"./lang-zh.js\");\n/**\n *  The available Wordlists by their\n *  [ISO 639-1 Language Code](link-wiki-iso639).\n *\n *  (**i.e.** [cz](LangCz), [en](LangEn), [es](LangEs), [fr](LangFr),\n *  [ja](LangJa), [ko](LangKo), [it](LangIt), [pt](LangPt),\n *  [zh_cn](LangZh), [zh_tw](LangZh))\n *\n *  The dist files (in the ``/dist`` folder) have had all languages\n *  except English stripped out, which reduces the library size by\n *  about 80kb. If required, they are available by importing the\n *  included ``wordlists-extra.min.js`` file.\n */\nexports.wordlists = {\n    cz: lang_cz_js_1.LangCz.wordlist(),\n    en: lang_en_js_1.LangEn.wordlist(),\n    es: lang_es_js_1.LangEs.wordlist(),\n    fr: lang_fr_js_1.LangFr.wordlist(),\n    it: lang_it_js_1.LangIt.wordlist(),\n    pt: lang_pt_js_1.LangPt.wordlist(),\n    ja: lang_ja_js_1.LangJa.wordlist(),\n    ko: lang_ko_js_1.LangKo.wordlist(),\n    zh_cn: lang_zh_js_1.LangZh.wordlist(\"cn\"),\n    zh_tw: lang_zh_js_1.LangZh.wordlist(\"tw\"),\n};\n//# sourceMappingURL=wordlists.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangCz = void 0;\nconst wordlist_owl_js_1 = require(\"./wordlist-owl.js\");\nconst words = \"0itatkastcenaovo$taouleraeki&chor*teci%enbalodaeladet'!Chn=0Di#%E%^1Resa2Rese3CeT'#0EjKohol0Pu)%0A&sDul#Ekdo)Ke)Ti#Ul|3}aOgan%0FaltI$@tPi,%TmaTronom0LasL{i#Ol0Tobus4Yl:B#}<CilCul#D!_Ge)GrHnoKterieLa^L{#LkonLon-LvanLzaMbusNkom!R[rR{RmanRokoRvaTer#TohVl&Zal#Zili#Zu#3D&RanSe^StieTonZin#ZmocZ)k3CyklD]Ft-KinyLan%Og,fO]gTvaZon2AhobytAt*/E/aEdu+EskIk!Iz&Ok|Oud Ud2B-BrDl.D~H!(JkotJ|K<ysLe$R>R'?TaUb_U/!U^U+Ur!Xer2A^v#Ambo,An#AtrEp)Ike)KoLohOnzOskevUn{#Usin#Z^Zy2Bl.Bn|})D _D#D'aF{Jar(Kv?LdokLvaN^NkrRzaTikVolZola3D+tL.T'#0Ukot:PartRev&3DrDu+J/JnLaLerLkemLn?N.Nn(N'#NtrumNz<StopisT#2AlupaAp`]Ar aA)E/t!EmieI/otIrurgL`Le[Lub M_Mu,ObotO/olOd[O+,Om=Op Oro[OvRapotRl RtRupTiv(Ud.Utn!V!Vil#V(Y[Y$!Yt 0Bu+Gare)H_&HlaNkotRkusSter&Ta%TrusZin>Z(2O&2KolivUv!4It_N(0Dn(Ke)KrPot0Ak~AlIkRkot2Kli$a:L-oRe[T_Tum1E,1B!a}'#Cib_Fic Fla%KlKr{Mokr!PreseRbyS#T-tiv3Kob,zKt|O^P]mSkSp+jV`]Vo/2AhaOuhoUhopis1Es0BroByt-C@t}ut DnesH+dHo^H,JemJn?Kl`KolaKt<Kum@tLarLevaL.MaM.ntMluv M'Nut P`PisPln PosudPr'odPu$ Raz R(RtSahSl'St!-SudSy)TazT-Tk~Uf!Utn!Voz%Z`uZn!Z<%2Aho)AkAm!ikAv>AzeDolObn(OgerieOzdSn(T Z(2B@}'noD-HaH'#S SnoT(0Oj?Or>2Nam :9O]gOnomie0EktronIpsa0AilIseO%P!ie2Izo^O/aOpejOs2EjEn%K<)Kymo0Ike)0F<ie0Olu%1Eku%KurzePed?P]zeP<tT,kt:C#Jf#Kul)N!ikN)zieRmacieV< Zo+3De,%J{onN#3Al#Gu,ntLozofLtrNan%N)Xa%0Ord1An_IrtOtila2NdSf<T[lT#Ton2Ak%Es#On)2KarNk%3Zi#:LejeRant3N{i#O]g3Lot.2Azu,Ejt2LemLfi$aTi#2AfAmofonAnu+EpIlOgOtes#2Ma:D?DrLaL@#N[NopisRfaRpu&V,n3Bk(J#lJnoJtmanK)rLmaM!omR>R&S]Zky3St<ik2Ad'#AsivkyAvaEd!EnO^v>OhOup(T!Ub.U/o)0AtO)Yz0IsOjivoOut0Bl.Boj}DinyDl!Dno)D|Jn(KejLin#L#LubMo+N [No,%RalR^RizontRkoRliv>RmonRn.RoskopR$voSpo^St.T'(U[UfUp!Us#V<2Ad[An?Av(Az^Bo+kD.D]D(N-Ob#Oma^OtOu^Oz@St#Ub(Yz!2B@(B~D[KotMrS aSto)0Ozd2Bn(D,ntGie&M&Sterik:2Yl#3Ned2O&0Uze0Un a0F-%Fla%KasoOva%Sp-%Tern{Vali^Ve$<Zer%3Onie:Blko})Ho^Kmi+K(L'>N)rRmarkRoSanSnoT#V<Zyk3Din>D+Dn!_HlanKotL@L oMn(NomP?S{erV Zd>Zero3NakNdyNo/Sk,Sto)Trn?Zva3En|1Gurt5R):Bar{B_Bin{}&D{Did]HanJakJu)KaoKtusLam aLhotyLibrLn(Me,MkolivM&Ni[lNoeNt<Pal.P_aP olaP#P+Po)PrPu$aPy[,Ram_Rot#RtonSaTa]gTed,U%UzaVa+cZaj#Ze)Ziv(2EkolivEsi0Dlub@MpRami#3No2A%kAdivoAmApotAsi#AunEcEn[Ep!Es~IdImaIs&Ob*kO#nOpaOubUb'&Us!Uzk(0EnIt!Otr0IhaOt0Al?Ber>B#BlihaBylaC*rH=J@>KosKtejlLapsLe^LizeLoMandoMe)MikMn!aMo,MpasMun aN!N%ptNd?N>NfeseNgresN.NkursN)ktNzervaPan>PieP~Pr'#Rb_R-t<Rmid]RoptevRpusRu&RytoRz{S!>St#T_T+)T*lUk!Up_&Us-Uz]VbojZaZ<oh2Ab?A/Aj.Al|AsopisAv!aEd EjcarEs[Eve)Ik{ItikIzeKav>Me+cMivoOcanOkOni#Op OupaOv#T-Uh`]Up?Ut(Vin#Y/+Yp)Y$alYt2Dlan#FrJn(KlaLaj^Li/L#Lom{Ltu,NaPodivuRtRz<Til0Al aAsin#E$<2No]gS_.Ta,T?T#T'>V`]:B,d<})nDn(IkKom>M_aMpaN'#S?SoStu,Tin#V.3B#CkdyD@Dn?D'#Dv.G@^GieG,%H%Hk(H~KtvarNo/odNtil#P@#Pid]T`]T>TmoTokruhVhartV a%Vobok3B,}ot#DojedDsk(H'.Jav>L-M{#NieN#No+umStop`T.T|5Bi$aDivodGi#GopedKal aK{Mc|P!aPu/RdSosTrU^lUhU#Usk!V>3Tiv(1Cer&CiferMpSkSt,%0I%2RaRi#S.:DamD]Gi$rHagonJ{-J _J< aKakK'?Kr_aL[L.L|Lv?Min#Nd+NkoRn(SakrSkotSopu$T?Tri#Tur aZan>ZivoZl Zur#2Lo[0}anikD a%D'.LasaL*nNtol#TlaTo^TrZe,3G,%H~Hu+K.KrofonL@>Lim{rL(Mi#Nc'&Ni[rNom{Nul(S#StrX|2Ad(HaH'.OkS!Uv 1I/Ohem0BilCn(D_#Dl [HylaKroL-ulaM@t#Nar/aNoklN$rumNt|NzunSazSkytStTiva%T<#Ty#U/aUdr(Zai#Z-Zol2Am<Av@>KevTvolaZ{Zut(0T _1DrcF]nL!MieN?S{Ta%ZeumZi#nt3Sliv>0Da:B*r!}yt!Da%Dbyt-DhozDobroDpisHlasHn!Hodi+H,d Iv aJedn*Ji$oJm=K]n Kon>Krm LevoMaz!Mluv Nom{rOkoOpakO$roP`!PevnoPln P~Pos+dPr(oRod RubyRy/]S` S-!S+poSt!TolikV@-Vr/Vzd<yZv!3Be}!CkyDa+koDb!DuhGa%H{Ho^J@JprveKlidLib(Mil(MocO/o)On#PokojR(RvSmyslS*l`Tv<UronV.Zvyk+3Co)JakKamKdyKlKte,kTro5C+hHav?M.%RaR-S _Sn(UzeVinyVo)Zd,5DaD+G{T Tn(Trie3Mfa:0AlArv AvaDivEcEhn!Ejm=Ez aHajo[Iln?Jasn J-tK]p La$L-Li[LohaLu^NosOh! Oj-OutRaz>R&Ru[RysSahSluhaS)r!UvVazVin VodVyk+Yv!_Z<0AsElEn Hl` Ho)H,&It~0BojByt}odCiz Ebr!Esl!Evzd!EzvaH`%Hod J{JinudKazK*p LivLu#Ml#Oln(P`PisPl=P<Pu$ Pyk!Raz#S*d StupSunTokTudVahaVe)Vol!V,%tZ&k1I&Sajd1LasNiskoRa^Roz Ryz-2ApEn?Li#NoOuzl OvyRasaResRs-RuhUpantUr#Us 0Ejn.Iz|0AkE+)Ez L`.L*v!LuvaYl0Ehdy1Ak|As-E,%I%Il(Is|O,Oz?RavduRoti1B al}e$rGieL?LojT_0A^}~I#IvoLavaLep Ln L' N'aO[Ol Pa+cT@T,haTu^Ty/Voj 0Epl IskOpRh!Rl(RokRubyV<1A~ArEsLivn O%1Id1Do[:}!_Ci@tD*/H<-KtLan^L>LivoLu[Mf+tMls-N@#Ni#N&N|N$voNtof+Pri#Rke)RodieR)Ru#Ry[Se#Siv aSt_#T@tTro&V*kZnehtZ*r-3C#DagogJs-K]LotonNal)Ndr-NzeRiskopRoStr(Tar^T?Tro+jVn.Xeso3Ani$aHaJav?K+KnikL.Ln(Lul#Nze)Pe)S!_Sto+Tev&Vn?V'ar2A%n)Ak!Am@Ane)A$i#At Avid]AzE/Em@oEn)EsEtivoEv_Iv!N NoO/aOd.Om[OutUkYn2Bav Byt}odC Ctiv>D!D%n Deps!Dh+dDiv Dkl`Dman DnikDo[Dpo,D,zD$!aDvodDzimEzieHan#Hnut#H'<HromaHybIn)Ji$#Jm=Kaz K+sKojKrokKu)KynLedneLib-Lk~LohaLynomMaluMi~Ml#MocM$aMys+tNe/!N<#Nur(P`!P_Pis-Pla/Pros Ps!PudR`%R%RodRu/aRyvS` SedSilaSkokSlan>S*d SpoluS)vaSud-SypTahT#nT+skTom-T,vaTupaTvo,U#zUtoUzdroVahaVidlaVlakVozVr/V$!VykVzde/Zd,vZem-Zn!-Z<Zv!2Ac|Ah<yAkti#A+sAot>Ap<-AseAv^IncipKnoObud O%ntoOdejOfeseOh,Oj-tO]m Omi+Onik!Op`OrokOs[OtonOut-OvazS#v#St@Udk(UtV-Voh<y0An>OvodTruh0Actvo0Ber)}DlKav>Kl.Kr+LtMpaNcP@SaSin#St.T|Ty#3Rami^SkT_::C-}otDia%Dn?DonFtGbyKe)K'.M@oMp*/NdeRa/R aS'&StrTo+$Zan%Zid]3Ag|Ak%CeptDakt<Fer@tF+xJnokKlamaK<dKrutKt<Pu)%VizeVmaVolverZerva3Sk|Ziko5Boti#Dokm@H'#K+KokoMan{oP'odPu/aRejsSolStl.Tmi$rTopedTun^Ub@#U/oUpU,V.Vn?Zb<Z/odZd!Zezn!Zhod%Zin#ZjezdZ#zZ]haZmarZp`Zru/ZsahZtokZumZvod5Bri#}`]Kav?Kopis3BaBol'}l(D]P`]T.Z(:Di$aH!KoM>Mizd!Mo)N #Rdin#San#T_ Z[Z@?0Or0H|1B,n#CeseD`]Dim@tD]Hn!Jm=Ke,K)Kun^KvojeM@oNoRvisS` Sho,SkokSl!St,SuvSyp!T[T.Tk!T~Trv!VerZ&m2O^R~0FonLn?R#Rot-RupTua%1AfandrAliskoAnz@AutEptikIcaL`[L@?LoLuzO[O#nOroRip)RzUp.V(Vr&0Abi#Adid]An.A$Avn(Ed|Ep>EvaEz.IbI&Izn?OnOup-OvoU/UhaUn%Up#Za0A,gdE)&Il$voL*vaOgR`RkRt#Ut-Ysl0AdAhaOb0Bo)}aD'#KolP#TvaUbojUc Ud%UhlasUl`Um,kUp,vaUsedUtokUvis{0Al'&As _IsLavOd-Oj@>OluOnz<Orn(Ou$aR/aU$ 1An^AzD%NaN>Ovn!P@StUb1An?Ar(aAti#Av[EhnoEz#OdolaO+kOpaOrnoOup!Ra/ResRh~RomRu&Ud&Upn?VolYk0Bj-tBtropy}arD(KnoNd!N=Rik!aR'.0AhAl$voEtrAt[Az-Is+It-Obo^Odid]Or#Rab2Kav#KotN-N'>P!Pk(R'(S_T(:B+t#Bu+H*nJemnoJfunJgaJ Jn(Kti#Mh+MponNc|N>NkerPe)V@.Z!_3}ni#HdyKut.LefonMno)Nd@%Ni$aN<P])P&PrveRapieRmos#Xtil3}oSkopisTu+k1Ad+cAn.0Ap#Esk!UkotUpa0El1A+)Pin#PolRzoUhaU+c2Ad?Akt<AmpAsaAverzaEf E$Ez<Hav.Hl.O/uOj?Os#Ou[P%P _Pk(Ub>U/l Uhl?UsV!2DyH~H(Nd,Ri$aR&jZemsko0ArohOr[Rd(Rz2GrKev:0Oh(OzeR!R*s-RusYt'&0HoTiv(0Iv 3R` 1Edn!I$ M=0Az!_Lidn Lon Otv Roj 0I%I)Ov 0Yv`]0Av If<maIk~1Ad~L!n Ly~Out!Rav 1AnAz 0Ed~Il|Mrt N`n N=Oud Tl!Tr~0Ah|K!Lum O~Op@>R*s 1Al Oln Oz'#3D,v ElEn.L.N!:GonL/aL*nNaN^lNil#RanRhanyR|1ElkuHod0Ova0DroGe)%J%Lbl*dL{rhL _LmocLry[Nk'Ran^RzeS_#SkrzeSn?SpoduS)Ter.Ver#3B,%}rDeoh,D.D+LaN?S{Tal aZeZ #0Ezd0L`Us0Aj#AkAs>EvoHk(IvN'#Oup!1Uc|Uk0DaDiv(Doz&kD$voJ@skyJ&JskoLantL[L LnoSk'#Zid]Z'&0Ravo1Ab>A%tAhA)Ba}o+kH!StvaTu+0Ad T*p Tup0Ip4Bav Br!}|D!D,Fot H+d!H~Hod H,d Hub Jasn J{Jm=K]p Kon!L-!Maz!Mez Miz{Mys+tNe/!Nik!Nut P`!Pl! P,v Pu$ Raz R'n!Rv!Sl' SokoS)v Su~Syp!Tas Tes!Tr! Vi~Vol!Vrh_Zdob Zn!0AduBud }op D<Du/Dy/!E$upH+demKazLyk!NikOr-P*,TahT-::993Lofon::Br!Byd+t}|DarmoDus F*k!Hlt Hod H,^Hy~J!>J{Ji$ K+p!K*p Lep Mez Mot!Mys+tNe/!Nik!Pl! Poj Ps!Raz S)v Su~Taj Temn Tk~Ujm=Val Ve+tVin Vol!Vrt!Zvon 0Av RusuUd|Yt-1A+#ArmaAtn(IvoOb RojVihYm`]0L@.ManM.Pt!Z`uZdola2At Lt~Lubo#Ot' Ru[0MaMn?0Emn 0Lam!Oum!R!#Umav#0AtoEh#O[OmO$Ozvyk0Ap|ArAt-IjeIz{Ocn Odr!Rzl.Ut|0AkAl(Am@!Ovu0B,z Tav Ub-Ufa+0Lod Omal RavaR( Rud#Rvu1A^An C`]N (NoOv&Y/l Zav(1I/aR! 0B'.Br0Ed~EnkuEs_aOnR!Uk'odYk\";\nconst checksum = \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-cz]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangCz extends wordlist_owl_js_1.WordlistOwl {\n    /**\n     *  Creates a new instance of the Czech language Wordlist.\n     *\n     *  Using the constructor should be unnecessary, instead use the\n     *  [[wordlist]] singleton method.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"cz\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangCz``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangCz();\n        }\n        return wordlist;\n    }\n}\nexports.LangCz = LangCz;\n//# sourceMappingURL=lang-cz.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangEs = void 0;\nconst wordlist_owla_js_1 = require(\"./wordlist-owla.js\");\nconst words = \"0arertoiotadonoaRteirroenaNonaLsolocoiliaralaorrenadaChoN$n0A>Dom,EjaI!#Oga&O'Or#RazoR*Ue=U<0Ab Adem@Ce<C~Ei)ElgaEn#Ept I&L  NeOg!O<TivoToTrizTu Ud*U!&Us 0Ic#Mit*Opt Or'Ua`Ul#0Reo0Ect Ic~In Irm 0IlIt On@Os#Ot Reg R$UaU&U?aUja0OgoOr+0ReSl 0Ed_zE'Us)1Ac[nAmb_ArmaBaBumCaldeDeaEg_Ej Er%E%F?!GaGo&nIa&I,#Iv$MaMejaMib T TezaTivoToTu[Um'Z 0AbleAn)Apo]ArgoAs B Bi#E'IgoIs%dOrP oPl$0|oC@'C]D D,Em@Gu=Il=ImoIsOt T,aTiguoTojoUalUl Unc$Ad*EjoO1Ag A[#Eti#IoLic O&Or)OyoR,d!Rob Ues%U+1A&A`ArBit+BolBus#|ivoCoD!D?]DuoEaI&IesM.i-esOmaPaP.Reg=RozRugaTeTis%0AA&Al#C,<Egur EoE<rI,#I=Ist*NoOmb+P!oT?]T+Tu#Um*Un#0AjoAqueArEn#EoI>Le%OmoRa!RozUn0DazD$GeLaM,#S,)T^0AlAnceA+EEl]`E`EstruzI.I<2ErU{U'0Af[nArO)Uc Uf_Ul:BaB^|eH@IleJ Lanz/c.LdeMbuN>Nd-oRb(>RnizR+Scu]S#nSu[Tal]T!@T*Tu%UlZ 3BeBid/=S SoSt@3|oEnNgo2An>OqueUsa2ABi`BoCaCi`DaDegaIn//!oLsaMb-{dNi#N}saiRdeRr SqueTeTinVe{Zal2AvoAzoEchaEveIl=In>IsaOcaOmaOnceO)UjaUs>U#2CeoCleE'EyFan{F.HoIt_L#Rbuj(l(+Sc TacaZ.:Bal=BezaBi`B[CaoDav!D,aErFeI{ImanJaJ.LLam Lc$L&Li{dLleLm/^LvoMaMb$Mel=Mi'Mp}c!Nd?Nel-gu+Nic-#N-.ObaOsPazPi%nPo)Pt Puch((b.RcelRe%Rg(i'RneRpe%R+R%SaS>S!oSpaS#rT^ceT_U{lUsaZo3Bol]D!D+Ld/eb_Lo<Lu]M,#Niz-t+Rc(&Rez(oRr R)zaSpedT+2AcalAle>AmpuAnc]ApaAr]I>Is)IvoOqueOzaUle%Up 0Cl.EgoE=EnEr#F[G +M->NeN%P_sR>Rue]SneTaU{d2Am^AnA+AseAveI,)ImaInica2B_Cc~|i'Ci`CoDigoDoF_G!He)JinJoL/ch/eg$Lg Lin/l LmoLum`Mba)M!Mi{Mo&Mpr-deNej}g-oc!Nsej}t PaPi(az.Rba%RchoR&nR.(r!S!SmosS%2AneoAt!E Ec!Ei&EmaIaIm,Ip%IsisOmoOnicaOque%U&Uz2Ad+Ar#At+BoBr*| aEl=En#Er{Es%EvaId Lebr/p/#Mb_Mpl*N-e%O%P.Pul( R$<R<RvaTis:M-z(R&T?3B!B?Ca{C*DoF,saFin*J LfinLga&Li#M^-<N%lP^)RechoR+%Sayu'SeoSf?eSnu&Sti'Sv$TalleT,!U{3AAb=AdemaAman)A`Ar$BujoCt En)E%EzFic?G'Lem/u*N!oRec#Rig*S>Se'Sf[zVaVi'5BleCeL^Ming}N Ra&Rm*R<SSis2Ag.Oga2|aDaE=E'LceOQueR Rez(o:0A'R$0H OUa&r0AdIc~Ific$I#rUc 1Ec#Icaz3EEmp=1Efan)Eg*Em,#Ev IpseI)Ix*Og$Ud*0Bu&It*Oc~Pa)Pe'PleoP_sa0A'C go|ufeC@EmigoE+Fa&F!moGa'Igm/aceOrmeRe&SayoS, T!oTr VaseV$1Oca0Uipo0Izo0Ca]C,aCol Crib*Cu&Enc@F!aFu!zoPa{PejoP@PosaPumaQuiT TeTi=Tufa0ApaEr'Ic-@1Ad*Alu En#It 1Ac#Am,Ce<CusaEn#Ig*Il$Ist*I#P!#Plic P.!T_mo:BricaBu]|a{C?C#rE`J/d/=L<Lt MaM?@Mo<Ra.Rmaci(olRsaSeTigaU`V^X3Br!o|/izORi(ozRt?Rv^Stin3AbleAnzaArB[Cc~|aDeoEb_ElE[Es%Gu[J JoL/e)L@lLt+NNc-g*Ni#Rma2A>Au%EchaOrO%U*UjoU^2B@CaGa%G.L$Lle#N&Rm(+Rtun(z SaTo2Aca<Ag?AnjaAseAudeE*E'EsaIoI#U%2EgoEn)ErzaGaM Nc~Nd(g.R@S?TbolTu+:Ce]FasI%JoL/!i/=Mb- Nch}g-<RajeRzaSoli`St ToV?an3Me=M*NN!}$N)Ran$R,)Rm,S#3Gan)M`s$R Ro2Aci OboOr@2LLfoLo<LpeM(&R?([TaTeoZ 2A{Afi>A'AsaAtisAveIe%Il=IpeIsI#O<rUaUe<UmoUpo2An)ApoArd@Er[IaI'I.I<It [Sa'St :B!B?Bl C!|aD/l Mac(i`ZZa`3B?]B[|oLa&L$Mbr(*Rma'RoeRv*3E=Er+Ga&Gi,eJoM'S#r@5Ci>G Gu!aJaMb_Ng}^Nr((mig('St?Yo5E>ElgaEr%E<EvoI{IrMa'Me&M?deM}d*RacanR#:1O'0EalIomaO=2Lesi/uUal4EgalUs~0Ag,AnIt P P!$P.!Pul<0CapazDiceEr)FielF^meG,$Ic$M,<MuneNa#Sec#S%n)T!esTimoTu*Ut?Vi!'3AIsOn@0L/o):BaliB.M.RabeRdinR[U]Zmin3FeRinga3Ne)5R`d(obaV,Ya5ErgaEvesEzGa&rGoGue)Ic$N>Ngl-$Nt Pit!R S#V,?Zg :7Lo5A]:B$C$C[DoD+nG #GrimaGu`I>M!Mi`Mp --ch-gos%NzaPizRgoRvaStimaTaTexT*U_lV Zo3AlCc~|eC#rErG~Gumb_Ja'Ngu-#NaOnOp &S~TalT[VeY,{3B!%dB+C^D!Di EnzoGaG!oMaMi)M.Mp$NceN&Ne-go)N}t!`Qui&SoS%T!aT$T+2AgaAmaAn#AveEg En Ev Or Ov!Uv@2BoC~CoCu[GicaG+MbrizM}jaTe5|aC*G J}-esPaSt+ToZ:Ce%|oD!aD_Du+Est+F@G@GoIzL{dLe%Ll/oMaMboMutN>N&Nej Ng-iquiNj N}<N%Na`PaQuin(R>Re(f?Rg,Ri&RmolR+nR)sRzoSaSc aSivoT T!@TizTrizXimoY^Z^ca3|aDal]D$Du]J?]J^L,/.M^i-^NsajeN)NuRca&R,gueRi#SS.TaT!To&T+Zc]3E&ElEmb+G/Lag+Lit Ll.M}-!}im}u#OpeR SaS!@S?SmoTadTo5|?aC~DaDe=HoJ LdeL!Li'M,#Mi- c-ed-j-#NoRad(d!Re'R*R+Rs(%lScaStr TivoV!V?Zo5|oD EbleE]Er)Est[G_J!L/e%L%N&Nec(alRoScu=SeoSgoSicaS=:C C~D IpeRanj(izRr SalTalTivoTu[lUseaValVeVi{d3C$Ct G Goc$G+OnRv$ToUt+V V!a3|oDoEb]E#NezNoTi&Vel5Bleza|eMin(i(m()TaTic@Va#Ve]V$5BeCaCleoD?=DoE[EveEzLoM!oTr@:Sis0E<IspoJe#R(!oS!v T,!V$0AA<Ea'H,%HoIoReTavoTub_Ul#Up Urr*0I IoIsea0S)0EnsaEr%Ic$Rec!0Ro1DoR0O1AEa{Fa#IvoLaMoOrVi&0Bligo0DaZa1A>C~E[In On!T TicaUes#1Ac~A&rAlBi%CaD,EjaGa'G@Gul=I,)Ig,Il]OQues%Uga0Ad@Cu+Ez'OT[0O'Ro1EjaU=1I&Ige'0En)0O':C#D_El]Gi`GoIsJ oLabr/>Le%Li&Lm/om/p NNalNi>Nt!-ue=PaPelP?]Que)R Rcel(edR*RoRpa&RqueR[foR)S SeoS~SoS%TaT$Tr@UsaU%VoYa<3A#nCa&C!a|oDalD*G IneL L{'Le/ig+LlejoLoLuc--s N.OnOrPi'Que'R(ch(d!Rez(f?Ri>Rl(mi<R+Rs.aSaScaSimoS%`Ta=T+leoZZu`3C |.EEd[Er`EzaJam/ Lo#Mi,%N}#rNz-aOjoP(a%S Sci`SoS%T.Zca2AcaAnA%AyaAzaEi#E'OmoUmaU[l2B_CoD!D$EmaEs@E%L,Lici/=LvoMa{Me=MoMp-!Rc~R%lSa{Se!SibleS)T,c@T+Zo2A&E>zEgun%Em$EnsaE<Ev$ImoIncipeIs~Iv OaOb Oce<Oduc#OezaOfe<rOg[maOleOmesaOn#Op$OximoUeba2Bli>|!oD^Eb=Er%Es#Lg/*Lm.LpoL<M-#NalNoPaP?(e:99Ed EjaEm Er!E<Ie#ImicaInceIt :Ba'B@BoC~DicalIzMaMp-ch}goPazPi&P#SgoSpaToYoZaZ.3Acc~Ali{dBa'Bo)Ca!Ce%|azoCog!C_oC#Cur<DD.&Duc*FlejoF^maF[nFug$Ga=G*G]G_<H,I'IrJ/a#LevoLieveLle'LojM Med$M}>rNd*N%P #Pet*Po<Pt?SSca)Si`Spe#S#Sum,T*oT^'T[#Un*VesVis%YZ 3CoEgoEn{EsgoFaGi&G^Nc.N.OQuezaSaTmoToZo5BleCeCi D DeoD?]ErJizoJoM!oMp!NN>N{PaP!oSaScaSt+T 5BiB^DoE{G*I&In/e%LoMboM^Ptu[TaTi`:Ba&B!B$BleC GazG[&L/&L!oL*Lm.L.Ls/#LudLv Mb-c~Ndi-e Ng_Ni{dN}#PoQueRdin()nSt_TanU`Xof.3Cc~CoC_#C%DGu*IsL=LvaMa`M?l-d-<rNalN^P  P@Qui(RieRm.Rv*S,%S~TaT,%V!oXoX#3D[Es%E)G=G'Lab/b L,c$L]Mbo=M$R,aS)maT$Tu 5B_C$D$LLap/{&Le{dLi&Lt Luc~Mbr-de}i&No+NrisaPaPl P^)R&Rp_s()oS)nTa'5AveB*Ce<D^Eg[E=E'Er)Fr*Je#L%nM P! Pl*P.!P_moRR>Re'Rg*S#T?:Ba>BiqueB]BuCoC#JoL L>L,#Ll/.Ma'Mb^Ng}quePaPe)P@P.Qu?l(deRe(if(je%RotR+R%TuajeU+ZaZ.3At+|oC]CnicaJa&J!Ji&L/efo'MaM^Mp=NazNd!N!NisN<Ori(api(>Rmi'Rnur(+rSisSo+StigoT!aX#Z3B$Bu+nEmpoEn{Er[E<G_J!/deMb_Mi&M}%OPi>PoR(.TanT!eTu=Za5Al]B?=C Ci'DoG/&M N}#P PeQueRaxR!oRm,%RneoRoRpe&R_R<RtugaSS>S!Xi>2AbajoAc#rA!Afi>AgoAjeAmoAnceA#AumaAz EbolEguaEin%EnEp EsIbuIgoIpaIs)IunfoOfeoOmpaOn>OpaO)OzoU>Ue'Ufa2B!@BoEr#MbaM^NelNic(bin(ismoR'T^:0Ic 9C!a0B[l0I{dIrIv!<OT A3Ba'BeG,)Na0ArU $0IlOp@1A:CaC$Cu`G GoI`J?l/eLi&LleL^Lvu]Mp*oR(i R.So3Ci'C#rHicu=In)JezL/!oLozN-c!Nd-e'Ng N*N%NusRRa'RboRdeRed(j(<Rt!3AAjeBr C$CtimaDaDeoDr$EjoErnesG^LLl-ag_N}e&OlinRalRgoRtudS^Sp!aS%Tami`U&VazV!oV*Vo5LcanLum,Lv!RazT ToZ5E=Lg :::C!Te3GuaM('So9DoGaGur:F*}jaPa#Rza93N(+5MoR&\";\nconst accents = \"aeiou7695@@BZWWavwUJkO@Y-Kn))YEGq#E@O)cI@#ZkMHv$e*))M!!)D**$GW!oKm*Acoh^k&It-pi^SYW)$^n!G)bO!Wkzam(jS#X)Og*^l^RW!bQ#QygBKXfzE))hti!Qm)Cng%%c)mJiI*HJWbmYniCLwNdYyY%WKO^bnT$PuGOr!IvHu&G(GKbtBuhiW&!eO@XMeoYQeCa#!MrTJCq!OW&CHG(WCcW%%)$rfrIegu$)w!G)JGmWWw)MnD%SXXWIT^LWAZuVWB^W)eTL^x&$WGHW(nKWEMA)#$F$x$Waekqs,n7715)W*HM-$WAcCiu(a))VCZ)GG%(*CWWdW%$D!UCO$M\";\nconst checksum = \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-es]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangEs extends wordlist_owla_js_1.WordlistOwlA {\n    /**\n     *  Creates a new instance of the Spanish language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEs]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"es\", words, accents, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangEs``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEs();\n        }\n        return wordlist;\n    }\n}\nexports.LangEs = LangEs;\n//# sourceMappingURL=lang-es.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangFr = void 0;\nconst wordlist_owla_js_1 = require(\"./wordlist-owla.js\");\nconst words = \"0erreleontiteurinueiriet cegeanseali medenel q)eniluxaus ch0Ais}And$Diqu E`#Ol*Ord Ou%rOy RasifReuv Ri,Rog RuptS_-SoluS'@UsifYss=0A@m+AjouAr+nCab]Cep,Clam Cola@Cro~eCu}ErbeHatHe,Idu]I Omp&Qu *R$y?Te'TifT)l0Ep&EquatHesifJec%fJug Mett!M* Op,Or Ouc*Res<RoitUl&V be0R R$ef0Fai!Fec,Fi~eF!{Fub]0Ac Enc I#I,Raf Reab#Ru?1D Gu`#L>Mab#S/-0Ou,Us,1Arm Chim+Er&Geb!G)I_ I?ntLeg Lia.Lou Lum O'd*PagaTes<Veo#0A&'BiguB!Enag Ertu?Id$Ir=Orc O'Ovib#Phib+P#'Us/t0Aly<Apho!Ar~+Atom+C+nE/%rG#Gois<Gu#{Im=Nex N$-N)lOd(Om=+Ony?Orm=T_[Tido&X+{1Ai}Eri%fL/*Olog+Pa!`Pe]Por,Puy 0UariumUeduc0Bit!Bus&De'Doi<G_tLequ(Matu!Me?ntMoi!Mu!P_,Ra~ Riv Ro}S_icT +lTic#0PectPh=&P* S|tS v*S+t&Soc>S' TicotT!Tu-0El>O?RiumRo-Ta^T_%fT* Trap 0Ba(eB .Da-Dib#G' Ro!Tom[Tru~e0A]Anc Ari-En*Er<Eug#Ia&'I@I$I}O(eOu R`1I=Io?:D.Fou Ga.G)t&Igna@L/c Lc$Le(eLisa.Mb(Ncai!Nda.Nl+)Nn>eNqu>Rb>R`R$R^Rra.Ss(S%$Ta`#Te|T,+Udr>Vard 3Let&L>Lo&Nefi-R-|Rg Rl(eRmudaSa-Sog[Ta`Ur!3B $Cyc#Du#JouL/L(g)LlardNai!Olog+Ops+OtypeScuitS$Sto'iTu?Zar!2AfardAg)An~*Ess/tInd OndOqu Ous$2BardB(eI!I}Li@Nb$Nd*Nhe'Nif>NusRdu!R[T&Uc#Ue{Ug+Ul$Uqu(Ur<Usso#U%^Xe'2An~eAs>AveEbisE~eEuva.Ico]Iga@Ill/tIo~eI^O~u!Od Onz Ous<Oye'U?Us^Ut=Uy/t2Ff#Iss$L#%nRe|R(S% T( To*Vab#Vet&:B/$B(eChet&De|D!Fe(eIllouIss$Lcu]Lep(Lib!Lm Lomn+Lvai!Mara@M aMi$Mpag[N=Net$N$N%[NularPab#Por=Pri-Psu#P,Pu~eRab(eRb$eRes}RibouRna.Rot&R!|Rt$Sca@S>S^Ssu!U}U%$V=>V [Viar3D`#Intu!Les&Llu#Ndr>Ns' Ntr=Rc#Rebr=Ri<Rn Rve|S}2Agr(Ai<A#'Amb!An-Apit!Arb$As<'At$Auss$Av* Emi<En`#Equ>Er~ Ev=I_Iff!Ign$Im eIotLoru!OcolatOis*O<O)t&Ro?U&0Ga!Gog[M_,NemaNtr Rcu]R R^T [Toy_Tr$V`2A*$A?'Aqu As<Av>I_tIgn ImatIva.O~eOna.Opor&2B=tBraCas<Co% D Dif>Ff!Gn Hesi$Iff Inc L eLibriLl(eLma,L$elMbatMed+Mm/@MpactNc tNdui!Nf>N.]Nno,Ns$[NtactNvexePa(P+Ra`Rbe|Rda.Rni~eRpusR!ctR&.Smi^Stu?T$U@Upu!Ura.U&|Uvr*Yo&2AbeA(&Ava&Ay$Eatu!Edi,E?{Eu}Evet&Ib]I Ist=I,eOi!Oqu Ota#Uci=UelYp,2Bi^E`l*Il]eIs(eIv!Lm( L%v Mu]Pi@Ra%fR<'3Anu!C#L(d!Ni^:Ign M>Ng N<'Uph(3Batt!Bi,Bord Brid But/tC= Cemb!Ch* Cid Clar Cor Cri!Cup]Da#Duc%fEs<F_sifFi]Fray Gag Givr Glu%rGraf Jeun Li-Log M/d Me' Mol*Ni~ Nou N&l#Nud PartP_}Pha}Plac Po}R/g Rob Sast!S-n&S tSign Sobe*Ss( Str>Ta~ Tes,To' T!s<V/c V_*V( Vo*3Ab#Alog)Am/tC,Ff  G  Git=G[Lu M/~eM(u Oxy@Rec%fRig Scu,Spo}Ssip St/-V %rVi}5Ci#C&'G?IgtMa(eMici#Mp,Na&'Nj$Nn Pam(eRto*Ru!Sa.Se'Ss>Ta%$U/>Ub#U-'U,Y_2Ag$Ap Es}Ibb]Oitu!2P +P#xeRab#Rc*3Nas%e:0Lou*0Ar,HarpeHel#La* Lip<Lo!Lu<O#Onom+Or-Ou,Ra}Rem Riva(RouU?U!u`0If>Uqu 1Fac Fec%fFig+FortFray Fusi$0Ali}Ar 2Ec,1Abor Arg*Ectr$Eg/tEph/tEveIgib#I%s?O.Ucid Ud 0B=]Bell*Bry$Er|@Issi$M_ O%$Ouvo*P e'Ploy Por,Pri<Ulsi$0Cadr Ch eClaveCo~eDigu Dos}DroitDui!Erg+F/-F m Fou*Gag G(Glob Ig?Jamb JeuLev NemiNuye{Ri~*Roba.Seig[Tas}T_d!T>To' Trav Um  Vah*Viab#Voy Zy?0L+n0Aiss*Arg[At/tAu#Ic +I@m+I Ilog)I[Iso@ItapheO^ReuveRouv Uis/t0U !Uipe0Ig Osi$Re'Up%$0C=>Pad$Pe-P+g#Po*PritQuiv Say S_-S+uSor Ti?TomacTra@0Ag eA]An~eA%^E(d!Endo*Er[lH/olHi^Hn+Ir Off Oi#Onn/tO'd*R/.RoitU@0Phor+0Alu Asi$Enta`I@n-I,Olu%fOqu 1ActAg  Auc Cel]Cit/tClusifCu<Ecu,Emp#Erc H= Hor,I.n-I]Is,O%^Ped>Plor Po}Prim QuisT_sifTrai!Ul,:B#Bu#{Cet&Ci#Ctu!Ibl*Lai<Me{M`#R-'RfeluR(eRou~eSc( T=Tig)Uc$U%fVe'Vori3Bri#C$d D  L(M?M'Ndo*Od=Rm Ro-Rve'S%v=U`#Ut!Vr>3AscoCe]C%fDe#Gu!Latu!Leta.L>eL#ulLm LouLtr N/c N*O#R?Ssu!X 2A* Am?As^At&'E|E~eE'Exi$Oc$O!Uctu Ui@Uvi=2L+Nd +Ngib#Nta(eRc Rg $Rmu]Rtu[Ssi#Ud!Ug eU`]Ulu!Urmi2Agi#Ai<An~*App Aye'Ega&E( El$Em*E[s+E!Iab#Ic%$Iss$Ivo#OidOma.Ont=Ot,Uit2Gi%fI&Re'R+{R%fSi$T':Gn Lax+L +Mbad R/%rRd+nRn*Rrig)Zel#Z$3AntLa%[Lu#Ndar?N =N+NouN%lOlog+O?t!R/iumR?St)lY}3B>C]RafeV!2A-AiveIs}ObeOi!Or+{2Lfe'M?Nf]R.R`#Udr$Uff!UlotUp`#Urm/dUt&2Ad)lAffi%A(eAndApp(AtuitAv*EnatIffu!Il]Imp Ogn Ond Ot&OupeUg U% Uy e2EpardErr>I@Im|veIta!Sta%f3Mnas&Rostat:Bitu@Cho*L&Me|NgarN[t$RicotRm$+Rp$Sard3LiumMato?RbeRiss$Rm(eR$Si,U!{3B n BouLar/tStoi!V 5MardMma.Mo.[N['Nor N&{R@Riz$Rlo.Rm$eRrib#U#{Us<5BlotI#{Ma(Mb#Mi@Mo'R]3Dro?lG+[M[Pno<:2Yl#2Nor U/e4Lici&Lusi$0A.Bib I,M_<Mobi#Muab#PactP i=Plor Po}Prim Pu,0Carn C_d+Ci@ntCl( Colo!Dex Di-Duc%fEditEp%eExactF(iFlig Form Fusi$G  H= Hib Jec,Ju!No-ntOcu]Ond Scri!Sec&Sig[Soli&Sp* S%nctSul,TactT_<Ti?Trig)Tui%fU%#Vasi$V_,Vi,Voqu 3Oni^Rad>ReelRi,0O]2Oi!Res<:GuarIll*MbeNv>Rd(Ug U[Velot3Tab#T$UdiU[s<9Ind!N~ Ng]Ue'UissifUrn=Vi=Y|Ye{5Bi]Ge?ntNiorP$Ris&S%-Te{V_i#:Yak7M$oOs^:BelBi=Bo' C  Cto<Gu[I[Is}I% Mbe|Mel#MpeN-'Nga.N,[P(R.'R?Ur>VaboVo*3Ctu!G=G Gu?SsiveTt!V>Xi^Zard3As<B  B!C_-Cor[E.Ev!Gatu!Go,G)M Mi&M$a@Mpi@Neai!NgotOn-|Qui@S>eS,ThiumTi.Ttor=V!'5Gi^Inta(Is*MbricT +U UrdUt!UveY=5B+Ci@Cra%fE'Gub!Is/tM>eNai!NdiR$T,X){:Ch(eGas(G_taGi^Ig!Ill$In%_Ir+Is$Jor Lax Lefi-Lhe'Li-L#t&MmouthNda,Niab#Nqu/tN&|N)lRath$Rb!R~/dRdiRi%?R^'Rr$R&]Scot&SsifT +lT>eTra^Udi!Ussa@UveXim=3Ch/tC$nuDa`#Dec(Di,Du<Il#'L/.Lod+Mb!Moi!Nac N Nh*Ns$.NtorRc!diRi&R#Ssag Su!T=Teo!Tho@T>Ub#3Au]CrobeEt&Gn$Gr L+uLli$Mi^N-N =Nim=Nor Nu&Rac#Roi,Ssi#X&5Bi#D [El#{Ndi=Ni&'Nna+Not$eNst!Ntag[Nu?ntQ)'R-|Rsu!R% Te'TifU~eUf#Ul(Uss$Ut$Uv/t5L%p#Ni%$Ra`#Re[Rmu!Sc#SeumSic+nTa%$T T)l3Ria@R%l#S,eThi^:Ge'PpeRquoisRr Ta%$Ti$Tu!Ufra.U%^Vi!3Bu#{CtarFas&Ga%$Glig Goc>I.Rve{Ttoy Ur$eUtr$Veu3CheCkelTra&Ve|5B#CifCt'[Ir-'I<t&Ma@Mb!{Mm Rma%fTab#Tif>Toi!Urr*Uve|Va&'Vemb!Vi-5A.Anc I!Isib#M oP%=Q)Tri%f:0E*Jec%fLig Sc'S v Stac#T_*T' 0Casi$Cup E/Tob!Troy Tup]Ulai!0E'Or/t1F_}Fic>Fr*0Ive1Se|S`l$2Fac%fIv>0Bra.Ett!0Ct){Du]E!{Iri^1A#A^Er Ini$PortunPrim T Ti^1A.{An.Bi&D$n E`#G/eG)`Ifi-Ne?ntQ)T+0C`]Mo<Satu!0Ar+0Rag/Rs$T`Trag Vra.0A%$1Y@Y.[1O[:Isib#La-Lma!sLo'@Lp Na~eNdaNgol(Niqu N[|NoramaNt=$PayeP>Po,PyrusRadoxeR-l#Res<Rfum R]Ro#Rra(R<m Rtag Ru!Rv_*Ssi$S&^T [lT+n-Tr$V`l$Voi}Y Ysa.3Ig[Int!La.Lic/L#Lou<Lu~eNdu#Netr Nib#NsifN'+Pi&PlumRdrixRfor Rio@Rmu,Rp#xeRs`R&S Ta#TitTr*Up#2Ara$Ob+O^Ot$Ra<Ysi^0AnoCt'=E-Er!Euv!Lo&N-|Pet&Qu Rog)Sc(eSt$Vo,XelZza2AcardAf$dAis*An A^Astr$A&|E' ExusIa.OmbOng U+Uma.2Chet&Es+E&In&Ir>Iss$Iv!Lai!Lic>L#nLyg$eMma@Mp>Nct)lNd  NeyR%^Si%$S<d Stu!Tag Te|Ti$U-Ula(Um$Urp!Uss(Uvo*2A*+A%^Ec+{Edi!EfixeElu@EnomE<n-E&x&Evo*Imi%fIn-Is$Iv Ob#?O-d Odi.Of$dOg!sO+Oje,Olog)O?n Op!Osp eO&g O)s<Ov beU@n-U[|0Y~o<1BlicC $I}LpeLsarNai<Ni%fPit!Rif>Zz#3Rami@:99AsarE!l#Es%$Ietu@It,O%_t:C(eC$,D+{G$d(I@'Is(L_%rLl$.Mas}Pi@Sa.Tis}Vag V(Y$n 3Ac%fAg*Ali}Anim Cevo*Ci,Clam Col,Cru,Cu]Cyc]Dig Dou,Fai!F#xeForm Fra(Fu.G=+nGi$Gla.Gul>I, Je,Jou La%fLev L+fMar^Me@Mi<M$,Mpl*Mu NardNfortNif]N$c Ntr NvoiPl>Por,Pri<P%#Qu(S veS(e{Soud!SpectS,SultatTabl*T_*Ticu#Tomb Trac Uni$Uss*V/~eViv!Vol&Vulsif3Ches<De|E'Gi@Go]Nc Pos,Sib#S^T)lV=V>e5Che{M/-Mp!N-Nd(Se|S>Ta%fTorTu#U.U`#U#|U%[Y|?5B/BisCheEl#G){In Is<|S S%^3Th?:B]Bo,B!Co~eFariGes<Is*La@LiveL$Lu MediNc%$Ngl>Rcas?Rd(eT' Ug!nuUm$U,Uva.V/tV$n 1AlpelAnda#E]atEnarioEpt!HemaI_-Ind O!Ru%nUlp,1An-Cab#Ch Cou C!,Da%fDui!Ig['Jo'Lec%fMa(eMb]M_-M(=Na&'Nsib#N&n-Par Q)n-Re(R.ntR+{Rru!RumRvi-Sa?V*Vra.Xtup#3D =Ec#Eg Ff]G#Gn=L_-LiciumMp#Nc eNist!Ph$RopSmi^Tu 1I 3Ci=C#DiumIg[{LdatLe`Litu@Lub#Mb!M?`Mno]N@N.'N[t&No!Rc>R%rS+T%<Uc+{Udu!Uff#U#v UpapeUr-U%r Uv_*0Ac+{A%=Eci=H eIr=3Ab#A%$ErnumImulusIpu]RictUd+{Upe'Ylis&0Bli?BstratB%lBv_*C-sC!FfixeGg  Ive'Lfa&P bePpl>Rfa-Rica&R?n Rpri<Rs|tRv+Spect3LlabeMbo#Metr+Nap<NtaxeS&?:BacBl>C%#Il]L_tLism/L$n Mbo'Mi}Ngib#PisQu( Rd RifR%[S<TamiToua.UpeU!|X 3Mo(Mpo!lNa`#Nd!Ne'N*Nsi$Rm( R[Rrib#T(eX&2E?Eor+Erap+Orax0BiaE@Mi@Reli!Ro*SsuT/eT!Tub 5Bogg/L /tMa&Ni^N[|P$y?R~eRd!Rna@Rp`#R!ntR<Rt)TemU~ Urna.Us}X(e2Ac%$AficAgi^Ah*A(An~ Ava`Ef#Emp EsorEu`Ia.Ibun=Ico,Ilog+IompheIp]It' Ivi=Omb$eOncOpic=Oupe|2I#LipeMul&N[lRb(eTe'Toy Y|3Mp/Ph$Pi^R/:0Ues^9Ti?Tras$1Ani?If>I$I^Itai!Iv s3AniumBa(Tic/t0A.I[UelU!0I#Op+:Car?Cc(Gab$dG)Ill/tInc!Is<|Lab#Li<Ll$LveMpi!N`#Pe'R>Se{Ss=S&3C&'Det&Get=Hicu#InardLo-Nd!diN  Ng Ni?{Ntou<Rdu!R(Rn*RrouR}RtuSt$T /Tus&X/tX 3AducAn@Ctoi!D/.DeoG[t&G)'La(Lla.Naig!Ol$P eRe?ntRtuo<RusSa.Se'Si$S^{S)lT=Tes<Tico#Tr(eVa-Vipa!5Ca%$Gu I#Is(Itu!La`#Lc/L%g Lu?Ra-R&xT Ulo*Ya.Yel#:G$:3N$:Cht:3B!NithS&9Olog+\";\nconst accents = \"e7693&)U*o&)Ry^)*)W))))#X^))))@@)#Wf)m%)#!))AG)&IIAQIIIBIIHJNAgBIILIDJGo)))HIQIIIIA(IGgJHH(BIIxX#)Ou)@*IAAPIIIJHQJ)&QIQPYI(HYAQC%)!))QHJJ@)#)^f*^AXCJ))$%CP))%&m)u)@e^A#G#))W@!(IKK%!(I%))O@QA))@GG#e))))WHJIWh))my@IIBT^)!)HAYGETHI*))!QnUDG)))nBoKAC*HwyQh))$&)G&)UGO)G)))(BX#v**)%O,e7686)I))@)&)gdMP()))ud)p#L))I^FIHYdWG))D@DFV)QA)o%MyTh%*)Z)%)n(XANc^R)YS\";\nconst checksum = \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-fr]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangFr extends wordlist_owla_js_1.WordlistOwlA {\n    /**\n     *  Creates a new instance of the French language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langFr]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"fr\", words, accents, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangFr``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangFr();\n        }\n        return wordlist;\n    }\n}\nexports.LangFr = LangFr;\n//# sourceMappingURL=lang-fr.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangJa = void 0;\nconst index_js_1 = require(\"../hash/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst wordlist_js_1 = require(\"./wordlist.js\");\nconst data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet _wordlist = null;\nfunction hex(word) {\n    return (0, index_js_2.hexlify)((0, index_js_2.toUtf8Bytes)(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction toString(data) {\n    return (0, index_js_2.toUtf8String)(new Uint8Array(data));\n}\nfunction loadWords() {\n    if (_wordlist !== null) {\n        return _wordlist;\n    }\n    const wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[toString([227, 130, 154])] = false;\n    transform[toString([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[toString([227, 130, 133])] = toString([227, 130, 134]);\n    transform[toString([227, 129, 163])] = toString([227, 129, 164]);\n    transform[toString([227, 130, 131])] = toString([227, 130, 132]);\n    transform[toString([227, 130, 135])] = toString([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toString(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* c8 ignore start */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    /* c8 ignore stop */\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = (0, index_js_1.id)(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n    /* c8 ignore stop */\n    _wordlist = wordlist;\n    return wordlist;\n}\nlet wordlist = null;\n/**\n *  The [[link-bip39-ja]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangJa extends wordlist_js_1.Wordlist {\n    /**\n     *  Creates a new instance of the Japanese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langJa]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"ja\"); }\n    getWord(index) {\n        const words = loadWords();\n        (0, index_js_2.assertArgument)(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords().indexOf(word);\n    }\n    split(phrase) {\n        //logger.assertNormalize();\n        return phrase.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n    /**\n     *  Returns a singleton instance of a ``LangJa``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangJa();\n        }\n        return wordlist;\n    }\n}\nexports.LangJa = LangJa;\n//# sourceMappingURL=lang-ja.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangKo = void 0;\nconst index_js_1 = require(\"../hash/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst wordlist_js_1 = require(\"./wordlist.js\");\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8\",\n    \"ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return (0, index_js_2.toUtf8String)(new Uint8Array([225, (code >> 6) + 132, (code & 0x3f) + 128]));\n}\nlet _wordlist = null;\nfunction loadWords() {\n    if (_wordlist != null) {\n        return _wordlist;\n    }\n    const wordlist = [];\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word);\n        }\n    });\n    wordlist.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = (0, index_js_1.id)(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n    /* c8 ignore stop */\n    _wordlist = wordlist;\n    return wordlist;\n}\nlet wordlist = null;\n/**\n *  The [[link-bip39-ko]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangKo extends wordlist_js_1.Wordlist {\n    /**\n     *  Creates a new instance of the Korean language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langKo]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        const words = loadWords();\n        (0, index_js_2.assertArgument)(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords().indexOf(word);\n    }\n    /**\n     *  Returns a singleton instance of a ``LangKo``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangKo();\n        }\n        return wordlist;\n    }\n}\nexports.LangKo = LangKo;\n//# sourceMappingURL=lang-ko.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangIt = void 0;\nconst wordlist_owl_js_1 = require(\"./wordlist-owl.js\");\nconst words = \"0torea noica!iosorolotaleratelanena%oiadoencotivomai t ca%a0A]Bagl'Bin#E.Is(Oli!Rasi_Rog#0Cade!C[$Cus#E <Hil,I@QuaReRil>Roba+U 0Ag'Deb{DomeEgu#Eri!IpeOtt&Ul&1Fabi,Fe|Fis(F-n Oris`O(R~$0AveEn.E_,Ganc'I!It&OnismoR>*Rume Uzzo4AbardaA Bat)Ber#BoBumeCeCol>E|<FaGeb-Ian.IbiIm[ Lag#Leg)Lie_Lo@/Lusi_Me$Oge$Pa}Pest!Ta,=Ter$T%c'T)veUn$Veo*Z&0Alga`Ani+A!=B{Br#EbaEr~E^s+I]Mas(M[daMir&Mon{O!P'Pli&U, 0A}r@Ag-feAlis+Arch?At-CaCel/Co-D&D!aEl*Ge*Gol&Gus I`Neg&Nid#NoNunc'OnimoT%ipoZi1At>Ertu-OdePari!Pe^ Pogg'P)@Pun Ri,1Ab~AchideAgos+Ald~Anc'Atu-AzzoBit)Chiv'D{Eni,G[ Gi<Gu IaMon?NeseRed#RingaRos S[>SoTef%eZil*0Ciu|Col EpsiEtt>Fal I$O/Pir#P)Sagg'SeSolu Sur@TaT[u T%eT-|0Av>EismoOm>O$TesaTiv&Tor$Tr{Tua,0Sil'Str?Tis+To$moTun$0Anz#E!V[i!Vi(Volge!3Io<O ZimoZur):Be,C}$Ci$CoDessaDi/+Gn#I+L]<L@Le=L/+Lza$Mbi$Ndi!RaondaRba)R}R{$RlumeRoc]Sil>S(Tos+Ttu U,VaVosa3C]FfaLg'LvaNdaNe_,Nig$Nzi=ReRli=Ta3Bi+CiDo<Fi@GaLanc?MboNo]*O*goPedePol&Rban.R-S]|Ses S$n$Son.SturiZzar)2An@At+2Ll{Nif>R@S]Tan>T^$Zzo*2Acc'AdipoA`An}Avu-E.l/Eve|EzzaIgl?Il/n.Ind&Oc]*O@Onzi=Ul*U$2Bbo<CaDi$Ffo<IoLboO$R*<R-s}S(/S+:De|Du]La`)L]*LesseLib)LmoLor?MbusaMe-+M%?Mmi$Mo/Mpa,NapaNde/NeNi$No|N^=PacePel*P{*Pogi)Ppe)P-Psu/RapaceR}ssaR@Ris`Rova=R!|R li=Sacc'S}+Ser`SoS(<S.l*Sua,Tas+Te=T-meU Vil*3Dibi,D-+Fa*Leb!Llul&NaNo<N.simoRam~Rc&R RumeRvel*So?SpoTo2E/Ia)Ic}Iede!Ime-I=IrurgoI+r-0AoClismoFr&G$Lind)O|*R}R)siTr>T+di$UffoVet+Vi,2Ass>In~O)2C]Dar@D%eE!n.G$meLl&Lm#Lo!Lpo(L^v#LzaMaMe+M`n@Mo@Mpu.rMu<Nci(Ndur!Nfer`Ngel&NiugeN<s(Nosce!NsumoN^nuoNveg$Per P'<Pp?Pr~poRazzaRda+R%#Rn%eRol/RpoR!@Rs?R.seSm>S+n.Ttu-V#2A.!Avat+E#Ede!Emo(Esci+E+Ice I=,IsiIt>OceO=}Os++Uc?,Us}2Ci!Cu*Gi$Ll#Po/R#!R(!R_Sci$S de:DoI$L`+Meri$Nie/N$(Nz&T#Van^Vve)3Bu|C[n'Ci(Cli$Col*C! D%#Fin{FormeG$Leg&Lfi$Lir'L+M[zaNot#Nt)Pos{Rapa+Riv&RogaScri|Ser Sider'Sume!Tersi_Vo 3Amet)Cemb!Ed)Fe(Ffu(Geri!Gi+,Luv'Nam>N=nziPin P*`Po*Rad&ReRo|RupoSag'Sc! Sf&Sge*Spos S+nzaSu`$ToVa$Vel Vide!Vor#5B*<C[.Ga=,G`LceM#M[~Min&N@*NoRmi!TeT !Vu Zzi=2AgoUi@2Bb'Bit&Ca,NaOmoPl%eRatu):0A$0Ces(CoLissiO$m?0E-I]/I,I r?Uc&2Emon?LiOismoReg'4Abor#Argi!Egan.Enc#E|Ev&F>I}MoSaU(0An#B,`Es(I)O^_Oz'<Pir>U*0Dem>Du)Erg?FasiO.}Tr&Zi`1A^.I*goI(d'O},Pu!0U#!0Ar'BaBo(EdeEmi+Ige!Met>OeOsi_Ran.0Ago$AmeAnimeAudi!CaEmp'Erc{Ib{Ig[.Is.!I OfagoOrt#O(Pan(P!s(S[zaSoTe(Tim&Ton?T)(Ult&0Il>N>Rus]To0ClideoRopa0A(Id[zaIt#Olu Viva:Bbr~Cc[daChi)L]Migl?Na,Nfa-NgoN+s`ReRfal/Ri$(R`]Sc?S (Sul*T%&ToVo*(3Bb!Co/DeG#LpaLt)Mmi=Nde!Nome$Rm[ R)R^,Ssu-S^_T+U@3AbaDuc?FaGur#LoNanzaNest-Ni!O!S},S>Ume2A]<Am[]EboEm`Ori@U[.Uo)2B>Cacc?Co(Der#Gl'La+Lc*!Lgo!Nd[.Net>N?N+=Rb{Rchet+Res+Rm~R='RoR.zzaRz&Sf#S(2A}s(A=Assi$A.l*Eccet+E=+Es]IgoOlli$OndeUga,Ut+2Ci/+Cs?Gg[.Lmi<L_Man.Me|Mo(NeNz'<O]RboRgo<Ro!SoTi,:Bb?$FfeLa.oLli=LoppoMbe)M`Ranz?RboRofa$Rzo<S@|Sol'Str>T Ud'ZeboZzel/3CoLa^=L(Mel*Mm#NeN{!N='No^poRgo2Epar@Iacc'Isa0Al*LdaNep)Oc&Oiel*Or$OveR#Ro<T++Udiz'Ur#Us 2Obu*U^<1Omo0BbaLfM{Mmo<Nf'N=Ver$2Aci,A@Af>AmmoAndeAtt&A_(Az?E}EggeIfo<Ig'InzaOt+Uppo2Adag$A'An Ard&FoId&::0Ern#0O=0Ent>Ill'O*RaR>Roge$2Ie<Na)Nor#4A!Le(Log>Lude!0Bal*Bevu Boc]Bu Ma<Mer(Mol#Pac]Pe PiegoPor P)n+0Al&Arc&At^_Can C[d'Chi$Cisi_Clu(Cont)C)c'CuboDagi<D?Do,Ed{Fat^Fil&Fli|Gagg'Geg$G,seGor@G)s(Nes]O@!Oltr&Ond#Sa$Se|SiemeSonn?Suli=Tas#Te)To=]Tu{Umidi!Vali@VeceV{1Erbo,Not>O.siP~1IdeLandaOn>Rig#Ror&0Ol#O poTer>Titu Tr%e0Al?Er&:::Bb)Birin C}Cer#Cri`Cu=D@veGoMpoNcet+N.r=R@(RgaRingeSt-T[zaTi$TtugaVag=Vo)3Ga,Gge)MboN.zzaNzaO<P!Si_Ss#S T.-,VaVig#3Be)DoEv{L/Matu-Mit&Mpi@Ne&NguaQui@RaR~S}TeTig'V!a5CandaDeG~Mb&Nd-Nge_QuaceR[zoToT.r?5CeCid#Ma}Mi$(NgoPoPpo*SingaS(T :Cab)Cchi=Ce)Cin#Da`G>Gl?G<.G)Iol~LafedeLg-@Lin.(Lsa$L Lumo!NaNc?N@r/Ngi&Nifes N=)Nov-NsardaN^deNubr'PpaR#=Rci!Ret+RmoRsup'Sche-Ssa?S^$Te-s(Tr>/T <Tu)Zur}3And)C}n>Ce=.DesimoDit&GaLassaLisLod?NingeNoN(/Rcur'R[daR*Schi$SeSse!S *Tal*To@T.!3Agol&CaCel'Che,C)boDol*E,Gl'!La$Li.MosaNe-,NiNo!Ri$R^l*Sce/SsivaS Sur&TezzaTig&T-T.n.4Emon>0Del*Dif~Du*Ga$G'LeLos(Nas.)N]Ndi=Ne+r'Ni,No $N(<Nt#Nvi(RaRde!Rs%#St)Tiv#TosegaT V[zaVim[ Zzo5C}CosaFfaGhe|G='La|Li<l*L^p*Mm?N Ove!Ra,SaS]*S~Te_,To:BabboF+Nomet)Rci(R%eRr#Sce!Str&Tu-,Ut~Vigl'3Bu*saC)siGa^_Goz'Mme$Ofi+Re|R_Ssu$Ttu$Ut-,VeV)t>3Cch?NfaTi@5Bi,Ci_DoMeMi=Rd>R`,RvegeseSt-$T&Tiz?Ttur$Vel/5C,oL/Me)O_Tri!Vo/Z?,:Si0Bedi!BligoElis]L'O*So, 0Cas'<Ch'Cid[.Cor!!Cult&RaUl#0Ier$Or&1Fer+Fri!Fusc#0Ge|GiNu$4AndeseFa|I#IvaOg-m`T!0Agg'Bel>B-EgaIss'<0Do(E!IceNi_)O!_,Ta1Er#In'<Pos 1A]*AfoDi<Ecchi$Ef%eFa$Gan>Igi<Izzon.MaMegg'Na^_O*g'R[@Ribi,T[s?T~Za+Zo0A!Cur&MosiPeda,Pi.SaSid&Ta]*Te0I.ReTago$TimoTob!1A,EstI$Ipa)Oc{UnqueVi&3Io:Cche|CeCif>Del/D)<EseGaGi=Lazzi=Les&Lli@LoLudeN@)N<l*O*O=zzoPr~Rabo/Rcel/Re!Rgo*RiRl#Ro/R^!Rv[zaRz?,Ssi_St%}Tac}To*g?TtumeVo<3Cc#Dal&Do=,Gg'Lo(N&Nd%eNi(/Nnu Nomb-Ns&N /PePi+Rbe<R]r(R@n#Rfor&Rgame=R'@Rmes(R$Rp,s(Rsua(Rtug'Rva(S#!Sis+SoS^fe)Ta*T^<Tu/n.Zzo3Ace!An+At^$Cci$CozzaEgaEt-Ffe)G?`Gol'G)LaLife)L*/Lo+Mpan.Ne+N=No*Ogg?OmboRamideRet>Ri.RolisiTo<Zz>2AceboAn&As`A+$E=r'2ChezzaDe)(DismoEs?Ggi&L[+Ligo$Ll%eLmoni.Lpet+L(Lt)=Lve!M%eMo@)N.Po*(Rfi@Ro(Rpo-R!R++SaSi^_Sses(Stul#Tass'Te!2AnzoAssiAt~Eclu(Ed~Efis(Egi#Elie_Eme!E$t&Epar#Es[zaE.s Eval(I`IncipeIv#Ob,`Ocu-Odur!OfumoOge|OlungaOmessaO$meOpos+O)gaO.(OvaUd[.Ug=Ur{0Iche1Bbl>D~Gil#G$LceL{Lsan.Nt&PazzoPil/Ro:99Ad)Al]saAsiE!/O+:C]l D@pp'D~,Dun#Ff~GazzoG'<G$Mar)MingoMoNdag'N l&P#Pi=Pp!(Satu-Schi#S[.Sseg=St!l*TaVvedu 3A,Cepi!Cin Clu+Cond{Cupe)Dd{Dime!Gal#Gist)Go/G!s(Laz'<M&Mo N=Pl~Prime!Put&SaSid[.Spon(S+u)TeTi=Tor~T^f~Voc#3Assun Badi!Bel,B!zzoCar~C]Ceve!C%l#Cor@C!du D>*Dur!Fas&F,s(For`Fug'G&Gett#Ghel*Lass#Lev#Ma<!MbalzoMed'Morch'Nasci+N})NforzoN$_Nom#Nsav{N c]Nunc?Nv[i!Par#Petu Pie$Port&P!saPuli!Sa+Sch'ServaSibi,SoSpe|S )Sult#S_l Tar@Teg$Tm>T)_Un'<VaVer(Vinci+Vol Zo`5BaBot>Bus Cc?CoDagg'De!D{!G{Ll'Mant>Mpe!Nz'Sol&SpoTan.Ton@Tu/Vesc'5BizzoBr~GaLli$Mi<Mo)(O*PeSs&St>:B#Bbi&Bot#Go`Las(Ldatu-Lgem`Liv&Lmo<Lo<Lt&Lu L_Pe!Pi@Por{Race$R}smoR S((Telli.Ti-Tol*Tur$Va=V'Zi#0Adigl'AlzoAnc#Ar-At.!Av&End&Irci&Locc#Occi#Rin&Ruffo<Uff&0Ab)(Ad[zaA/Ambi&Anda*Apo/Ar(A.n&Av#El En>Ett)HedaHie=IarpaI[zaInde!IppoI)ppoI_*Ler&Odel/Olp{Ompar Onfor Opri!Or+Os(<OzzeseRibaRoll&Ru^n'Uder?Ul !Uo/U)Us&0Ebit&Ogan&0C}tu-Con@Da$Gg'/G=l#G!g#Gu{Lci#Let^_L/Lvagg'Mafo)Mbr&MeMin#Mp!N(N^!Pol Qu[zaRa+Rb#Re$R'Rp[.R-gl'Rvi!S^=To/T^`=0Ace*Ald&Am#Arzo(At%#E-IdaIl#IngeOc#Oder&OgoOl^!Orz#Ra|Rutt#Ugg{Um&U(0Abel*Arb#Onfi&Orb'Rass#Uar@1Bi*C]meEr-G/G$!L[z'L/baMbo*Mpat>Mul#Nfon?Ngo*Nist)NoN.siNu(idePar'S`S ,Tu#2It+Ogatu-Ove$0Arr{Emor#En^ E-l@IlzoOnt&Ott#Uss#0Elli!Erv#O@0BbalzoBr'C]r(C?,Da,Ffi|G$Ld#L[<Li@L/zzoLoLubi,Lv[.Mat>M`NdaNe|Nnife)Pi!Ppe(P-Rge!Rpas(Rri(R(R.gg'R_l#Spi)S+T^,0AdaAl/Arge!A /Av[ Azzo/EcieEdi!Eg<!E/tu-E-nzaEs(!Ett-,Ezz#IaIgo*(Ill#I$(I-,L[di@Or^_O(RangaRec&Ron#RuzzoUn^$0Uil*0Ad%&O l#1Abi,Ac]AffaAgn&Amp#Ant'Arnu Ase-Atu E*EppaErzoI,|I`IrpeIva,Izzo(On#Or>RappoReg#Ridu*Rozz&Ru|Ucc&UfoUp[@0B[t)C](Do!Gger{GoL+$On&PerboPpor Rgel#R)g#Ssur)Tu-0Ag&EdeseEgl'El&Enu Ez?IluppoIs+Izze-Ol+Uot&:Bac]Bul#Cci&Citur$LeLis`$Mpo<Nni$RaRdi_Rg#RiffaRp&R+rugaS Tt>Ver=Vo/+Zza3CaCn>Lefo$Me-r'MpoMu N@<Ne)Ns'<N+]*O!`RmeR-zzoRze|SiSser#St#T)T ?3F&Gel/Mb)N P>Pog-foRagg'RoTan'To*Tuban.Z'Zzo<5Cc&L,r&L Mbo/MoNfoNsil/Paz'Po*g?PpaRbaRn&R)<R -S}$Ssi!S+tu-Ta$2Aboc]AcheaAfi/Aged?Alc'Amon Ans{Apa$Ar!As*]Att#AveEcc?Emol'Espo*Ibu Iche]Ifogl'Il*InceaIoIs.zzaItur#Ivel/OmbaO$OppoO|/Ov&Ucc#2Batu-Ff#Lipa$Mul Nis?Rb&Rchi$TaTe/:0Ic#0Cel*Ci(!0I!I^_1FaF%'0Ua,4IsseTim#0A$I,Orismo0Ci<|Ge!Ghe!seI]r$If%#I($I+r'Te0Vo0Upa1Aga$G[zaLo0AnzaA C{Ig$*U-'0Ensi,IlizzoOp?:Can.Ccin#Gabon@Gli#LangaLgoL>L,t+Lo)(Lut&L_/Mpa+Ng&N{(NoN+gg'Nve-Po!Ra$Rc#R?n.S}3Det+DovaDu Ge+,I]*Lc)Li=Llu LoceN#Ndemm?N RaceRba,Rgog=Rif~RoRru}Rt~,Sc~Ssil*S+,Te-$Tri=Tus 3Andan.B-n.C[daChingoCi=nzaDim&Gil?G< Go!LeL/$MiniNc{!O/Pe-Rgo/Ro*goRu,n S](S'<SpoSsu Su-TaTel*T^`VandaVi@Zi&5CeGaLa^,Le!LpeRagi<5L}$::::Mpog=N=Pp#T.-Vor-3Fi)Lan.LoNze)Rbi$3Be|N]R]<T 5L/T>5Cche)Fo*LuPpa\";\nconst checksum = \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-it]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangIt extends wordlist_owl_js_1.WordlistOwl {\n    /**\n     *  Creates a new instance of the Italian language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langIt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"it\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangIt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangIt();\n        }\n        return wordlist;\n    }\n}\nexports.LangIt = LangIt;\n//# sourceMappingURL=lang-it.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangPt = void 0;\nconst wordlist_owl_js_1 = require(\"./wordlist-owl.js\");\nconst words = \"0arad!ototealirertainrasoent hoandoaR#riareha!aroele'oronul0Aca%AixoAl A%rDuz'El]Er$IsmoO$ R<g(Revi Rig Rup$S*$Solu$Sur=Ut[0Ab#Alm Amp Anh A,Ei.El( En ErvoEss E$naHa.IdezImaI}#Irr Lam LiveOlhidaOmod Opl Ord Um~ Us?0Ap.EgaEnt_Ep$Equ Er-%EsivoEusI<%ItivoJetivoJun$M' Or Qu''UboV(,Vog#0R}ave0As.Er'EtivoIn?Iv` Li$Lu-%R}.0Ach Arr As&/Enci Iliz Io)It#O+R! Res%Rup U d Ul]2O`h Ud Us.1AmedaArmeAstr Av<caB(gueB*oCat+De@EcrimEgr@Er.FaceF*e%GumHeioI Ica%I- Inh Ivi Mof^Oc Pis%T( TitudeUc* Ug UnoUsivoVo0Aci A=rA[loAss BasBi-%EixaEniz I=Is$,Iz!eOl?On$ O_,Ost+P  Pli Pola0Ag+maAlis Arqu@A$m@DaimeElExoG~ Im JoOm&@Ot#Sio,T(i|Uid!eUnci Zol1Ag?Alp Anh#EgoEli=Ert^Es Eti%I$Lau,Lic^OioOn.Os)R-dizRov 0Uec(0AmeAn]A+C^D-%E@Ej Eni$Es)Gilo,GolaMaQuivoRai&Reba%Risc Rob>um S-&T(i&TigoVo[=0F&.Il#P' S?S* So&/Sun$Tr&0Ac#Adu+Al/A[f E End(Er_EuIng'Ir?IvoOl{oRac Revi=RizU&Um0Di$rM-.R>o+TismoT|@Tu 0Ali An%Ar@Ent&Es,I?Is Ul,1Ila1Ar E=Ei%Ulejo:B BosaC&]uCh `C@GagemI<oIl I}e)Ir_Ixis)J~ Le@LizaLsaN&Nd{aN/N'Nque%Ra$Rb#R}es>+c>~/Se#S)n%Ta)Te=rTidaTomTuc Unil]3B(IjoIr^IsebolLd!eLezaLgaLisc Ndi$Ng&aNz(RimbauRl*d>_Sou_XigaZ(_3CoCu=En&Foc&Furc G|naLhe%Mest[Mo$rOlog@OmboOsf(aPol Rr-$Scoi$Sne$SpoSsex$TolaZ _2Ind#OcoOque 2A$BagemC#CejoChec]Ico.L^LetimL]LoMb{oNdeNecoNi)Rb~h>d>e&R+c]V*oXe?2AncoAsaAvezaEuIgaIl/Inc OaOchu+Onze O$Uxo2C]DismoF LeRacoScaS$Z*a:B<aB`oBideBoBri$CauCet^C/r_CiqueDast_De#Fez&IaqueIp'aIxo%J#JuLafrioLc~ Ld{aLibr Lm<%Lo)M^Mbis)MisaMomilaMp<]Mufl Navi&Nc` Ne)NguruN/$Nive%NoaNs#N.Nu=Pac/P`aP* Po.Pric/Pt?PuzRacolRb}oRde&Rec>imb Rn{oRpe%R['>)zRv&/SacoScaSeb[S%loS~oT a)Tiv UleUs?U%l V&oV(na3BolaDil]G}]Lebr L~ Nou+N,N%ioRc Rr#R%'oRvejaTimV^2Aco)Al{aAm#Ap^ArmeAticeAveEfeEg^E'oEqueIco%If[In`oOc&/Ov(UmboU.Uva0CatrizCl}eD!eD['aEn%G<aM-$N$Nz><d>cui$Rurg@T 2A[zaE_Ic OneUbe2A=Ag'Ba@B($rBr C^El/Ent_E,Gum`oIb'IfaIo%L L{aLh(Lid'Lme@L}oLunaM<=Mb* M-.MitivaMov(MplexoMumNc]N=rNec.Nfu,Ng` Nhec(Njug Nsum'Nt+$Nvi%Op( P{oPi?PoQue%lRagemRdi&Rne)R}h>p|&R[ioR%joRuj>voSs-oS%laT}e%U_UveVilZ*]2A%+AvoEcheE=rEmeErEspoI^Im*&Io~oIseItic Os)UaUz{o2B<oEcaId#JoLat+Lm* Lp Ltu+Mpr'Nh#Pi=RativoRr&Rs R$Sp'S% T`o:MascoT 3Ba%rBi.BocheB~h C&queCim&CliveCo%C[.D&Dic#Duz'FesaFum G`oG+uGus.It#Ix La$rLeg#L*e L}gaM<daMit'Moli=Ntis)P-#Pil PoisP[ssaPur Riv>+m SafioSbo.Sc<,S-/Sfi#Sgas%Sigu&SlizeSmam SovaSpesaS)queSvi T&h T-$rT} Tri$UsaV(Vi=Vot#Z-a3Ag+maAle$Da)Fu,Gi.Lat#Lu-%M*u'Nast@Nh{oOceseRe$Sc[)Sf ceSp oSque%Ssip S)n%T?UrnoV(,Vi,rV~g Z(5Br?L|i=M?M*#NativoNz`>m-%Rs&SagemUr#U$r2EnagemIbleOg @2El EndeE$PloQues><%Vi=,:1Lod'O Olog@0Ific It&Uc#1Ei$Etiv 3E.1Ab| Eg(Ei$rEncoEv?Im* Ogi 0B goBol#Br~/Buti=EndaErg'Is,rPat@P-/P*#Polg P[goPurr Ul?0CaixeC-#Ch-%C}t_Deus Doss Faix Fei%FimGaj#G-/Glob Gom#G+x Gu@Jo La.Qu<$Raiz Rol#Rug SaioSe^S*oSop#T<$Te#Tid!eT|.Tr^T~/V(g Vi#Volv(XameX($Xof[Xu$1Id(me0Uip 0E$Gui=Ra)VaVil]0B<j B`$CamaColaCri)Cu)F*geFol F[g Fum#GrimaM&%P<$P`/PigaP}jaP[i)Pum Qu(daTacaT{aTic Tof#T[laTu=Vazi 0AnolIque)0F|i>opeu0Acu Ap| AsivoEntu&Id-%Olu'1Ag(oAl Am* A$Aus$Ces,Ci.Clam Ecu.EmploIb'Ig-%On( P<d'P`'P' Pl< Pos$P[s,P~s T(noT*$T+$:Bric B~o,Ce)Ci&DaDigaIxaL L)Mili Nd<goNf +N$cheRd#R`oR*h>of>p>tu+T@T|V|i)X*aZ-da3Ch#Ijo^I+n%L*oM**oNdaNoR>i#RrugemRv(S%j T&Ud&3ApoB_seC Ch{oGur#L{aL/LmeLtr RmezaSg^Ssu+TaV`aX?Xo2AcidezAm*goAn`aEch^O+Utu Uxo2C&C*/Foc GoGue%IceLg#Lhe$Rj Rmig>noR%ScoSsa2Aga)AldaAngoAscoA%rnoE'aEn%E.IezaI,Itu+On]Ustr U%'a2G'L<oLigemNd NgoNilR?Rio,Tebol:B i$B*e%DoIa$IolaIvo)LegaL/L*]Loc]Nh RagemRfoRg&oRimpoRoup>+faSodu$S$TaTil/Ve)Z`a3L#Le@LoM^M(Mi=N(o,NgivaNi&NomaN_Ologi>?Rm* S,S$r3Nas)Nc<aNg#Raf>*o2Aci&IcoseOb&Orio,2ElaIabaLfeLpe Rdu+Rje)R_S$,T{aV(n 2AcejoAdu&Afi%Al]AmpoAn^Atui$Ave$AxaEgoElh EveIloIs&/I.@Os,O%scoUd#Unhi=U)2AcheA+niAx*imEr[ I Inc/Is#LaLo,Ru:Bi.Rm}@S%V(3C.eRd Res@Si.3A$B(n D+.EnaNoPismoPnosePo%ca5JeLofo%MemNes$Nr#Rm}&Sped 5M|#:Te2E@O,2N|#RejaU<a4E,HaUdi=Um* Ustr 0AgemEd@$En,ErsivoIn-%It?Ort&Pac$Ped'Pl<%P|Pr-saPuneUniz 0Al?Ap$AtivoC-,Ch Cid'Clu'Col|Deci,D'e$Du$rEficazEr-%F<tilFes.F*i$Flam F|m&F+$rG('Ibi=Ici&ImigoJe.Oc-%O=_Ov?OxQuie$Scri$Se$Sist'Spe$rSt& S~$Tac$Tegr&Tim Toc#TrigaVa,rV(noVic$Voc 0Gur%2Ani<oOniz Re&Rit#0CaEn$Ol#Qu{o0Ali<o:N{oNg^N)R ac>dimR_SmimToV&iZida3Jum9An*]Elh^G?I>n&Rr Vem5BaDeuDocaIzLg?L/R#Ris)RoS)::B edaB|&C[C)n%Dril/G )GoaJeMb(M-.M* MpejoNchePid P,R<j>{>gu+S<]St_T(&Ti=V<daVou+Vr?X<%Z(3Ald!eB[G#G-d Gis)IgoIlo Itu+Mb[%MeNh?Ntil]OaSmaS%TivoT['oV VezaVi.3B(&Bi=D( G G{oMi.Mo{oMp?NdaNe N]gemQuidezS)gemSu+T|&V_XaX{a5C?Cu$rJis)MboNaNgeNt+RdeT#T(@Ucu+UsaUv 5ArCidezC_Ne)St[T?Va:CacoCe%Ch#CioD{aDr*]Gna)G[zaI|IsL<d_L]Lo%LucoMiloMo{oMu%N^Nc]Nda$NequimN/,Niv`aNobr NsaN%rNuse Pe#Qu* Rc?Resi>fimRgemR*/Rmi)Ro$RquiseR[coR%loRujoSco%Sm|+SsagemStig Tag&T(noT*&Tu.Xil 3D&]DidaDusaGaf}eIgaL<c@L/rMb_M|i&N*oNosNsagemNt&Rec(Rg~/S^Scl SmoSqui)St[T!eTeo_T+gemX(Xic<o3C_G&]Gr Lag[L- Lh M#N( N/caNist_N|@OloR<%RtiloStur 5Cid!eD(noD~ EdaErIn/I)Ldu+LezaL/L*e%LuscoN)n]Quec><goRcegoR=moR-aSaicoSque%S.daT`TimToTriz5DaI$La)Lh(L.Ndi&Ni=R&h>c/Sc~ SeuSic&:Ci}&D?JaMo_R*>r#Sc(TivaTu[zaV&]Veg Vio3Bl*aB~o,GativaGoci Gri$Rvo,TaUr&VascaVo{o3N N/TidezV` 5B[zaI%IvaMe M*&Rdes%R% T Tici TurnoV`oVil/Vo5Bl#DezM(&Pci&Tr'Vem:0Cec#Edec(JetivoRig#Scu_S%t+T(Tur 0Id-%Io,Orr(Ulis)Up#2Eg<%EnsivaEr-daIc*aUsc#0Iva4Ar@Eo,H Iv{a0B_Ele%Is,It'0D~#E_,Tem1Ci}&Er?On-%OrtunoOs$1ArBi.DemD*&F<a$GasmoG~/I-t&IgemIun=LaTo=xoV&/0Cil S^SoT-.0Imismo0S!@T}oTub_Vi=0El]Ul 1Id Ig- :Ca$Ci-%Co%Ctu D @Dr*/G GodeIn`Ir IsagemLav+Lest+Lhe)Li$Lm^Lpi.Nc^N`aNfle$NquecaN)n&PagaioP`^P'oRaf*>ci&Rd&RedeRtidaSmoSs#S%lTam T-%T* T_noUl^Us 3C~i D& Dest[D@t+D+G^I$r&IxeLeLic<oNcaNdur N{aN]scoNs?N%Rceb(Rfei$Rgun)Ri$Rmit'Rn>plexoRsi<>%nceRucaSc#SquisaS,aTisc 3AdaC#Ed!eGm-$Last+Lh#Lo.M-)Nc`NguimN]No%N.On{oPocaQue%R<h>esRue)Sc S$laT<gaVe%2An)Aque)At*aEbeuUmagemUvi&1Eu0DaE'aEtisaLeg^Lici Lu-%Lvil/M MbaNd( N.@P~o,R)Ssu'St&TeUp U,Vo 2A@Anc]A$AxeEceEd?Efei$Emi Ens Ep  Esil]E%x$Ev-'Ez Ima)IncesaIsmaIv#Oces,Odu$Ofe)Oibi=Oje$Ome%rOpag OsaO%$rOv?2Blic DimL Lm} Ls{aNh&N'PiloRezaX?:99Ad+Ant@Ar$AseEbr EdaEijoEn%Eri=Im}oInaIosque:B<^BiscoCh Ci} Di&I In]IoIvaJ^L#M&Ng(Nhu+P!u+P`PidezPosaQue%Rid!eS<%Scun/Sg Sp?S%'aSur Taz<aTo{a3AlezaAnim Av(Baix B`deBol C#C-%CheioCiboC|d Cru.Cu DeDim'D}daDuzidaEnvioF* Flet'Fog F[scoFugi G&@GimeG+In#I$rJei.LativoM?M-=M|,Nov#P oP`'Ple$Pol/P[saPudi Qu((S-]Sfri Sga.Sid'Solv(Spei$SsacaS)n%Sum'T&/T(T' Tom^T+.V` Vi,rVol)3Ac/CaGidezGo_,M NgueS^ScoS}/5B&oChe=D^DeioDov@E=rLe)M<oNc S#S{aS$TaT{oT*aT~ UcoUpaXo5B_Gi=Go,IvoMoPest[S,:B|Ci ColaCud'DioF'aGaGr^Ib_L^L{oLg#LivaLpic Lsic]L.Lv?Mb Mu+iN Nf}aNgueNid!ePa$Rd>g-$Rje)Tur Ud!eXof}eZ}&3C C~ DaD-$Di#Do,Du$rGm-$G[=Gun=IvaLe$LvagemM<&M-%N?N/rNsu&Nt#P #Rei>*g>+RvoTemb_T|3GiloLhue)Lic}eMetr@Mpat@M~ N&Nc(oNg~ NopseN$ni>-eRiTu#5B(<oB+C|_G_JaLdaLetr L%'oMbrioNa)Nd Neg Nh?NoP+noQue%Rr'R%ioSsegoTaqueT(r V#Z*/5Aviz BidaBm(,B,loBt+'Ca)Ces,CoDes%FixoG?G('Jei$Lfa$M'OrP(i|Plic Pos$Prim'Rd*>fis)Rp[s>[&Rt'Sp'oS%n$:B`aBle%Bu^C/G `aLh(LoLvezM</Mb|imMpaNg-%N$P Pioc>dioRef>j>+xaTuagemUr*oXativoXis)3Atr&C(Ci=Cl#Dio,IaIm Lef}eLh#Mp(oN-%N,rN.Rm&RnoRr-oSeSou+St#ToXtu+Xugo3A+G`aJoloMbr MidezNgi=N%'oRagemT~ 5Al]C]L( LiceM^Mil/N`Ntu+Pe%R>ci=RneioRqueRr!>$S.UcaUp{aX*a2Ab&/Acej Adu$rAfeg Aje$AmaAnc ApoAs{oAt?Av E*oEm(Epid EvoIagemIboIcicloId-%Ilog@Ind!eIploItur Iunf&Oc Ombe)OvaUnfoUque2B~ C<oDoLipaPiRboRm>quesaT` T|i&:7V 3Bigo0HaId!eIf|me3Olog@SoTigaUbu0A=InaUfru':C*aDi G o,I=,LaL-%Lid!eLo[sN)gemQu{oR<d>e)Rr(Sc~ Sil]S,u+Z Zio3A=D Ge.Ic~ L{oLhiceLu=Nce=rNdav&N( Nt[Rb&Rd!eRe?Rg}h>m`/RnizRs R%n%SpaSti=T|i&3Adu$AgemAj Atu+Br?D{aDr @ElaGaG-%Gi G| L ejoNcoNhe)NilOle)R!>tudeSi.S$Tr&V{oZ*/5A=rArG&L<%LeibolL)gemLumo,Nt!e5L$Vuz`a::D[zRope3QueRe.Rife3Ng ::Ng#Rp 3BuL?9Mb Olog@5Mbi=\";\nconst checksum = \"0x2219000926df7b50d8aa0a3d495826b988287df4657fbd100e6fe596c8f737ac\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-pt]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangPt extends wordlist_owl_js_1.WordlistOwl {\n    /**\n     *  Creates a new instance of the Portuguese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langPt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"pt\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangPt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangPt();\n        }\n        return wordlist;\n    }\n}\nexports.LangPt = LangPt;\n//# sourceMappingURL=lang-pt.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LangZh = void 0;\nconst index_js_1 = require(\"../hash/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\nconst wordlist_js_1 = require(\"./wordlist.js\");\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\nconst _wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords(locale) {\n    if (_wordlist[locale] != null) {\n        return _wordlist[locale];\n    }\n    const wordlist = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n        if (locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        wordlist.push((0, index_js_2.toUtf8String)(new Uint8Array(bytes)));\n    }\n    // Verify the computed list matches the official list\n    const checksum = (0, index_js_1.id)(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== Checks[locale]) {\n        throw new Error(`BIP39 Wordlist for ${locale} (Chinese) FAILED`);\n    }\n    /* c8 ignore stop */\n    _wordlist[locale] = wordlist;\n    return wordlist;\n}\nconst wordlists = {};\n/**\n *  The [[link-bip39-zh_cn]] and [[link-bip39-zh_tw]] for\n *  [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nclass LangZh extends wordlist_js_1.Wordlist {\n    /**\n     *  Creates a new instance of the Chinese language Wordlist for\n     *  the %%dialect%%, either ``\"cn\"`` or ``\"tw\"`` for simplified\n     *  or traditional, respectively.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langZhCn]] and [[langZhTw]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor(dialect) { super(\"zh_\" + dialect); }\n    getWord(index) {\n        const words = loadWords(this.locale);\n        (0, index_js_2.assertArgument)(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords(this.locale).indexOf(word);\n    }\n    split(phrase) {\n        phrase = phrase.replace(/(?:\\u3000| )+/g, \"\");\n        return phrase.split(\"\");\n    }\n    /**\n     *  Returns a singleton instance of a ``LangZh`` for %%dialect%%,\n     *  creating it if this is the first time being called.\n     *\n     *  Use the %%dialect%% ``\"cn\"`` or ``\"tw\"`` for simplified or\n     *  traditional, respectively.\n     */\n    static wordlist(dialect) {\n        if (wordlists[dialect] == null) {\n            wordlists[dialect] = new LangZh(dialect);\n        }\n        return wordlists[dialect];\n    }\n}\nexports.LangZh = LangZh;\n//# sourceMappingURL=lang-zh.js.map"]}